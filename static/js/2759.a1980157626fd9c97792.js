"use strict";var R=(M,P,w)=>new Promise((D,E)=>{var g=N=>{try{X(w.next(N))}catch(B){E(B)}},i=N=>{try{X(w.throw(N))}catch(B){E(B)}},X=N=>N.done?D(N.value):Promise.resolve(N.value).then(g,i);X((w=w.apply(M,P)).next())});(self.webpackChunkpro_react_admin=self.webpackChunkpro_react_admin||[]).push([[2759],{69368:function(M,P,w){w.d(P,{c:function(){return d}});var D=w(49360),E=w(49103),g=4;function i(u){return(0,E.Z)(u,g)}var X=i,N=w(43836),B=w(95351);function d(u){var v={options:{directed:u.isDirected(),multigraph:u.isMultigraph(),compound:u.isCompound()},nodes:y(u),edges:T(u)};return D.Z(u.graph())||(v.value=X(u.graph())),v}function y(u){return N.Z(u.nodes(),function(v){var x=u.node(v),O=u.parent(v),S={v};return D.Z(x)||(S.value=x),D.Z(O)||(S.parent=O),S})}function T(u){return N.Z(u.edges(),function(v){var x=u.edge(v),O={v:v.v,w:v.w};return D.Z(v.name)||(O.name=v.name),D.Z(x)||(O.value=x),O})}function p(u){var v=new Graph(u.options).setGraph(u.value);return _.each(u.nodes,function(x){v.setNode(x.v,x.value),x.parent&&v.setParent(x.v,x.parent)}),_.each(u.edges,function(x){v.setEdge({v:x.v,w:x.w,name:x.name},x.value)}),v}},22759:function(M,P,w){w.d(P,{r:function(){return Y}});var D=w(29451),E=w(69368),g=w(48264),i=w(15581),X=w(45625),N=w(19085),B=w(61491);let d={},y={},T={};const p=()=>{y={},T={},d={}},u=(n,t)=>(i.l.trace("In isDecendant",t," ",n," = ",y[t].includes(n)),!!y[t].includes(n)),v=(n,t)=>(i.l.info("Decendants of ",t," is ",y[t]),i.l.info("Edge is ",n),n.v===t||n.w===t?!1:y[t]?y[t].includes(n.v)||u(n.v,t)||u(n.w,t)||y[t].includes(n.w):(i.l.debug("Tilt, ",t,",not in decendants"),!1)),x=(n,t,e,r)=>{i.l.warn("Copying children of ",n,"root",r,"data",t.node(n),r);const s=t.children(n)||[];n!==r&&s.push(n),i.l.warn("Copying (nodes) clusterId",n,"nodes",s),s.forEach(l=>{if(t.children(l).length>0)x(l,t,e,r);else{const h=t.node(l);i.l.info("cp ",l," to ",r," with parent ",n),e.setNode(l,h),r!==t.parent(l)&&(i.l.warn("Setting parent",l,t.parent(l)),e.setParent(l,t.parent(l))),n!==r&&l!==n?(i.l.debug("Setting parent",l,n),e.setParent(l,n)):(i.l.info("In copy ",n,"root",r,"data",t.node(n),r),i.l.debug("Not Setting parent for node=",l,"cluster!==rootId",n!==r,"node!==clusterId",l!==n));const o=t.edges(l);i.l.debug("Copying Edges",o),o.forEach(f=>{i.l.info("Edge",f);const b=t.edge(f.v,f.w,f.name);i.l.info("Edge data",b,r);try{v(f,r)?(i.l.info("Copying as ",f.v,f.w,b,f.name),e.setEdge(f.v,f.w,b,f.name),i.l.info("newGraph edges ",e.edges(),e.edge(e.edges()[0]))):i.l.info("Skipping copy of edge ",f.v,"-->",f.w," rootId: ",r," clusterId:",n)}catch(C){i.l.error(C)}})}i.l.debug("Removing node",l),t.removeNode(l)})},O=(n,t)=>{const e=t.children(n);let r=[...e];for(const s of e)T[s]=n,r=[...r,...O(s,t)];return r},S=(n,t)=>{i.l.trace("Searching",n);const e=t.children(n);if(i.l.trace("Searching children of id ",n,e),e.length<1)return i.l.trace("This is a valid node",n),n;for(const r of e){const s=S(r,t);if(s)return i.l.trace("Found replacement for",n," => ",s),s}},L=n=>!d[n]||!d[n].externalConnections?n:d[n]?d[n].id:n,K=(n,t)=>{if(!n||t>10){i.l.debug("Opting out, no graph ");return}else i.l.debug("Opting in, graph ");n.nodes().forEach(function(e){n.children(e).length>0&&(i.l.warn("Cluster identified",e," Replacement id in edges: ",S(e,n)),y[e]=O(e,n),d[e]={id:S(e,n),clusterData:n.node(e)})}),n.nodes().forEach(function(e){const r=n.children(e),s=n.edges();r.length>0?(i.l.debug("Cluster identified",e,y),s.forEach(l=>{if(l.v!==e&&l.w!==e){const h=u(l.v,e),o=u(l.w,e);h^o&&(i.l.warn("Edge: ",l," leaves cluster ",e),i.l.warn("Decendants of XXX ",e,": ",y[e]),d[e].externalConnections=!0)}})):i.l.debug("Not a cluster ",e,y)}),n.edges().forEach(function(e){const r=n.edge(e);i.l.warn("Edge "+e.v+" -> "+e.w+": "+JSON.stringify(e)),i.l.warn("Edge "+e.v+" -> "+e.w+": "+JSON.stringify(n.edge(e)));let s=e.v,l=e.w;if(i.l.warn("Fix XXX",d,"ids:",e.v,e.w,"Translating: ",d[e.v]," --- ",d[e.w]),d[e.v]&&d[e.w]&&d[e.v]===d[e.w]){i.l.warn("Fixing and trixing link to self - removing XXX",e.v,e.w,e.name),i.l.warn("Fixing and trixing - removing XXX",e.v,e.w,e.name),s=L(e.v),l=L(e.w),n.removeEdge(e.v,e.w,e.name);const h=e.w+"---"+e.v;n.setNode(h,{domId:h,id:h,labelStyle:"",labelText:r.label,padding:0,shape:"labelRect",style:""});const o=JSON.parse(JSON.stringify(r)),f=JSON.parse(JSON.stringify(r));o.label="",o.arrowTypeEnd="none",f.label="",o.fromCluster=e.v,f.toCluster=e.v,n.setEdge(s,h,o,e.name+"-cyclic-special"),n.setEdge(h,l,f,e.name+"-cyclic-special")}else(d[e.v]||d[e.w])&&(i.l.warn("Fixing and trixing - removing XXX",e.v,e.w,e.name),s=L(e.v),l=L(e.w),n.removeEdge(e.v,e.w,e.name),s!==e.v&&(r.fromCluster=e.v),l!==e.w&&(r.toCluster=e.w),i.l.warn("Fix Replacing with XXX",s,l,e.name),n.setEdge(s,l,r,e.name))}),i.l.warn("Adjusted Graph",E.c(n)),A(n,0),i.l.trace(d)},A=(n,t)=>{if(i.l.warn("extractor - ",t,E.c(n),n.children("D")),t>10){i.l.error("Bailing out");return}let e=n.nodes(),r=!1;for(const s of e){const l=n.children(s);r=r||l.length>0}if(!r){i.l.debug("Done, no node has children",n.nodes());return}i.l.debug("Nodes = ",e,t);for(const s of e)if(i.l.debug("Extracting node",s,d,d[s]&&!d[s].externalConnections,!n.parent(s),n.node(s),n.children("D")," Depth ",t),!d[s])i.l.debug("Not a cluster",s,t);else if(!d[s].externalConnections&&n.children(s)&&n.children(s).length>0){i.l.warn("Cluster without external connections, without a parent and with children",s,t);let h=n.graph().rankdir==="TB"?"LR":"TB";d[s]&&d[s].clusterData&&d[s].clusterData.dir&&(h=d[s].clusterData.dir,i.l.warn("Fixing dir",d[s].clusterData.dir,h));const o=new X.k({multigraph:!0,compound:!0}).setGraph({rankdir:h,nodesep:50,ranksep:50,marginx:8,marginy:8}).setDefaultEdgeLabel(function(){return{}});i.l.warn("Old graph before copy",E.c(n)),x(s,n,o,s),n.setNode(s,{clusterNode:!0,id:s,clusterData:d[s].clusterData,labelText:d[s].labelText,graph:o}),i.l.warn("New graph after copy node: (",s,")",E.c(o)),i.l.debug("Old graph after copy",E.c(n))}else i.l.warn("Cluster ** ",s," **not meeting the criteria !externalConnections:",!d[s].externalConnections," no parent: ",!n.parent(s)," children ",n.children(s)&&n.children(s).length>0,n.children("D"),t),i.l.debug(d);e=n.nodes(),i.l.warn("New list of nodes",e);for(const s of e){const l=n.node(s);i.l.warn(" Now next level",s,l),l.clusterNode&&A(l.graph,t+1)}},F=(n,t)=>{if(t.length===0)return[];let e=Object.assign(t);return t.forEach(r=>{const s=n.children(r),l=F(n,s);e=[...e,...l]}),e},U=n=>F(n,n.children()),Z={rect:(n,t)=>{i.l.info("Creating subgraph rect for ",t.id,t);const e=n.insert("g").attr("class","cluster"+(t.class?" "+t.class:"")).attr("id",t.id),r=e.insert("rect",":first-child"),s=(0,i.n)((0,i.c)().flowchart.htmlLabels),l=e.insert("g").attr("class","cluster-label"),h=t.labelType==="markdown"?(0,N.c)(l,t.labelText,{style:t.labelStyle,useHtmlLabels:s}):l.node().appendChild((0,g.c)(t.labelText,t.labelStyle,void 0,!0));let o=h.getBBox();if((0,i.n)((0,i.c)().flowchart.htmlLabels)){const c=h.children[0],m=(0,B.Ys)(h);o=c.getBoundingClientRect(),m.attr("width",o.width),m.attr("height",o.height)}const f=0*t.padding,b=f/2,C=t.width<=o.width+f?o.width+f:t.width;t.width<=o.width+f?t.diff=(o.width-t.width)/2-t.padding/2:t.diff=-t.padding/2,i.l.trace("Data ",t,JSON.stringify(t)),r.attr("style",t.style).attr("rx",t.rx).attr("ry",t.ry).attr("x",t.x-C/2).attr("y",t.y-t.height/2-b).attr("width",C).attr("height",t.height+f),s?l.attr("transform","translate("+(t.x-o.width/2)+", "+(t.y-t.height/2)+")"):l.attr("transform","translate("+t.x+", "+(t.y-t.height/2)+")");const a=r.node().getBBox();return t.width=a.width,t.height=a.height,t.intersect=function(c){return(0,g.i)(t,c)},e},roundedWithTitle:(n,t)=>{const e=n.insert("g").attr("class",t.classes).attr("id",t.id),r=e.insert("rect",":first-child"),s=e.insert("g").attr("class","cluster-label"),l=e.append("rect"),h=s.node().appendChild((0,g.c)(t.labelText,t.labelStyle,void 0,!0));let o=h.getBBox();if((0,i.n)((0,i.c)().flowchart.htmlLabels)){const c=h.children[0],m=(0,B.Ys)(h);o=c.getBoundingClientRect(),m.attr("width",o.width),m.attr("height",o.height)}o=h.getBBox();const f=0*t.padding,b=f/2,C=t.width<=o.width+t.padding?o.width+t.padding:t.width;t.width<=o.width+t.padding?t.diff=(o.width+t.padding*0-t.width)/2:t.diff=-t.padding/2,r.attr("class","outer").attr("x",t.x-C/2-b).attr("y",t.y-t.height/2-b).attr("width",C+f).attr("height",t.height+f),l.attr("class","inner").attr("x",t.x-C/2-b).attr("y",t.y-t.height/2-b+o.height-1).attr("width",C+f).attr("height",t.height+f-o.height-3),s.attr("transform","translate("+(t.x-o.width/2)+", "+(t.y-t.height/2-t.padding/3+((0,i.n)((0,i.c)().flowchart.htmlLabels)?5:3))+")");const a=r.node().getBBox();return t.height=a.height,t.intersect=function(c){return(0,g.i)(t,c)},e},noteGroup:(n,t)=>{const e=n.insert("g").attr("class","note-cluster").attr("id",t.id),r=e.insert("rect",":first-child"),s=0*t.padding,l=s/2;r.attr("rx",t.rx).attr("ry",t.ry).attr("x",t.x-t.width/2-l).attr("y",t.y-t.height/2-l).attr("width",t.width+s).attr("height",t.height+s).attr("fill","none");const h=r.node().getBBox();return t.width=h.width,t.height=h.height,t.intersect=function(o){return(0,g.i)(t,o)},e},divider:(n,t)=>{const e=n.insert("g").attr("class",t.classes).attr("id",t.id),r=e.insert("rect",":first-child"),s=0*t.padding,l=s/2;r.attr("class","divider").attr("x",t.x-t.width/2-l).attr("y",t.y-t.height/2).attr("width",t.width+s).attr("height",t.height+s);const h=r.node().getBBox();return t.width=h.width,t.height=h.height,t.diff=-t.padding/2,t.intersect=function(o){return(0,g.i)(t,o)},e}};let W={};const G=(n,t)=>{i.l.trace("Inserting cluster");const e=t.shape||"rect";W[t.id]=Z[e](n,t)},k=()=>{W={}},j=(n,t,e,r)=>R(this,null,function*(){i.l.info("Graph in recursive render: XXX",E.c(t),r);const s=t.graph().rankdir;i.l.trace("Dir in recursive render - dir:",s);const l=n.insert("g").attr("class","root");t.nodes()?i.l.info("Recursive render XXX",t.nodes()):i.l.info("No nodes found for",t),t.edges().length>0&&i.l.trace("Recursive edges",t.edge(t.edges()[0]));const h=l.insert("g").attr("class","clusters"),o=l.insert("g").attr("class","edgePaths"),f=l.insert("g").attr("class","edgeLabels"),b=l.insert("g").attr("class","nodes");yield Promise.all(t.nodes().map(function(a){return R(this,null,function*(){const c=t.node(a);if(r!==void 0){const m=JSON.parse(JSON.stringify(r.clusterData));i.l.info("Setting data for cluster XXX (",a,") ",m,r),t.setNode(r.id,m),t.parent(a)||(i.l.trace("Setting parent",a,r.id),t.setParent(a,r.id,m))}if(i.l.info("(Insert) Node XXX"+a+": "+JSON.stringify(t.node(a))),c&&c.clusterNode){i.l.info("Cluster identified",a,c.width,t.node(a));const m=yield j(b,c.graph,e,t.node(a)),J=m.elem;(0,g.u)(c,J),c.diff=m.diff||0,i.l.info("Node bounds (abc123)",a,c,c.width,c.x,c.y),(0,g.s)(J,c),i.l.warn("Recursive render complete ",J,c)}else t.children(a).length>0?(i.l.info("Cluster - the non recursive path XXX",a,c.id,c,t),i.l.info(S(c.id,t)),d[c.id]={id:S(c.id,t),node:c}):(i.l.info("Node - the non recursive path",a,c.id,c),yield(0,g.e)(b,t.node(a),s))})})),t.edges().forEach(function(a){const c=t.edge(a.v,a.w,a.name);i.l.info("Edge "+a.v+" -> "+a.w+": "+JSON.stringify(a)),i.l.info("Edge "+a.v+" -> "+a.w+": ",a," ",JSON.stringify(t.edge(a))),i.l.info("Fix",d,"ids:",a.v,a.w,"Translateing: ",d[a.v],d[a.w]),(0,g.f)(f,c)}),t.edges().forEach(function(a){i.l.info("Edge "+a.v+" -> "+a.w+": "+JSON.stringify(a))}),i.l.info("#############################################"),i.l.info("###                Layout                 ###"),i.l.info("#############################################"),i.l.info(t),(0,D.bK)(t),i.l.info("Graph after layout:",E.c(t));let C=0;return U(t).forEach(function(a){const c=t.node(a);i.l.info("Position "+a+": "+JSON.stringify(t.node(a))),i.l.info("Position "+a+": ("+c.x,","+c.y,") width: ",c.width," height: ",c.height),c&&c.clusterNode?(0,g.p)(c):t.children(a).length>0?(G(h,c),d[c.id].node=c):(0,g.p)(c)}),t.edges().forEach(function(a){const c=t.edge(a);i.l.info("Edge "+a.v+" -> "+a.w+": "+JSON.stringify(c),c);const m=(0,g.g)(o,a,c,d,e,t);(0,g.h)(c,m)}),t.nodes().forEach(function(a){const c=t.node(a);i.l.info(a,c.type,c.diff),c.type==="group"&&(C=c.diff)}),{elem:l,diff:C}}),Y=(n,t,e,r,s)=>R(this,null,function*(){(0,g.a)(n,e,r,s),(0,g.b)(),(0,g.d)(),k(),p(),i.l.warn("Graph at first:",E.c(t)),K(t),i.l.warn("Graph after:",E.c(t)),yield j(n,t,r)})}}]);

//# sourceMappingURL=2759.a1980157626fd9c97792.js.map