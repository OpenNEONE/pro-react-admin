{"version":3,"file":"static/js/6448.cee7c801ee2cbee881cb.js","mappings":"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","sources":["webpack://pro-react-admin/./node_modules/extend/index.js","webpack://pro-react-admin/./node_modules/inline-style-parser/index.js","webpack://pro-react-admin/./node_modules/is-buffer/index.js","webpack://pro-react-admin/./node_modules/prop-types/factoryWithThrowingShims.js","webpack://pro-react-admin/./node_modules/prop-types/index.js","webpack://pro-react-admin/./node_modules/prop-types/lib/ReactPropTypesSecret.js","webpack://pro-react-admin/./node_modules/react-markdown/node_modules/react-is/cjs/react-is.production.min.js","webpack://pro-react-admin/./node_modules/react-markdown/node_modules/react-is/index.js","webpack://pro-react-admin/./node_modules/style-to-object/index.js","webpack://pro-react-admin/./node_modules/comma-separated-tokens/index.js","webpack://pro-react-admin/./node_modules/property-information/lib/util/schema.js","webpack://pro-react-admin/./node_modules/property-information/lib/util/merge.js","webpack://pro-react-admin/./node_modules/property-information/lib/util/create.js","webpack://pro-react-admin/./node_modules/property-information/lib/xlink.js","webpack://pro-react-admin/./node_modules/property-information/lib/xml.js","webpack://pro-react-admin/./node_modules/property-information/lib/util/case-sensitive-transform.js","webpack://pro-react-admin/./node_modules/property-information/lib/util/case-insensitive-transform.js","webpack://pro-react-admin/./node_modules/property-information/lib/xmlns.js","webpack://pro-react-admin/./node_modules/property-information/lib/aria.js","webpack://pro-react-admin/./node_modules/property-information/lib/html.js","webpack://pro-react-admin/./node_modules/property-information/lib/svg.js","webpack://pro-react-admin/./node_modules/property-information/index.js","webpack://pro-react-admin/./node_modules/property-information/lib/find.js","webpack://pro-react-admin/./node_modules/property-information/lib/normalize.js","webpack://pro-react-admin/./node_modules/property-information/lib/util/defined-info.js","webpack://pro-react-admin/./node_modules/property-information/lib/util/info.js","webpack://pro-react-admin/./node_modules/property-information/lib/util/types.js","webpack://pro-react-admin/./node_modules/react-markdown/lib/uri-transformer.js","webpack://pro-react-admin/./node_modules/vfile-message/lib/index.js","webpack://pro-react-admin/./node_modules/vfile/lib/minpath.browser.js","webpack://pro-react-admin/./node_modules/vfile/lib/minproc.browser.js","webpack://pro-react-admin/./node_modules/vfile/lib/minurl.shared.js","webpack://pro-react-admin/./node_modules/vfile/lib/minurl.browser.js","webpack://pro-react-admin/./node_modules/vfile/lib/index.js","webpack://pro-react-admin/./node_modules/bail/index.js","webpack://pro-react-admin/./node_modules/unified/node_modules/is-plain-obj/index.js","webpack://pro-react-admin/./node_modules/trough/index.js","webpack://pro-react-admin/./node_modules/unified/lib/index.js","webpack://pro-react-admin/./node_modules/remark-parse/lib/index.js","webpack://pro-react-admin/./node_modules/micromark-util-sanitize-uri/index.js","webpack://pro-react-admin/./node_modules/mdast-util-to-hast/lib/footer.js","webpack://pro-react-admin/./node_modules/unist-util-visit/lib/index.js","webpack://pro-react-admin/./node_modules/unist-util-position/lib/index.js","webpack://pro-react-admin/./node_modules/unist-util-generated/lib/index.js","webpack://pro-react-admin/./node_modules/mdast-util-definitions/lib/index.js","webpack://pro-react-admin/./node_modules/mdast-util-to-hast/lib/handlers/blockquote.js","webpack://pro-react-admin/./node_modules/mdast-util-to-hast/lib/handlers/break.js","webpack://pro-react-admin/./node_modules/mdast-util-to-hast/lib/handlers/code.js","webpack://pro-react-admin/./node_modules/mdast-util-to-hast/lib/handlers/delete.js","webpack://pro-react-admin/./node_modules/mdast-util-to-hast/lib/handlers/emphasis.js","webpack://pro-react-admin/./node_modules/mdast-util-to-hast/lib/handlers/footnote-reference.js","webpack://pro-react-admin/./node_modules/mdast-util-to-hast/lib/handlers/footnote.js","webpack://pro-react-admin/./node_modules/mdast-util-to-hast/lib/handlers/heading.js","webpack://pro-react-admin/./node_modules/mdast-util-to-hast/lib/handlers/html.js","webpack://pro-react-admin/./node_modules/mdast-util-to-hast/lib/revert.js","webpack://pro-react-admin/./node_modules/mdast-util-to-hast/lib/handlers/image-reference.js","webpack://pro-react-admin/./node_modules/mdast-util-to-hast/lib/handlers/image.js","webpack://pro-react-admin/./node_modules/mdast-util-to-hast/lib/handlers/inline-code.js","webpack://pro-react-admin/./node_modules/mdast-util-to-hast/lib/handlers/link-reference.js","webpack://pro-react-admin/./node_modules/mdast-util-to-hast/lib/handlers/link.js","webpack://pro-react-admin/./node_modules/mdast-util-to-hast/lib/handlers/list-item.js","webpack://pro-react-admin/./node_modules/mdast-util-to-hast/lib/handlers/list.js","webpack://pro-react-admin/./node_modules/mdast-util-to-hast/lib/handlers/paragraph.js","webpack://pro-react-admin/./node_modules/mdast-util-to-hast/lib/handlers/root.js","webpack://pro-react-admin/./node_modules/mdast-util-to-hast/lib/handlers/strong.js","webpack://pro-react-admin/./node_modules/mdast-util-to-hast/lib/handlers/table.js","webpack://pro-react-admin/./node_modules/mdast-util-to-hast/lib/handlers/table-row.js","webpack://pro-react-admin/./node_modules/mdast-util-to-hast/lib/handlers/table-cell.js","webpack://pro-react-admin/./node_modules/trim-lines/index.js","webpack://pro-react-admin/./node_modules/mdast-util-to-hast/lib/handlers/text.js","webpack://pro-react-admin/./node_modules/mdast-util-to-hast/lib/handlers/thematic-break.js","webpack://pro-react-admin/./node_modules/mdast-util-to-hast/lib/handlers/index.js","webpack://pro-react-admin/./node_modules/mdast-util-to-hast/lib/state.js","webpack://pro-react-admin/./node_modules/mdast-util-to-hast/lib/index.js","webpack://pro-react-admin/./node_modules/remark-rehype/lib/index.js","webpack://pro-react-admin/./node_modules/react-markdown/lib/rehype-filter.js","webpack://pro-react-admin/./node_modules/hast-util-whitespace/index.js","webpack://pro-react-admin/./node_modules/property-information/lib/hast-to-react.js","webpack://pro-react-admin/./node_modules/style-to-object/index.mjs","webpack://pro-react-admin/./node_modules/react-markdown/lib/ast-to-react.js","webpack://pro-react-admin/./node_modules/react-markdown/lib/react-markdown.js","webpack://pro-react-admin/./node_modules/micromark-extension-gfm-autolink-literal/lib/syntax.js","webpack://pro-react-admin/./node_modules/micromark-extension-gfm-footnote/lib/syntax.js","webpack://pro-react-admin/./node_modules/micromark-extension-gfm-strikethrough/lib/syntax.js","webpack://pro-react-admin/./node_modules/micromark-extension-gfm-table/lib/edit-map.js","webpack://pro-react-admin/./node_modules/micromark-extension-gfm-table/lib/infer.js","webpack://pro-react-admin/./node_modules/micromark-extension-gfm-table/lib/syntax.js","webpack://pro-react-admin/./node_modules/micromark-extension-gfm-task-list-item/lib/syntax.js","webpack://pro-react-admin/./node_modules/micromark-extension-gfm/index.js","webpack://pro-react-admin/./node_modules/ccount/index.js","webpack://pro-react-admin/./node_modules/mdast-util-find-and-replace/node_modules/escape-string-regexp/index.js","webpack://pro-react-admin/./node_modules/mdast-util-find-and-replace/lib/index.js","webpack://pro-react-admin/./node_modules/mdast-util-gfm-autolink-literal/lib/index.js","webpack://pro-react-admin/./node_modules/mdast-util-to-markdown/lib/util/association.js","webpack://pro-react-admin/./node_modules/mdast-util-to-markdown/lib/util/container-flow.js","webpack://pro-react-admin/./node_modules/mdast-util-to-markdown/lib/util/indent-lines.js","webpack://pro-react-admin/./node_modules/mdast-util-to-markdown/lib/util/pattern-compile.js","webpack://pro-react-admin/./node_modules/mdast-util-to-markdown/lib/util/pattern-in-scope.js","webpack://pro-react-admin/./node_modules/mdast-util-to-markdown/lib/util/safe.js","webpack://pro-react-admin/./node_modules/mdast-util-to-markdown/lib/util/track.js","webpack://pro-react-admin/./node_modules/mdast-util-gfm-footnote/lib/index.js","webpack://pro-react-admin/./node_modules/mdast-util-to-markdown/lib/util/container-phrasing.js","webpack://pro-react-admin/./node_modules/mdast-util-gfm-strikethrough/lib/index.js","webpack://pro-react-admin/./node_modules/mdast-util-to-markdown/lib/handle/inline-code.js","webpack://pro-react-admin/./node_modules/markdown-table/index.js","webpack://pro-react-admin/./node_modules/mdast-util-gfm-table/lib/index.js","webpack://pro-react-admin/./node_modules/mdast-util-to-markdown/lib/util/check-bullet.js","webpack://pro-react-admin/./node_modules/mdast-util-to-markdown/lib/util/check-list-item-indent.js","webpack://pro-react-admin/./node_modules/mdast-util-to-markdown/lib/handle/list-item.js","webpack://pro-react-admin/./node_modules/mdast-util-gfm-task-list-item/lib/index.js","webpack://pro-react-admin/./node_modules/mdast-util-gfm/lib/index.js","webpack://pro-react-admin/./node_modules/remark-gfm/index.js","webpack://pro-react-admin/./node_modules/space-separated-tokens/index.js","webpack://pro-react-admin/./node_modules/unist-util-is/lib/index.js","webpack://pro-react-admin/./node_modules/unist-util-visit-parents/lib/color.browser.js","webpack://pro-react-admin/./node_modules/unist-util-visit-parents/lib/index.js"],"sourcesContent":["'use strict';\n\nvar hasOwn = Object.prototype.hasOwnProperty;\nvar toStr = Object.prototype.toString;\nvar defineProperty = Object.defineProperty;\nvar gOPD = Object.getOwnPropertyDescriptor;\n\nvar isArray = function isArray(arr) {\n\tif (typeof Array.isArray === 'function') {\n\t\treturn Array.isArray(arr);\n\t}\n\n\treturn toStr.call(arr) === '[object Array]';\n};\n\nvar isPlainObject = function isPlainObject(obj) {\n\tif (!obj || toStr.call(obj) !== '[object Object]') {\n\t\treturn false;\n\t}\n\n\tvar hasOwnConstructor = hasOwn.call(obj, 'constructor');\n\tvar hasIsPrototypeOf = obj.constructor && obj.constructor.prototype && hasOwn.call(obj.constructor.prototype, 'isPrototypeOf');\n\t// Not own constructor property must be Object\n\tif (obj.constructor && !hasOwnConstructor && !hasIsPrototypeOf) {\n\t\treturn false;\n\t}\n\n\t// Own properties are enumerated firstly, so to speed up,\n\t// if last one is own, then all properties are own.\n\tvar key;\n\tfor (key in obj) { /**/ }\n\n\treturn typeof key === 'undefined' || hasOwn.call(obj, key);\n};\n\n// If name is '__proto__', and Object.defineProperty is available, define __proto__ as an own property on target\nvar setProperty = function setProperty(target, options) {\n\tif (defineProperty && options.name === '__proto__') {\n\t\tdefineProperty(target, options.name, {\n\t\t\tenumerable: true,\n\t\t\tconfigurable: true,\n\t\t\tvalue: options.newValue,\n\t\t\twritable: true\n\t\t});\n\t} else {\n\t\ttarget[options.name] = options.newValue;\n\t}\n};\n\n// Return undefined instead of __proto__ if '__proto__' is not an own property\nvar getProperty = function getProperty(obj, name) {\n\tif (name === '__proto__') {\n\t\tif (!hasOwn.call(obj, name)) {\n\t\t\treturn void 0;\n\t\t} else if (gOPD) {\n\t\t\t// In early versions of node, obj['__proto__'] is buggy when obj has\n\t\t\t// __proto__ as an own property. Object.getOwnPropertyDescriptor() works.\n\t\t\treturn gOPD(obj, name).value;\n\t\t}\n\t}\n\n\treturn obj[name];\n};\n\nmodule.exports = function extend() {\n\tvar options, name, src, copy, copyIsArray, clone;\n\tvar target = arguments[0];\n\tvar i = 1;\n\tvar length = arguments.length;\n\tvar deep = false;\n\n\t// Handle a deep copy situation\n\tif (typeof target === 'boolean') {\n\t\tdeep = target;\n\t\ttarget = arguments[1] || {};\n\t\t// skip the boolean and the target\n\t\ti = 2;\n\t}\n\tif (target == null || (typeof target !== 'object' && typeof target !== 'function')) {\n\t\ttarget = {};\n\t}\n\n\tfor (; i < length; ++i) {\n\t\toptions = arguments[i];\n\t\t// Only deal with non-null/undefined values\n\t\tif (options != null) {\n\t\t\t// Extend the base object\n\t\t\tfor (name in options) {\n\t\t\t\tsrc = getProperty(target, name);\n\t\t\t\tcopy = getProperty(options, name);\n\n\t\t\t\t// Prevent never-ending loop\n\t\t\t\tif (target !== copy) {\n\t\t\t\t\t// Recurse if we're merging plain objects or arrays\n\t\t\t\t\tif (deep && copy && (isPlainObject(copy) || (copyIsArray = isArray(copy)))) {\n\t\t\t\t\t\tif (copyIsArray) {\n\t\t\t\t\t\t\tcopyIsArray = false;\n\t\t\t\t\t\t\tclone = src && isArray(src) ? src : [];\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tclone = src && isPlainObject(src) ? src : {};\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// Never move original objects, clone them\n\t\t\t\t\t\tsetProperty(target, { name: name, newValue: extend(deep, clone, copy) });\n\n\t\t\t\t\t// Don't bring in undefined values\n\t\t\t\t\t} else if (typeof copy !== 'undefined') {\n\t\t\t\t\t\tsetProperty(target, { name: name, newValue: copy });\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\t// Return the modified object\n\treturn target;\n};\n","// http://www.w3.org/TR/CSS21/grammar.html\n// https://github.com/visionmedia/css-parse/pull/49#issuecomment-30088027\nvar COMMENT_REGEX = /\\/\\*[^*]*\\*+([^/*][^*]*\\*+)*\\//g;\n\nvar NEWLINE_REGEX = /\\n/g;\nvar WHITESPACE_REGEX = /^\\s*/;\n\n// declaration\nvar PROPERTY_REGEX = /^(\\*?[-#/*\\\\\\w]+(\\[[0-9a-z_-]+\\])?)\\s*/;\nvar COLON_REGEX = /^:\\s*/;\nvar VALUE_REGEX = /^((?:'(?:\\\\'|.)*?'|\"(?:\\\\\"|.)*?\"|\\([^)]*?\\)|[^};])+)/;\nvar SEMICOLON_REGEX = /^[;\\s]*/;\n\n// https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/String/Trim#Polyfill\nvar TRIM_REGEX = /^\\s+|\\s+$/g;\n\n// strings\nvar NEWLINE = '\\n';\nvar FORWARD_SLASH = '/';\nvar ASTERISK = '*';\nvar EMPTY_STRING = '';\n\n// types\nvar TYPE_COMMENT = 'comment';\nvar TYPE_DECLARATION = 'declaration';\n\n/**\n * @param {String} style\n * @param {Object} [options]\n * @return {Object[]}\n * @throws {TypeError}\n * @throws {Error}\n */\nmodule.exports = function(style, options) {\n  if (typeof style !== 'string') {\n    throw new TypeError('First argument must be a string');\n  }\n\n  if (!style) return [];\n\n  options = options || {};\n\n  /**\n   * Positional.\n   */\n  var lineno = 1;\n  var column = 1;\n\n  /**\n   * Update lineno and column based on `str`.\n   *\n   * @param {String} str\n   */\n  function updatePosition(str) {\n    var lines = str.match(NEWLINE_REGEX);\n    if (lines) lineno += lines.length;\n    var i = str.lastIndexOf(NEWLINE);\n    column = ~i ? str.length - i : column + str.length;\n  }\n\n  /**\n   * Mark position and patch `node.position`.\n   *\n   * @return {Function}\n   */\n  function position() {\n    var start = { line: lineno, column: column };\n    return function(node) {\n      node.position = new Position(start);\n      whitespace();\n      return node;\n    };\n  }\n\n  /**\n   * Store position information for a node.\n   *\n   * @constructor\n   * @property {Object} start\n   * @property {Object} end\n   * @property {undefined|String} source\n   */\n  function Position(start) {\n    this.start = start;\n    this.end = { line: lineno, column: column };\n    this.source = options.source;\n  }\n\n  /**\n   * Non-enumerable source string.\n   */\n  Position.prototype.content = style;\n\n  var errorsList = [];\n\n  /**\n   * Error `msg`.\n   *\n   * @param {String} msg\n   * @throws {Error}\n   */\n  function error(msg) {\n    var err = new Error(\n      options.source + ':' + lineno + ':' + column + ': ' + msg\n    );\n    err.reason = msg;\n    err.filename = options.source;\n    err.line = lineno;\n    err.column = column;\n    err.source = style;\n\n    if (options.silent) {\n      errorsList.push(err);\n    } else {\n      throw err;\n    }\n  }\n\n  /**\n   * Match `re` and return captures.\n   *\n   * @param {RegExp} re\n   * @return {undefined|Array}\n   */\n  function match(re) {\n    var m = re.exec(style);\n    if (!m) return;\n    var str = m[0];\n    updatePosition(str);\n    style = style.slice(str.length);\n    return m;\n  }\n\n  /**\n   * Parse whitespace.\n   */\n  function whitespace() {\n    match(WHITESPACE_REGEX);\n  }\n\n  /**\n   * Parse comments.\n   *\n   * @param {Object[]} [rules]\n   * @return {Object[]}\n   */\n  function comments(rules) {\n    var c;\n    rules = rules || [];\n    while ((c = comment())) {\n      if (c !== false) {\n        rules.push(c);\n      }\n    }\n    return rules;\n  }\n\n  /**\n   * Parse comment.\n   *\n   * @return {Object}\n   * @throws {Error}\n   */\n  function comment() {\n    var pos = position();\n    if (FORWARD_SLASH != style.charAt(0) || ASTERISK != style.charAt(1)) return;\n\n    var i = 2;\n    while (\n      EMPTY_STRING != style.charAt(i) &&\n      (ASTERISK != style.charAt(i) || FORWARD_SLASH != style.charAt(i + 1))\n    ) {\n      ++i;\n    }\n    i += 2;\n\n    if (EMPTY_STRING === style.charAt(i - 1)) {\n      return error('End of comment missing');\n    }\n\n    var str = style.slice(2, i - 2);\n    column += 2;\n    updatePosition(str);\n    style = style.slice(i);\n    column += 2;\n\n    return pos({\n      type: TYPE_COMMENT,\n      comment: str\n    });\n  }\n\n  /**\n   * Parse declaration.\n   *\n   * @return {Object}\n   * @throws {Error}\n   */\n  function declaration() {\n    var pos = position();\n\n    // prop\n    var prop = match(PROPERTY_REGEX);\n    if (!prop) return;\n    comment();\n\n    // :\n    if (!match(COLON_REGEX)) return error(\"property missing ':'\");\n\n    // val\n    var val = match(VALUE_REGEX);\n\n    var ret = pos({\n      type: TYPE_DECLARATION,\n      property: trim(prop[0].replace(COMMENT_REGEX, EMPTY_STRING)),\n      value: val\n        ? trim(val[0].replace(COMMENT_REGEX, EMPTY_STRING))\n        : EMPTY_STRING\n    });\n\n    // ;\n    match(SEMICOLON_REGEX);\n\n    return ret;\n  }\n\n  /**\n   * Parse declarations.\n   *\n   * @return {Object[]}\n   */\n  function declarations() {\n    var decls = [];\n\n    comments(decls);\n\n    // declarations\n    var decl;\n    while ((decl = declaration())) {\n      if (decl !== false) {\n        decls.push(decl);\n        comments(decls);\n      }\n    }\n\n    return decls;\n  }\n\n  whitespace();\n  return declarations();\n};\n\n/**\n * Trim `str`.\n *\n * @param {String} str\n * @return {String}\n */\nfunction trim(str) {\n  return str ? str.replace(TRIM_REGEX, EMPTY_STRING) : EMPTY_STRING;\n}\n","/*!\n * Determine if an object is a Buffer\n *\n * @author   Feross Aboukhadijeh <https://feross.org>\n * @license  MIT\n */\n\nmodule.exports = function isBuffer (obj) {\n  return obj != null && obj.constructor != null &&\n    typeof obj.constructor.isBuffer === 'function' && obj.constructor.isBuffer(obj)\n}\n","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n'use strict';\n\nvar ReactPropTypesSecret = require('./lib/ReactPropTypesSecret');\n\nfunction emptyFunction() {}\nfunction emptyFunctionWithReset() {}\nemptyFunctionWithReset.resetWarningCache = emptyFunction;\n\nmodule.exports = function() {\n  function shim(props, propName, componentName, location, propFullName, secret) {\n    if (secret === ReactPropTypesSecret) {\n      // It is still safe when called from React.\n      return;\n    }\n    var err = new Error(\n      'Calling PropTypes validators directly is not supported by the `prop-types` package. ' +\n      'Use PropTypes.checkPropTypes() to call them. ' +\n      'Read more at http://fb.me/use-check-prop-types'\n    );\n    err.name = 'Invariant Violation';\n    throw err;\n  };\n  shim.isRequired = shim;\n  function getShim() {\n    return shim;\n  };\n  // Important!\n  // Keep this list in sync with production version in `./factoryWithTypeCheckers.js`.\n  var ReactPropTypes = {\n    array: shim,\n    bigint: shim,\n    bool: shim,\n    func: shim,\n    number: shim,\n    object: shim,\n    string: shim,\n    symbol: shim,\n\n    any: shim,\n    arrayOf: getShim,\n    element: shim,\n    elementType: shim,\n    instanceOf: getShim,\n    node: shim,\n    objectOf: getShim,\n    oneOf: getShim,\n    oneOfType: getShim,\n    shape: getShim,\n    exact: getShim,\n\n    checkPropTypes: emptyFunctionWithReset,\n    resetWarningCache: emptyFunction\n  };\n\n  ReactPropTypes.PropTypes = ReactPropTypes;\n\n  return ReactPropTypes;\n};\n","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nif (process.env.NODE_ENV !== 'production') {\n  var ReactIs = require('react-is');\n\n  // By explicitly using `prop-types` you are opting into new development behavior.\n  // http://fb.me/prop-types-in-prod\n  var throwOnDirectAccess = true;\n  module.exports = require('./factoryWithTypeCheckers')(ReactIs.isElement, throwOnDirectAccess);\n} else {\n  // By explicitly using `prop-types` you are opting into new production behavior.\n  // http://fb.me/prop-types-in-prod\n  module.exports = require('./factoryWithThrowingShims')();\n}\n","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n'use strict';\n\nvar ReactPropTypesSecret = 'SECRET_DO_NOT_PASS_THIS_OR_YOU_WILL_BE_FIRED';\n\nmodule.exports = ReactPropTypesSecret;\n","/**\n * @license React\n * react-is.production.min.js\n *\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n'use strict';var b=Symbol.for(\"react.element\"),c=Symbol.for(\"react.portal\"),d=Symbol.for(\"react.fragment\"),e=Symbol.for(\"react.strict_mode\"),f=Symbol.for(\"react.profiler\"),g=Symbol.for(\"react.provider\"),h=Symbol.for(\"react.context\"),k=Symbol.for(\"react.server_context\"),l=Symbol.for(\"react.forward_ref\"),m=Symbol.for(\"react.suspense\"),n=Symbol.for(\"react.suspense_list\"),p=Symbol.for(\"react.memo\"),q=Symbol.for(\"react.lazy\"),t=Symbol.for(\"react.offscreen\"),u;u=Symbol.for(\"react.module.reference\");\nfunction v(a){if(\"object\"===typeof a&&null!==a){var r=a.$$typeof;switch(r){case b:switch(a=a.type,a){case d:case f:case e:case m:case n:return a;default:switch(a=a&&a.$$typeof,a){case k:case h:case l:case q:case p:case g:return a;default:return r}}case c:return r}}}exports.ContextConsumer=h;exports.ContextProvider=g;exports.Element=b;exports.ForwardRef=l;exports.Fragment=d;exports.Lazy=q;exports.Memo=p;exports.Portal=c;exports.Profiler=f;exports.StrictMode=e;exports.Suspense=m;\nexports.SuspenseList=n;exports.isAsyncMode=function(){return!1};exports.isConcurrentMode=function(){return!1};exports.isContextConsumer=function(a){return v(a)===h};exports.isContextProvider=function(a){return v(a)===g};exports.isElement=function(a){return\"object\"===typeof a&&null!==a&&a.$$typeof===b};exports.isForwardRef=function(a){return v(a)===l};exports.isFragment=function(a){return v(a)===d};exports.isLazy=function(a){return v(a)===q};exports.isMemo=function(a){return v(a)===p};\nexports.isPortal=function(a){return v(a)===c};exports.isProfiler=function(a){return v(a)===f};exports.isStrictMode=function(a){return v(a)===e};exports.isSuspense=function(a){return v(a)===m};exports.isSuspenseList=function(a){return v(a)===n};\nexports.isValidElementType=function(a){return\"string\"===typeof a||\"function\"===typeof a||a===d||a===f||a===e||a===m||a===n||a===t||\"object\"===typeof a&&null!==a&&(a.$$typeof===q||a.$$typeof===p||a.$$typeof===g||a.$$typeof===h||a.$$typeof===l||a.$$typeof===u||void 0!==a.getModuleId)?!0:!1};exports.typeOf=v;\n","'use strict';\n\nif (process.env.NODE_ENV === 'production') {\n  module.exports = require('./cjs/react-is.production.min.js');\n} else {\n  module.exports = require('./cjs/react-is.development.js');\n}\n","var parse = require('inline-style-parser');\n\n/**\n * Parses inline style to object.\n *\n * @example\n * // returns { 'line-height': '42' }\n * StyleToObject('line-height: 42;');\n *\n * @param  {String}      style      - The inline style.\n * @param  {Function}    [iterator] - The iterator function.\n * @return {null|Object}\n */\nfunction StyleToObject(style, iterator) {\n  var output = null;\n  if (!style || typeof style !== 'string') {\n    return output;\n  }\n\n  var declaration;\n  var declarations = parse(style);\n  var hasIterator = typeof iterator === 'function';\n  var property;\n  var value;\n\n  for (var i = 0, len = declarations.length; i < len; i++) {\n    declaration = declarations[i];\n    property = declaration.property;\n    value = declaration.value;\n\n    if (hasIterator) {\n      iterator(property, value, declaration);\n    } else if (value) {\n      output || (output = {});\n      output[property] = value;\n    }\n  }\n\n  return output;\n}\n\nmodule.exports = StyleToObject;\nmodule.exports.default = StyleToObject; // ESM support\n","/**\n * @typedef Options\n *   Configuration for `stringify`.\n * @property {boolean} [padLeft=true]\n *   Whether to pad a space before a token.\n * @property {boolean} [padRight=false]\n *   Whether to pad a space after a token.\n */\n\n/**\n * @typedef {Options} StringifyOptions\n *   Please use `StringifyOptions` instead.\n */\n\n/**\n * Parse comma-separated tokens to an array.\n *\n * @param {string} value\n *   Comma-separated tokens.\n * @returns {Array<string>}\n *   List of tokens.\n */\nexport function parse(value) {\n  /** @type {Array<string>} */\n  const tokens = []\n  const input = String(value || '')\n  let index = input.indexOf(',')\n  let start = 0\n  /** @type {boolean} */\n  let end = false\n\n  while (!end) {\n    if (index === -1) {\n      index = input.length\n      end = true\n    }\n\n    const token = input.slice(start, index).trim()\n\n    if (token || !end) {\n      tokens.push(token)\n    }\n\n    start = index + 1\n    index = input.indexOf(',', start)\n  }\n\n  return tokens\n}\n\n/**\n * Serialize an array of strings or numbers to comma-separated tokens.\n *\n * @param {Array<string|number>} values\n *   List of tokens.\n * @param {Options} [options]\n *   Configuration for `stringify` (optional).\n * @returns {string}\n *   Comma-separated tokens.\n */\nexport function stringify(values, options) {\n  const settings = options || {}\n\n  // Ensure the last empty entry is seen.\n  const input = values[values.length - 1] === '' ? [...values, ''] : values\n\n  return input\n    .join(\n      (settings.padRight ? ' ' : '') +\n        ',' +\n        (settings.padLeft === false ? '' : ' ')\n    )\n    .trim()\n}\n","/**\n * @typedef {import('./info.js').Info} Info\n * @typedef {Record<string, Info>} Properties\n * @typedef {Record<string, string>} Normal\n */\n\nexport class Schema {\n  /**\n   * @constructor\n   * @param {Properties} property\n   * @param {Normal} normal\n   * @param {string} [space]\n   */\n  constructor(property, normal, space) {\n    this.property = property\n    this.normal = normal\n    if (space) {\n      this.space = space\n    }\n  }\n}\n\n/** @type {Properties} */\nSchema.prototype.property = {}\n/** @type {Normal} */\nSchema.prototype.normal = {}\n/** @type {string|null} */\nSchema.prototype.space = null\n","/**\n * @typedef {import('./schema.js').Properties} Properties\n * @typedef {import('./schema.js').Normal} Normal\n */\n\nimport {Schema} from './schema.js'\n\n/**\n * @param {Schema[]} definitions\n * @param {string} [space]\n * @returns {Schema}\n */\nexport function merge(definitions, space) {\n  /** @type {Properties} */\n  const property = {}\n  /** @type {Normal} */\n  const normal = {}\n  let index = -1\n\n  while (++index < definitions.length) {\n    Object.assign(property, definitions[index].property)\n    Object.assign(normal, definitions[index].normal)\n  }\n\n  return new Schema(property, normal, space)\n}\n","/**\n * @typedef {import('./schema.js').Properties} Properties\n * @typedef {import('./schema.js').Normal} Normal\n *\n * @typedef {Record<string, string>} Attributes\n *\n * @typedef {Object} Definition\n * @property {Record<string, number|null>} properties\n * @property {(attributes: Attributes, property: string) => string} transform\n * @property {string} [space]\n * @property {Attributes} [attributes]\n * @property {Array<string>} [mustUseProperty]\n */\n\nimport {normalize} from '../normalize.js'\nimport {Schema} from './schema.js'\nimport {DefinedInfo} from './defined-info.js'\n\nconst own = {}.hasOwnProperty\n\n/**\n * @param {Definition} definition\n * @returns {Schema}\n */\nexport function create(definition) {\n  /** @type {Properties} */\n  const property = {}\n  /** @type {Normal} */\n  const normal = {}\n  /** @type {string} */\n  let prop\n\n  for (prop in definition.properties) {\n    if (own.call(definition.properties, prop)) {\n      const value = definition.properties[prop]\n      const info = new DefinedInfo(\n        prop,\n        definition.transform(definition.attributes || {}, prop),\n        value,\n        definition.space\n      )\n\n      if (\n        definition.mustUseProperty &&\n        definition.mustUseProperty.includes(prop)\n      ) {\n        info.mustUseProperty = true\n      }\n\n      property[prop] = info\n\n      normal[normalize(prop)] = prop\n      normal[normalize(info.attribute)] = prop\n    }\n  }\n\n  return new Schema(property, normal, definition.space)\n}\n","import {create} from './util/create.js'\n\nexport const xlink = create({\n  space: 'xlink',\n  transform(_, prop) {\n    return 'xlink:' + prop.slice(5).toLowerCase()\n  },\n  properties: {\n    xLinkActuate: null,\n    xLinkArcRole: null,\n    xLinkHref: null,\n    xLinkRole: null,\n    xLinkShow: null,\n    xLinkTitle: null,\n    xLinkType: null\n  }\n})\n","import {create} from './util/create.js'\n\nexport const xml = create({\n  space: 'xml',\n  transform(_, prop) {\n    return 'xml:' + prop.slice(3).toLowerCase()\n  },\n  properties: {xmlLang: null, xmlBase: null, xmlSpace: null}\n})\n","/**\n * @param {Record<string, string>} attributes\n * @param {string} attribute\n * @returns {string}\n */\nexport function caseSensitiveTransform(attributes, attribute) {\n  return attribute in attributes ? attributes[attribute] : attribute\n}\n","import {caseSensitiveTransform} from './case-sensitive-transform.js'\n\n/**\n * @param {Record<string, string>} attributes\n * @param {string} property\n * @returns {string}\n */\nexport function caseInsensitiveTransform(attributes, property) {\n  return caseSensitiveTransform(attributes, property.toLowerCase())\n}\n","import {create} from './util/create.js'\nimport {caseInsensitiveTransform} from './util/case-insensitive-transform.js'\n\nexport const xmlns = create({\n  space: 'xmlns',\n  attributes: {xmlnsxlink: 'xmlns:xlink'},\n  transform: caseInsensitiveTransform,\n  properties: {xmlns: null, xmlnsXLink: null}\n})\n","import {booleanish, number, spaceSeparated} from './util/types.js'\nimport {create} from './util/create.js'\n\nexport const aria = create({\n  transform(_, prop) {\n    return prop === 'role' ? prop : 'aria-' + prop.slice(4).toLowerCase()\n  },\n  properties: {\n    ariaActiveDescendant: null,\n    ariaAtomic: booleanish,\n    ariaAutoComplete: null,\n    ariaBusy: booleanish,\n    ariaChecked: booleanish,\n    ariaColCount: number,\n    ariaColIndex: number,\n    ariaColSpan: number,\n    ariaControls: spaceSeparated,\n    ariaCurrent: null,\n    ariaDescribedBy: spaceSeparated,\n    ariaDetails: null,\n    ariaDisabled: booleanish,\n    ariaDropEffect: spaceSeparated,\n    ariaErrorMessage: null,\n    ariaExpanded: booleanish,\n    ariaFlowTo: spaceSeparated,\n    ariaGrabbed: booleanish,\n    ariaHasPopup: null,\n    ariaHidden: booleanish,\n    ariaInvalid: null,\n    ariaKeyShortcuts: null,\n    ariaLabel: null,\n    ariaLabelledBy: spaceSeparated,\n    ariaLevel: number,\n    ariaLive: null,\n    ariaModal: booleanish,\n    ariaMultiLine: booleanish,\n    ariaMultiSelectable: booleanish,\n    ariaOrientation: null,\n    ariaOwns: spaceSeparated,\n    ariaPlaceholder: null,\n    ariaPosInSet: number,\n    ariaPressed: booleanish,\n    ariaReadOnly: booleanish,\n    ariaRelevant: null,\n    ariaRequired: booleanish,\n    ariaRoleDescription: spaceSeparated,\n    ariaRowCount: number,\n    ariaRowIndex: number,\n    ariaRowSpan: number,\n    ariaSelected: booleanish,\n    ariaSetSize: number,\n    ariaSort: null,\n    ariaValueMax: number,\n    ariaValueMin: number,\n    ariaValueNow: number,\n    ariaValueText: null,\n    role: null\n  }\n})\n","import {\n  boolean,\n  overloadedBoolean,\n  booleanish,\n  number,\n  spaceSeparated,\n  commaSeparated\n} from './util/types.js'\nimport {create} from './util/create.js'\nimport {caseInsensitiveTransform} from './util/case-insensitive-transform.js'\n\nexport const html = create({\n  space: 'html',\n  attributes: {\n    acceptcharset: 'accept-charset',\n    classname: 'class',\n    htmlfor: 'for',\n    httpequiv: 'http-equiv'\n  },\n  transform: caseInsensitiveTransform,\n  mustUseProperty: ['checked', 'multiple', 'muted', 'selected'],\n  properties: {\n    // Standard Properties.\n    abbr: null,\n    accept: commaSeparated,\n    acceptCharset: spaceSeparated,\n    accessKey: spaceSeparated,\n    action: null,\n    allow: null,\n    allowFullScreen: boolean,\n    allowPaymentRequest: boolean,\n    allowUserMedia: boolean,\n    alt: null,\n    as: null,\n    async: boolean,\n    autoCapitalize: null,\n    autoComplete: spaceSeparated,\n    autoFocus: boolean,\n    autoPlay: boolean,\n    capture: boolean,\n    charSet: null,\n    checked: boolean,\n    cite: null,\n    className: spaceSeparated,\n    cols: number,\n    colSpan: null,\n    content: null,\n    contentEditable: booleanish,\n    controls: boolean,\n    controlsList: spaceSeparated,\n    coords: number | commaSeparated,\n    crossOrigin: null,\n    data: null,\n    dateTime: null,\n    decoding: null,\n    default: boolean,\n    defer: boolean,\n    dir: null,\n    dirName: null,\n    disabled: boolean,\n    download: overloadedBoolean,\n    draggable: booleanish,\n    encType: null,\n    enterKeyHint: null,\n    form: null,\n    formAction: null,\n    formEncType: null,\n    formMethod: null,\n    formNoValidate: boolean,\n    formTarget: null,\n    headers: spaceSeparated,\n    height: number,\n    hidden: boolean,\n    high: number,\n    href: null,\n    hrefLang: null,\n    htmlFor: spaceSeparated,\n    httpEquiv: spaceSeparated,\n    id: null,\n    imageSizes: null,\n    imageSrcSet: null,\n    inputMode: null,\n    integrity: null,\n    is: null,\n    isMap: boolean,\n    itemId: null,\n    itemProp: spaceSeparated,\n    itemRef: spaceSeparated,\n    itemScope: boolean,\n    itemType: spaceSeparated,\n    kind: null,\n    label: null,\n    lang: null,\n    language: null,\n    list: null,\n    loading: null,\n    loop: boolean,\n    low: number,\n    manifest: null,\n    max: null,\n    maxLength: number,\n    media: null,\n    method: null,\n    min: null,\n    minLength: number,\n    multiple: boolean,\n    muted: boolean,\n    name: null,\n    nonce: null,\n    noModule: boolean,\n    noValidate: boolean,\n    onAbort: null,\n    onAfterPrint: null,\n    onAuxClick: null,\n    onBeforeMatch: null,\n    onBeforePrint: null,\n    onBeforeUnload: null,\n    onBlur: null,\n    onCancel: null,\n    onCanPlay: null,\n    onCanPlayThrough: null,\n    onChange: null,\n    onClick: null,\n    onClose: null,\n    onContextLost: null,\n    onContextMenu: null,\n    onContextRestored: null,\n    onCopy: null,\n    onCueChange: null,\n    onCut: null,\n    onDblClick: null,\n    onDrag: null,\n    onDragEnd: null,\n    onDragEnter: null,\n    onDragExit: null,\n    onDragLeave: null,\n    onDragOver: null,\n    onDragStart: null,\n    onDrop: null,\n    onDurationChange: null,\n    onEmptied: null,\n    onEnded: null,\n    onError: null,\n    onFocus: null,\n    onFormData: null,\n    onHashChange: null,\n    onInput: null,\n    onInvalid: null,\n    onKeyDown: null,\n    onKeyPress: null,\n    onKeyUp: null,\n    onLanguageChange: null,\n    onLoad: null,\n    onLoadedData: null,\n    onLoadedMetadata: null,\n    onLoadEnd: null,\n    onLoadStart: null,\n    onMessage: null,\n    onMessageError: null,\n    onMouseDown: null,\n    onMouseEnter: null,\n    onMouseLeave: null,\n    onMouseMove: null,\n    onMouseOut: null,\n    onMouseOver: null,\n    onMouseUp: null,\n    onOffline: null,\n    onOnline: null,\n    onPageHide: null,\n    onPageShow: null,\n    onPaste: null,\n    onPause: null,\n    onPlay: null,\n    onPlaying: null,\n    onPopState: null,\n    onProgress: null,\n    onRateChange: null,\n    onRejectionHandled: null,\n    onReset: null,\n    onResize: null,\n    onScroll: null,\n    onScrollEnd: null,\n    onSecurityPolicyViolation: null,\n    onSeeked: null,\n    onSeeking: null,\n    onSelect: null,\n    onSlotChange: null,\n    onStalled: null,\n    onStorage: null,\n    onSubmit: null,\n    onSuspend: null,\n    onTimeUpdate: null,\n    onToggle: null,\n    onUnhandledRejection: null,\n    onUnload: null,\n    onVolumeChange: null,\n    onWaiting: null,\n    onWheel: null,\n    open: boolean,\n    optimum: number,\n    pattern: null,\n    ping: spaceSeparated,\n    placeholder: null,\n    playsInline: boolean,\n    poster: null,\n    preload: null,\n    readOnly: boolean,\n    referrerPolicy: null,\n    rel: spaceSeparated,\n    required: boolean,\n    reversed: boolean,\n    rows: number,\n    rowSpan: number,\n    sandbox: spaceSeparated,\n    scope: null,\n    scoped: boolean,\n    seamless: boolean,\n    selected: boolean,\n    shape: null,\n    size: number,\n    sizes: null,\n    slot: null,\n    span: number,\n    spellCheck: booleanish,\n    src: null,\n    srcDoc: null,\n    srcLang: null,\n    srcSet: null,\n    start: number,\n    step: null,\n    style: null,\n    tabIndex: number,\n    target: null,\n    title: null,\n    translate: null,\n    type: null,\n    typeMustMatch: boolean,\n    useMap: null,\n    value: booleanish,\n    width: number,\n    wrap: null,\n\n    // Legacy.\n    // See: https://html.spec.whatwg.org/#other-elements,-attributes-and-apis\n    align: null, // Several. Use CSS `text-align` instead,\n    aLink: null, // `<body>`. Use CSS `a:active {color}` instead\n    archive: spaceSeparated, // `<object>`. List of URIs to archives\n    axis: null, // `<td>` and `<th>`. Use `scope` on `<th>`\n    background: null, // `<body>`. Use CSS `background-image` instead\n    bgColor: null, // `<body>` and table elements. Use CSS `background-color` instead\n    border: number, // `<table>`. Use CSS `border-width` instead,\n    borderColor: null, // `<table>`. Use CSS `border-color` instead,\n    bottomMargin: number, // `<body>`\n    cellPadding: null, // `<table>`\n    cellSpacing: null, // `<table>`\n    char: null, // Several table elements. When `align=char`, sets the character to align on\n    charOff: null, // Several table elements. When `char`, offsets the alignment\n    classId: null, // `<object>`\n    clear: null, // `<br>`. Use CSS `clear` instead\n    code: null, // `<object>`\n    codeBase: null, // `<object>`\n    codeType: null, // `<object>`\n    color: null, // `<font>` and `<hr>`. Use CSS instead\n    compact: boolean, // Lists. Use CSS to reduce space between items instead\n    declare: boolean, // `<object>`\n    event: null, // `<script>`\n    face: null, // `<font>`. Use CSS instead\n    frame: null, // `<table>`\n    frameBorder: null, // `<iframe>`. Use CSS `border` instead\n    hSpace: number, // `<img>` and `<object>`\n    leftMargin: number, // `<body>`\n    link: null, // `<body>`. Use CSS `a:link {color: *}` instead\n    longDesc: null, // `<frame>`, `<iframe>`, and `<img>`. Use an `<a>`\n    lowSrc: null, // `<img>`. Use a `<picture>`\n    marginHeight: number, // `<body>`\n    marginWidth: number, // `<body>`\n    noResize: boolean, // `<frame>`\n    noHref: boolean, // `<area>`. Use no href instead of an explicit `nohref`\n    noShade: boolean, // `<hr>`. Use background-color and height instead of borders\n    noWrap: boolean, // `<td>` and `<th>`\n    object: null, // `<applet>`\n    profile: null, // `<head>`\n    prompt: null, // `<isindex>`\n    rev: null, // `<link>`\n    rightMargin: number, // `<body>`\n    rules: null, // `<table>`\n    scheme: null, // `<meta>`\n    scrolling: booleanish, // `<frame>`. Use overflow in the child context\n    standby: null, // `<object>`\n    summary: null, // `<table>`\n    text: null, // `<body>`. Use CSS `color` instead\n    topMargin: number, // `<body>`\n    valueType: null, // `<param>`\n    version: null, // `<html>`. Use a doctype.\n    vAlign: null, // Several. Use CSS `vertical-align` instead\n    vLink: null, // `<body>`. Use CSS `a:visited {color}` instead\n    vSpace: number, // `<img>` and `<object>`\n\n    // Non-standard Properties.\n    allowTransparency: null,\n    autoCorrect: null,\n    autoSave: null,\n    disablePictureInPicture: boolean,\n    disableRemotePlayback: boolean,\n    prefix: null,\n    property: null,\n    results: number,\n    security: null,\n    unselectable: null\n  }\n})\n","import {\n  boolean,\n  number,\n  spaceSeparated,\n  commaSeparated,\n  commaOrSpaceSeparated\n} from './util/types.js'\nimport {create} from './util/create.js'\nimport {caseSensitiveTransform} from './util/case-sensitive-transform.js'\n\nexport const svg = create({\n  space: 'svg',\n  attributes: {\n    accentHeight: 'accent-height',\n    alignmentBaseline: 'alignment-baseline',\n    arabicForm: 'arabic-form',\n    baselineShift: 'baseline-shift',\n    capHeight: 'cap-height',\n    className: 'class',\n    clipPath: 'clip-path',\n    clipRule: 'clip-rule',\n    colorInterpolation: 'color-interpolation',\n    colorInterpolationFilters: 'color-interpolation-filters',\n    colorProfile: 'color-profile',\n    colorRendering: 'color-rendering',\n    crossOrigin: 'crossorigin',\n    dataType: 'datatype',\n    dominantBaseline: 'dominant-baseline',\n    enableBackground: 'enable-background',\n    fillOpacity: 'fill-opacity',\n    fillRule: 'fill-rule',\n    floodColor: 'flood-color',\n    floodOpacity: 'flood-opacity',\n    fontFamily: 'font-family',\n    fontSize: 'font-size',\n    fontSizeAdjust: 'font-size-adjust',\n    fontStretch: 'font-stretch',\n    fontStyle: 'font-style',\n    fontVariant: 'font-variant',\n    fontWeight: 'font-weight',\n    glyphName: 'glyph-name',\n    glyphOrientationHorizontal: 'glyph-orientation-horizontal',\n    glyphOrientationVertical: 'glyph-orientation-vertical',\n    hrefLang: 'hreflang',\n    horizAdvX: 'horiz-adv-x',\n    horizOriginX: 'horiz-origin-x',\n    horizOriginY: 'horiz-origin-y',\n    imageRendering: 'image-rendering',\n    letterSpacing: 'letter-spacing',\n    lightingColor: 'lighting-color',\n    markerEnd: 'marker-end',\n    markerMid: 'marker-mid',\n    markerStart: 'marker-start',\n    navDown: 'nav-down',\n    navDownLeft: 'nav-down-left',\n    navDownRight: 'nav-down-right',\n    navLeft: 'nav-left',\n    navNext: 'nav-next',\n    navPrev: 'nav-prev',\n    navRight: 'nav-right',\n    navUp: 'nav-up',\n    navUpLeft: 'nav-up-left',\n    navUpRight: 'nav-up-right',\n    onAbort: 'onabort',\n    onActivate: 'onactivate',\n    onAfterPrint: 'onafterprint',\n    onBeforePrint: 'onbeforeprint',\n    onBegin: 'onbegin',\n    onCancel: 'oncancel',\n    onCanPlay: 'oncanplay',\n    onCanPlayThrough: 'oncanplaythrough',\n    onChange: 'onchange',\n    onClick: 'onclick',\n    onClose: 'onclose',\n    onCopy: 'oncopy',\n    onCueChange: 'oncuechange',\n    onCut: 'oncut',\n    onDblClick: 'ondblclick',\n    onDrag: 'ondrag',\n    onDragEnd: 'ondragend',\n    onDragEnter: 'ondragenter',\n    onDragExit: 'ondragexit',\n    onDragLeave: 'ondragleave',\n    onDragOver: 'ondragover',\n    onDragStart: 'ondragstart',\n    onDrop: 'ondrop',\n    onDurationChange: 'ondurationchange',\n    onEmptied: 'onemptied',\n    onEnd: 'onend',\n    onEnded: 'onended',\n    onError: 'onerror',\n    onFocus: 'onfocus',\n    onFocusIn: 'onfocusin',\n    onFocusOut: 'onfocusout',\n    onHashChange: 'onhashchange',\n    onInput: 'oninput',\n    onInvalid: 'oninvalid',\n    onKeyDown: 'onkeydown',\n    onKeyPress: 'onkeypress',\n    onKeyUp: 'onkeyup',\n    onLoad: 'onload',\n    onLoadedData: 'onloadeddata',\n    onLoadedMetadata: 'onloadedmetadata',\n    onLoadStart: 'onloadstart',\n    onMessage: 'onmessage',\n    onMouseDown: 'onmousedown',\n    onMouseEnter: 'onmouseenter',\n    onMouseLeave: 'onmouseleave',\n    onMouseMove: 'onmousemove',\n    onMouseOut: 'onmouseout',\n    onMouseOver: 'onmouseover',\n    onMouseUp: 'onmouseup',\n    onMouseWheel: 'onmousewheel',\n    onOffline: 'onoffline',\n    onOnline: 'ononline',\n    onPageHide: 'onpagehide',\n    onPageShow: 'onpageshow',\n    onPaste: 'onpaste',\n    onPause: 'onpause',\n    onPlay: 'onplay',\n    onPlaying: 'onplaying',\n    onPopState: 'onpopstate',\n    onProgress: 'onprogress',\n    onRateChange: 'onratechange',\n    onRepeat: 'onrepeat',\n    onReset: 'onreset',\n    onResize: 'onresize',\n    onScroll: 'onscroll',\n    onSeeked: 'onseeked',\n    onSeeking: 'onseeking',\n    onSelect: 'onselect',\n    onShow: 'onshow',\n    onStalled: 'onstalled',\n    onStorage: 'onstorage',\n    onSubmit: 'onsubmit',\n    onSuspend: 'onsuspend',\n    onTimeUpdate: 'ontimeupdate',\n    onToggle: 'ontoggle',\n    onUnload: 'onunload',\n    onVolumeChange: 'onvolumechange',\n    onWaiting: 'onwaiting',\n    onZoom: 'onzoom',\n    overlinePosition: 'overline-position',\n    overlineThickness: 'overline-thickness',\n    paintOrder: 'paint-order',\n    panose1: 'panose-1',\n    pointerEvents: 'pointer-events',\n    referrerPolicy: 'referrerpolicy',\n    renderingIntent: 'rendering-intent',\n    shapeRendering: 'shape-rendering',\n    stopColor: 'stop-color',\n    stopOpacity: 'stop-opacity',\n    strikethroughPosition: 'strikethrough-position',\n    strikethroughThickness: 'strikethrough-thickness',\n    strokeDashArray: 'stroke-dasharray',\n    strokeDashOffset: 'stroke-dashoffset',\n    strokeLineCap: 'stroke-linecap',\n    strokeLineJoin: 'stroke-linejoin',\n    strokeMiterLimit: 'stroke-miterlimit',\n    strokeOpacity: 'stroke-opacity',\n    strokeWidth: 'stroke-width',\n    tabIndex: 'tabindex',\n    textAnchor: 'text-anchor',\n    textDecoration: 'text-decoration',\n    textRendering: 'text-rendering',\n    typeOf: 'typeof',\n    underlinePosition: 'underline-position',\n    underlineThickness: 'underline-thickness',\n    unicodeBidi: 'unicode-bidi',\n    unicodeRange: 'unicode-range',\n    unitsPerEm: 'units-per-em',\n    vAlphabetic: 'v-alphabetic',\n    vHanging: 'v-hanging',\n    vIdeographic: 'v-ideographic',\n    vMathematical: 'v-mathematical',\n    vectorEffect: 'vector-effect',\n    vertAdvY: 'vert-adv-y',\n    vertOriginX: 'vert-origin-x',\n    vertOriginY: 'vert-origin-y',\n    wordSpacing: 'word-spacing',\n    writingMode: 'writing-mode',\n    xHeight: 'x-height',\n    // These were camelcased in Tiny. Now lowercased in SVG 2\n    playbackOrder: 'playbackorder',\n    timelineBegin: 'timelinebegin'\n  },\n  transform: caseSensitiveTransform,\n  properties: {\n    about: commaOrSpaceSeparated,\n    accentHeight: number,\n    accumulate: null,\n    additive: null,\n    alignmentBaseline: null,\n    alphabetic: number,\n    amplitude: number,\n    arabicForm: null,\n    ascent: number,\n    attributeName: null,\n    attributeType: null,\n    azimuth: number,\n    bandwidth: null,\n    baselineShift: null,\n    baseFrequency: null,\n    baseProfile: null,\n    bbox: null,\n    begin: null,\n    bias: number,\n    by: null,\n    calcMode: null,\n    capHeight: number,\n    className: spaceSeparated,\n    clip: null,\n    clipPath: null,\n    clipPathUnits: null,\n    clipRule: null,\n    color: null,\n    colorInterpolation: null,\n    colorInterpolationFilters: null,\n    colorProfile: null,\n    colorRendering: null,\n    content: null,\n    contentScriptType: null,\n    contentStyleType: null,\n    crossOrigin: null,\n    cursor: null,\n    cx: null,\n    cy: null,\n    d: null,\n    dataType: null,\n    defaultAction: null,\n    descent: number,\n    diffuseConstant: number,\n    direction: null,\n    display: null,\n    dur: null,\n    divisor: number,\n    dominantBaseline: null,\n    download: boolean,\n    dx: null,\n    dy: null,\n    edgeMode: null,\n    editable: null,\n    elevation: number,\n    enableBackground: null,\n    end: null,\n    event: null,\n    exponent: number,\n    externalResourcesRequired: null,\n    fill: null,\n    fillOpacity: number,\n    fillRule: null,\n    filter: null,\n    filterRes: null,\n    filterUnits: null,\n    floodColor: null,\n    floodOpacity: null,\n    focusable: null,\n    focusHighlight: null,\n    fontFamily: null,\n    fontSize: null,\n    fontSizeAdjust: null,\n    fontStretch: null,\n    fontStyle: null,\n    fontVariant: null,\n    fontWeight: null,\n    format: null,\n    fr: null,\n    from: null,\n    fx: null,\n    fy: null,\n    g1: commaSeparated,\n    g2: commaSeparated,\n    glyphName: commaSeparated,\n    glyphOrientationHorizontal: null,\n    glyphOrientationVertical: null,\n    glyphRef: null,\n    gradientTransform: null,\n    gradientUnits: null,\n    handler: null,\n    hanging: number,\n    hatchContentUnits: null,\n    hatchUnits: null,\n    height: null,\n    href: null,\n    hrefLang: null,\n    horizAdvX: number,\n    horizOriginX: number,\n    horizOriginY: number,\n    id: null,\n    ideographic: number,\n    imageRendering: null,\n    initialVisibility: null,\n    in: null,\n    in2: null,\n    intercept: number,\n    k: number,\n    k1: number,\n    k2: number,\n    k3: number,\n    k4: number,\n    kernelMatrix: commaOrSpaceSeparated,\n    kernelUnitLength: null,\n    keyPoints: null, // SEMI_COLON_SEPARATED\n    keySplines: null, // SEMI_COLON_SEPARATED\n    keyTimes: null, // SEMI_COLON_SEPARATED\n    kerning: null,\n    lang: null,\n    lengthAdjust: null,\n    letterSpacing: null,\n    lightingColor: null,\n    limitingConeAngle: number,\n    local: null,\n    markerEnd: null,\n    markerMid: null,\n    markerStart: null,\n    markerHeight: null,\n    markerUnits: null,\n    markerWidth: null,\n    mask: null,\n    maskContentUnits: null,\n    maskUnits: null,\n    mathematical: null,\n    max: null,\n    media: null,\n    mediaCharacterEncoding: null,\n    mediaContentEncodings: null,\n    mediaSize: number,\n    mediaTime: null,\n    method: null,\n    min: null,\n    mode: null,\n    name: null,\n    navDown: null,\n    navDownLeft: null,\n    navDownRight: null,\n    navLeft: null,\n    navNext: null,\n    navPrev: null,\n    navRight: null,\n    navUp: null,\n    navUpLeft: null,\n    navUpRight: null,\n    numOctaves: null,\n    observer: null,\n    offset: null,\n    onAbort: null,\n    onActivate: null,\n    onAfterPrint: null,\n    onBeforePrint: null,\n    onBegin: null,\n    onCancel: null,\n    onCanPlay: null,\n    onCanPlayThrough: null,\n    onChange: null,\n    onClick: null,\n    onClose: null,\n    onCopy: null,\n    onCueChange: null,\n    onCut: null,\n    onDblClick: null,\n    onDrag: null,\n    onDragEnd: null,\n    onDragEnter: null,\n    onDragExit: null,\n    onDragLeave: null,\n    onDragOver: null,\n    onDragStart: null,\n    onDrop: null,\n    onDurationChange: null,\n    onEmptied: null,\n    onEnd: null,\n    onEnded: null,\n    onError: null,\n    onFocus: null,\n    onFocusIn: null,\n    onFocusOut: null,\n    onHashChange: null,\n    onInput: null,\n    onInvalid: null,\n    onKeyDown: null,\n    onKeyPress: null,\n    onKeyUp: null,\n    onLoad: null,\n    onLoadedData: null,\n    onLoadedMetadata: null,\n    onLoadStart: null,\n    onMessage: null,\n    onMouseDown: null,\n    onMouseEnter: null,\n    onMouseLeave: null,\n    onMouseMove: null,\n    onMouseOut: null,\n    onMouseOver: null,\n    onMouseUp: null,\n    onMouseWheel: null,\n    onOffline: null,\n    onOnline: null,\n    onPageHide: null,\n    onPageShow: null,\n    onPaste: null,\n    onPause: null,\n    onPlay: null,\n    onPlaying: null,\n    onPopState: null,\n    onProgress: null,\n    onRateChange: null,\n    onRepeat: null,\n    onReset: null,\n    onResize: null,\n    onScroll: null,\n    onSeeked: null,\n    onSeeking: null,\n    onSelect: null,\n    onShow: null,\n    onStalled: null,\n    onStorage: null,\n    onSubmit: null,\n    onSuspend: null,\n    onTimeUpdate: null,\n    onToggle: null,\n    onUnload: null,\n    onVolumeChange: null,\n    onWaiting: null,\n    onZoom: null,\n    opacity: null,\n    operator: null,\n    order: null,\n    orient: null,\n    orientation: null,\n    origin: null,\n    overflow: null,\n    overlay: null,\n    overlinePosition: number,\n    overlineThickness: number,\n    paintOrder: null,\n    panose1: null,\n    path: null,\n    pathLength: number,\n    patternContentUnits: null,\n    patternTransform: null,\n    patternUnits: null,\n    phase: null,\n    ping: spaceSeparated,\n    pitch: null,\n    playbackOrder: null,\n    pointerEvents: null,\n    points: null,\n    pointsAtX: number,\n    pointsAtY: number,\n    pointsAtZ: number,\n    preserveAlpha: null,\n    preserveAspectRatio: null,\n    primitiveUnits: null,\n    propagate: null,\n    property: commaOrSpaceSeparated,\n    r: null,\n    radius: null,\n    referrerPolicy: null,\n    refX: null,\n    refY: null,\n    rel: commaOrSpaceSeparated,\n    rev: commaOrSpaceSeparated,\n    renderingIntent: null,\n    repeatCount: null,\n    repeatDur: null,\n    requiredExtensions: commaOrSpaceSeparated,\n    requiredFeatures: commaOrSpaceSeparated,\n    requiredFonts: commaOrSpaceSeparated,\n    requiredFormats: commaOrSpaceSeparated,\n    resource: null,\n    restart: null,\n    result: null,\n    rotate: null,\n    rx: null,\n    ry: null,\n    scale: null,\n    seed: null,\n    shapeRendering: null,\n    side: null,\n    slope: null,\n    snapshotTime: null,\n    specularConstant: number,\n    specularExponent: number,\n    spreadMethod: null,\n    spacing: null,\n    startOffset: null,\n    stdDeviation: null,\n    stemh: null,\n    stemv: null,\n    stitchTiles: null,\n    stopColor: null,\n    stopOpacity: null,\n    strikethroughPosition: number,\n    strikethroughThickness: number,\n    string: null,\n    stroke: null,\n    strokeDashArray: commaOrSpaceSeparated,\n    strokeDashOffset: null,\n    strokeLineCap: null,\n    strokeLineJoin: null,\n    strokeMiterLimit: number,\n    strokeOpacity: number,\n    strokeWidth: null,\n    style: null,\n    surfaceScale: number,\n    syncBehavior: null,\n    syncBehaviorDefault: null,\n    syncMaster: null,\n    syncTolerance: null,\n    syncToleranceDefault: null,\n    systemLanguage: commaOrSpaceSeparated,\n    tabIndex: number,\n    tableValues: null,\n    target: null,\n    targetX: number,\n    targetY: number,\n    textAnchor: null,\n    textDecoration: null,\n    textRendering: null,\n    textLength: null,\n    timelineBegin: null,\n    title: null,\n    transformBehavior: null,\n    type: null,\n    typeOf: commaOrSpaceSeparated,\n    to: null,\n    transform: null,\n    u1: null,\n    u2: null,\n    underlinePosition: number,\n    underlineThickness: number,\n    unicode: null,\n    unicodeBidi: null,\n    unicodeRange: null,\n    unitsPerEm: number,\n    values: null,\n    vAlphabetic: number,\n    vMathematical: number,\n    vectorEffect: null,\n    vHanging: number,\n    vIdeographic: number,\n    version: null,\n    vertAdvY: number,\n    vertOriginX: number,\n    vertOriginY: number,\n    viewBox: null,\n    viewTarget: null,\n    visibility: null,\n    width: null,\n    widths: null,\n    wordSpacing: null,\n    writingMode: null,\n    x: null,\n    x1: null,\n    x2: null,\n    xChannelSelector: null,\n    xHeight: number,\n    y: null,\n    y1: null,\n    y2: null,\n    yChannelSelector: null,\n    z: null,\n    zoomAndPan: null\n  }\n})\n","/**\n * @typedef {import('./lib/util/info.js').Info} Info\n * @typedef {import('./lib/util/schema.js').Schema} Schema\n */\n\nimport {merge} from './lib/util/merge.js'\nimport {xlink} from './lib/xlink.js'\nimport {xml} from './lib/xml.js'\nimport {xmlns} from './lib/xmlns.js'\nimport {aria} from './lib/aria.js'\nimport {html as htmlBase} from './lib/html.js'\nimport {svg as svgBase} from './lib/svg.js'\n\nexport {find} from './lib/find.js'\nexport {hastToReact} from './lib/hast-to-react.js'\nexport {normalize} from './lib/normalize.js'\nexport const html = merge([xml, xlink, xmlns, aria, htmlBase], 'html')\nexport const svg = merge([xml, xlink, xmlns, aria, svgBase], 'svg')\n","/**\n * @typedef {import('./util/schema.js').Schema} Schema\n */\n\nimport {normalize} from './normalize.js'\nimport {DefinedInfo} from './util/defined-info.js'\nimport {Info} from './util/info.js'\n\nconst valid = /^data[-\\w.:]+$/i\nconst dash = /-[a-z]/g\nconst cap = /[A-Z]/g\n\n/**\n * @param {Schema} schema\n * @param {string} value\n * @returns {Info}\n */\nexport function find(schema, value) {\n  const normal = normalize(value)\n  let prop = value\n  let Type = Info\n\n  if (normal in schema.normal) {\n    return schema.property[schema.normal[normal]]\n  }\n\n  if (normal.length > 4 && normal.slice(0, 4) === 'data' && valid.test(value)) {\n    // Attribute or property.\n    if (value.charAt(4) === '-') {\n      // Turn it into a property.\n      const rest = value.slice(5).replace(dash, camelcase)\n      prop = 'data' + rest.charAt(0).toUpperCase() + rest.slice(1)\n    } else {\n      // Turn it into an attribute.\n      const rest = value.slice(4)\n\n      if (!dash.test(rest)) {\n        let dashes = rest.replace(cap, kebab)\n\n        if (dashes.charAt(0) !== '-') {\n          dashes = '-' + dashes\n        }\n\n        value = 'data' + dashes\n      }\n    }\n\n    Type = DefinedInfo\n  }\n\n  return new Type(prop, value)\n}\n\n/**\n * @param {string} $0\n * @returns {string}\n */\nfunction kebab($0) {\n  return '-' + $0.toLowerCase()\n}\n\n/**\n * @param {string} $0\n * @returns {string}\n */\nfunction camelcase($0) {\n  return $0.charAt(1).toUpperCase()\n}\n","/**\n * @param {string} value\n * @returns {string}\n */\nexport function normalize(value) {\n  return value.toLowerCase()\n}\n","import {Info} from './info.js'\nimport * as types from './types.js'\n\n/** @type {Array<keyof types>} */\n// @ts-expect-error: hush.\nconst checks = Object.keys(types)\n\nexport class DefinedInfo extends Info {\n  /**\n   * @constructor\n   * @param {string} property\n   * @param {string} attribute\n   * @param {number|null} [mask]\n   * @param {string} [space]\n   */\n  constructor(property, attribute, mask, space) {\n    let index = -1\n\n    super(property, attribute)\n\n    mark(this, 'space', space)\n\n    if (typeof mask === 'number') {\n      while (++index < checks.length) {\n        const check = checks[index]\n        mark(this, checks[index], (mask & types[check]) === types[check])\n      }\n    }\n  }\n}\n\nDefinedInfo.prototype.defined = true\n\n/**\n * @param {DefinedInfo} values\n * @param {string} key\n * @param {unknown} value\n */\nfunction mark(values, key, value) {\n  if (value) {\n    // @ts-expect-error: assume `value` matches the expected value of `key`.\n    values[key] = value\n  }\n}\n","export class Info {\n  /**\n   * @constructor\n   * @param {string} property\n   * @param {string} attribute\n   */\n  constructor(property, attribute) {\n    /** @type {string} */\n    this.property = property\n    /** @type {string} */\n    this.attribute = attribute\n  }\n}\n\n/** @type {string|null} */\nInfo.prototype.space = null\nInfo.prototype.boolean = false\nInfo.prototype.booleanish = false\nInfo.prototype.overloadedBoolean = false\nInfo.prototype.number = false\nInfo.prototype.commaSeparated = false\nInfo.prototype.spaceSeparated = false\nInfo.prototype.commaOrSpaceSeparated = false\nInfo.prototype.mustUseProperty = false\nInfo.prototype.defined = false\n","let powers = 0\n\nexport const boolean = increment()\nexport const booleanish = increment()\nexport const overloadedBoolean = increment()\nexport const number = increment()\nexport const spaceSeparated = increment()\nexport const commaSeparated = increment()\nexport const commaOrSpaceSeparated = increment()\n\nfunction increment() {\n  return 2 ** ++powers\n}\n","const protocols = ['http', 'https', 'mailto', 'tel']\n\n/**\n * @param {string} uri\n * @returns {string}\n */\nexport function uriTransformer(uri) {\n  const url = (uri || '').trim()\n  const first = url.charAt(0)\n\n  if (first === '#' || first === '/') {\n    return url\n  }\n\n  const colon = url.indexOf(':')\n  if (colon === -1) {\n    return url\n  }\n\n  let index = -1\n\n  while (++index < protocols.length) {\n    const protocol = protocols[index]\n\n    if (\n      colon === protocol.length &&\n      url.slice(0, protocol.length).toLowerCase() === protocol\n    ) {\n      return url\n    }\n  }\n\n  index = url.indexOf('?')\n  if (index !== -1 && colon > index) {\n    return url\n  }\n\n  index = url.indexOf('#')\n  if (index !== -1 && colon > index) {\n    return url\n  }\n\n  // eslint-disable-next-line no-script-url\n  return 'javascript:void(0)'\n}\n","/**\n * @typedef {import('unist').Node} Node\n * @typedef {import('unist').Position} Position\n * @typedef {import('unist').Point} Point\n * @typedef {object & {type: string, position?: Position | undefined}} NodeLike\n */\n\nimport {stringifyPosition} from 'unist-util-stringify-position'\n\n/**\n * Message.\n */\nexport class VFileMessage extends Error {\n  /**\n   * Create a message for `reason` at `place` from `origin`.\n   *\n   * When an error is passed in as `reason`, the `stack` is copied.\n   *\n   * @param {string | Error | VFileMessage} reason\n   *   Reason for message, uses the stack and message of the error if given.\n   *\n   *   > 👉 **Note**: you should use markdown.\n   * @param {Node | NodeLike | Position | Point | null | undefined} [place]\n   *   Place in file where the message occurred.\n   * @param {string | null | undefined} [origin]\n   *   Place in code where the message originates (example:\n   *   `'my-package:my-rule'` or `'my-rule'`).\n   * @returns\n   *   Instance of `VFileMessage`.\n   */\n  // To do: next major: expose `undefined` everywhere instead of `null`.\n  constructor(reason, place, origin) {\n    /** @type {[string | null, string | null]} */\n    const parts = [null, null]\n    /** @type {Position} */\n    let position = {\n      // @ts-expect-error: we always follows the structure of `position`.\n      start: {line: null, column: null},\n      // @ts-expect-error: \"\n      end: {line: null, column: null}\n    }\n\n    super()\n\n    if (typeof place === 'string') {\n      origin = place\n      place = undefined\n    }\n\n    if (typeof origin === 'string') {\n      const index = origin.indexOf(':')\n\n      if (index === -1) {\n        parts[1] = origin\n      } else {\n        parts[0] = origin.slice(0, index)\n        parts[1] = origin.slice(index + 1)\n      }\n    }\n\n    if (place) {\n      // Node.\n      if ('type' in place || 'position' in place) {\n        if (place.position) {\n          // To do: next major: deep clone.\n          // @ts-expect-error: looks like a position.\n          position = place.position\n        }\n      }\n      // Position.\n      else if ('start' in place || 'end' in place) {\n        // @ts-expect-error: looks like a position.\n        // To do: next major: deep clone.\n        position = place\n      }\n      // Point.\n      else if ('line' in place || 'column' in place) {\n        // To do: next major: deep clone.\n        position.start = place\n      }\n    }\n\n    // Fields from `Error`.\n    /**\n     * Serialized positional info of error.\n     *\n     * On normal errors, this would be something like `ParseError`, buit in\n     * `VFile` messages we use this space to show where an error happened.\n     */\n    this.name = stringifyPosition(place) || '1:1'\n\n    /**\n     * Reason for message.\n     *\n     * @type {string}\n     */\n    this.message = typeof reason === 'object' ? reason.message : reason\n\n    /**\n     * Stack of message.\n     *\n     * This is used by normal errors to show where something happened in\n     * programming code, irrelevant for `VFile` messages,\n     *\n     * @type {string}\n     */\n    this.stack = ''\n\n    if (typeof reason === 'object' && reason.stack) {\n      this.stack = reason.stack\n    }\n\n    /**\n     * Reason for message.\n     *\n     * > 👉 **Note**: you should use markdown.\n     *\n     * @type {string}\n     */\n    this.reason = this.message\n\n    /* eslint-disable no-unused-expressions */\n    /**\n     * State of problem.\n     *\n     * * `true` — marks associated file as no longer processable (error)\n     * * `false` — necessitates a (potential) change (warning)\n     * * `null | undefined` — for things that might not need changing (info)\n     *\n     * @type {boolean | null | undefined}\n     */\n    this.fatal\n\n    /**\n     * Starting line of error.\n     *\n     * @type {number | null}\n     */\n    this.line = position.start.line\n\n    /**\n     * Starting column of error.\n     *\n     * @type {number | null}\n     */\n    this.column = position.start.column\n\n    /**\n     * Full unist position.\n     *\n     * @type {Position | null}\n     */\n    this.position = position\n\n    /**\n     * Namespace of message (example: `'my-package'`).\n     *\n     * @type {string | null}\n     */\n    this.source = parts[0]\n\n    /**\n     * Category of message (example: `'my-rule'`).\n     *\n     * @type {string | null}\n     */\n    this.ruleId = parts[1]\n\n    /**\n     * Path of a file (used throughout the `VFile` ecosystem).\n     *\n     * @type {string | null}\n     */\n    this.file\n\n    // The following fields are “well known”.\n    // Not standard.\n    // Feel free to add other non-standard fields to your messages.\n\n    /**\n     * Specify the source value that’s being reported, which is deemed\n     * incorrect.\n     *\n     * @type {string | null}\n     */\n    this.actual\n\n    /**\n     * Suggest acceptable values that can be used instead of `actual`.\n     *\n     * @type {Array<string> | null}\n     */\n    this.expected\n\n    /**\n     * Link to docs for the message.\n     *\n     * > 👉 **Note**: this must be an absolute URL that can be passed as `x`\n     * > to `new URL(x)`.\n     *\n     * @type {string | null}\n     */\n    this.url\n\n    /**\n     * Long form description of the message (you should use markdown).\n     *\n     * @type {string | null}\n     */\n    this.note\n    /* eslint-enable no-unused-expressions */\n  }\n}\n\nVFileMessage.prototype.file = ''\nVFileMessage.prototype.name = ''\nVFileMessage.prototype.reason = ''\nVFileMessage.prototype.message = ''\nVFileMessage.prototype.stack = ''\nVFileMessage.prototype.fatal = null\nVFileMessage.prototype.column = null\nVFileMessage.prototype.line = null\nVFileMessage.prototype.source = null\nVFileMessage.prototype.ruleId = null\nVFileMessage.prototype.position = null\n","// A derivative work based on:\n// <https://github.com/browserify/path-browserify>.\n// Which is licensed:\n//\n// MIT License\n//\n// Copyright (c) 2013 James Halliday\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy of\n// this software and associated documentation files (the \"Software\"), to deal in\n// the Software without restriction, including without limitation the rights to\n// use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of\n// the Software, and to permit persons to whom the Software is furnished to do so,\n// subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in all\n// copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS\n// FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR\n// COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER\n// IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN\n// CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n// A derivative work based on:\n//\n// Parts of that are extracted from Node’s internal `path` module:\n// <https://github.com/nodejs/node/blob/master/lib/path.js>.\n// Which is licensed:\n//\n// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\nexport const path = {basename, dirname, extname, join, sep: '/'}\n\n/* eslint-disable max-depth, complexity */\n\n/**\n * Get the basename from a path.\n *\n * @param {string} path\n *   File path.\n * @param {string | undefined} [ext]\n *   Extension to strip.\n * @returns {string}\n *   Stem or basename.\n */\nfunction basename(path, ext) {\n  if (ext !== undefined && typeof ext !== 'string') {\n    throw new TypeError('\"ext\" argument must be a string')\n  }\n\n  assertPath(path)\n  let start = 0\n  let end = -1\n  let index = path.length\n  /** @type {boolean | undefined} */\n  let seenNonSlash\n\n  if (ext === undefined || ext.length === 0 || ext.length > path.length) {\n    while (index--) {\n      if (path.charCodeAt(index) === 47 /* `/` */) {\n        // If we reached a path separator that was not part of a set of path\n        // separators at the end of the string, stop now.\n        if (seenNonSlash) {\n          start = index + 1\n          break\n        }\n      } else if (end < 0) {\n        // We saw the first non-path separator, mark this as the end of our\n        // path component.\n        seenNonSlash = true\n        end = index + 1\n      }\n    }\n\n    return end < 0 ? '' : path.slice(start, end)\n  }\n\n  if (ext === path) {\n    return ''\n  }\n\n  let firstNonSlashEnd = -1\n  let extIndex = ext.length - 1\n\n  while (index--) {\n    if (path.charCodeAt(index) === 47 /* `/` */) {\n      // If we reached a path separator that was not part of a set of path\n      // separators at the end of the string, stop now.\n      if (seenNonSlash) {\n        start = index + 1\n        break\n      }\n    } else {\n      if (firstNonSlashEnd < 0) {\n        // We saw the first non-path separator, remember this index in case\n        // we need it if the extension ends up not matching.\n        seenNonSlash = true\n        firstNonSlashEnd = index + 1\n      }\n\n      if (extIndex > -1) {\n        // Try to match the explicit extension.\n        if (path.charCodeAt(index) === ext.charCodeAt(extIndex--)) {\n          if (extIndex < 0) {\n            // We matched the extension, so mark this as the end of our path\n            // component\n            end = index\n          }\n        } else {\n          // Extension does not match, so our result is the entire path\n          // component\n          extIndex = -1\n          end = firstNonSlashEnd\n        }\n      }\n    }\n  }\n\n  if (start === end) {\n    end = firstNonSlashEnd\n  } else if (end < 0) {\n    end = path.length\n  }\n\n  return path.slice(start, end)\n}\n\n/**\n * Get the dirname from a path.\n *\n * @param {string} path\n *   File path.\n * @returns {string}\n *   File path.\n */\nfunction dirname(path) {\n  assertPath(path)\n\n  if (path.length === 0) {\n    return '.'\n  }\n\n  let end = -1\n  let index = path.length\n  /** @type {boolean | undefined} */\n  let unmatchedSlash\n\n  // Prefix `--` is important to not run on `0`.\n  while (--index) {\n    if (path.charCodeAt(index) === 47 /* `/` */) {\n      if (unmatchedSlash) {\n        end = index\n        break\n      }\n    } else if (!unmatchedSlash) {\n      // We saw the first non-path separator\n      unmatchedSlash = true\n    }\n  }\n\n  return end < 0\n    ? path.charCodeAt(0) === 47 /* `/` */\n      ? '/'\n      : '.'\n    : end === 1 && path.charCodeAt(0) === 47 /* `/` */\n    ? '//'\n    : path.slice(0, end)\n}\n\n/**\n * Get an extname from a path.\n *\n * @param {string} path\n *   File path.\n * @returns {string}\n *   Extname.\n */\nfunction extname(path) {\n  assertPath(path)\n\n  let index = path.length\n\n  let end = -1\n  let startPart = 0\n  let startDot = -1\n  // Track the state of characters (if any) we see before our first dot and\n  // after any path separator we find.\n  let preDotState = 0\n  /** @type {boolean | undefined} */\n  let unmatchedSlash\n\n  while (index--) {\n    const code = path.charCodeAt(index)\n\n    if (code === 47 /* `/` */) {\n      // If we reached a path separator that was not part of a set of path\n      // separators at the end of the string, stop now.\n      if (unmatchedSlash) {\n        startPart = index + 1\n        break\n      }\n\n      continue\n    }\n\n    if (end < 0) {\n      // We saw the first non-path separator, mark this as the end of our\n      // extension.\n      unmatchedSlash = true\n      end = index + 1\n    }\n\n    if (code === 46 /* `.` */) {\n      // If this is our first dot, mark it as the start of our extension.\n      if (startDot < 0) {\n        startDot = index\n      } else if (preDotState !== 1) {\n        preDotState = 1\n      }\n    } else if (startDot > -1) {\n      // We saw a non-dot and non-path separator before our dot, so we should\n      // have a good chance at having a non-empty extension.\n      preDotState = -1\n    }\n  }\n\n  if (\n    startDot < 0 ||\n    end < 0 ||\n    // We saw a non-dot character immediately before the dot.\n    preDotState === 0 ||\n    // The (right-most) trimmed path component is exactly `..`.\n    (preDotState === 1 && startDot === end - 1 && startDot === startPart + 1)\n  ) {\n    return ''\n  }\n\n  return path.slice(startDot, end)\n}\n\n/**\n * Join segments from a path.\n *\n * @param {Array<string>} segments\n *   Path segments.\n * @returns {string}\n *   File path.\n */\nfunction join(...segments) {\n  let index = -1\n  /** @type {string | undefined} */\n  let joined\n\n  while (++index < segments.length) {\n    assertPath(segments[index])\n\n    if (segments[index]) {\n      joined =\n        joined === undefined ? segments[index] : joined + '/' + segments[index]\n    }\n  }\n\n  return joined === undefined ? '.' : normalize(joined)\n}\n\n/**\n * Normalize a basic file path.\n *\n * @param {string} path\n *   File path.\n * @returns {string}\n *   File path.\n */\n// Note: `normalize` is not exposed as `path.normalize`, so some code is\n// manually removed from it.\nfunction normalize(path) {\n  assertPath(path)\n\n  const absolute = path.charCodeAt(0) === 47 /* `/` */\n\n  // Normalize the path according to POSIX rules.\n  let value = normalizeString(path, !absolute)\n\n  if (value.length === 0 && !absolute) {\n    value = '.'\n  }\n\n  if (value.length > 0 && path.charCodeAt(path.length - 1) === 47 /* / */) {\n    value += '/'\n  }\n\n  return absolute ? '/' + value : value\n}\n\n/**\n * Resolve `.` and `..` elements in a path with directory names.\n *\n * @param {string} path\n *   File path.\n * @param {boolean} allowAboveRoot\n *   Whether `..` can move above root.\n * @returns {string}\n *   File path.\n */\nfunction normalizeString(path, allowAboveRoot) {\n  let result = ''\n  let lastSegmentLength = 0\n  let lastSlash = -1\n  let dots = 0\n  let index = -1\n  /** @type {number | undefined} */\n  let code\n  /** @type {number} */\n  let lastSlashIndex\n\n  while (++index <= path.length) {\n    if (index < path.length) {\n      code = path.charCodeAt(index)\n    } else if (code === 47 /* `/` */) {\n      break\n    } else {\n      code = 47 /* `/` */\n    }\n\n    if (code === 47 /* `/` */) {\n      if (lastSlash === index - 1 || dots === 1) {\n        // Empty.\n      } else if (lastSlash !== index - 1 && dots === 2) {\n        if (\n          result.length < 2 ||\n          lastSegmentLength !== 2 ||\n          result.charCodeAt(result.length - 1) !== 46 /* `.` */ ||\n          result.charCodeAt(result.length - 2) !== 46 /* `.` */\n        ) {\n          if (result.length > 2) {\n            lastSlashIndex = result.lastIndexOf('/')\n\n            if (lastSlashIndex !== result.length - 1) {\n              if (lastSlashIndex < 0) {\n                result = ''\n                lastSegmentLength = 0\n              } else {\n                result = result.slice(0, lastSlashIndex)\n                lastSegmentLength = result.length - 1 - result.lastIndexOf('/')\n              }\n\n              lastSlash = index\n              dots = 0\n              continue\n            }\n          } else if (result.length > 0) {\n            result = ''\n            lastSegmentLength = 0\n            lastSlash = index\n            dots = 0\n            continue\n          }\n        }\n\n        if (allowAboveRoot) {\n          result = result.length > 0 ? result + '/..' : '..'\n          lastSegmentLength = 2\n        }\n      } else {\n        if (result.length > 0) {\n          result += '/' + path.slice(lastSlash + 1, index)\n        } else {\n          result = path.slice(lastSlash + 1, index)\n        }\n\n        lastSegmentLength = index - lastSlash - 1\n      }\n\n      lastSlash = index\n      dots = 0\n    } else if (code === 46 /* `.` */ && dots > -1) {\n      dots++\n    } else {\n      dots = -1\n    }\n  }\n\n  return result\n}\n\n/**\n * Make sure `path` is a string.\n *\n * @param {string} path\n *   File path.\n * @returns {asserts path is string}\n *   Nothing.\n */\nfunction assertPath(path) {\n  if (typeof path !== 'string') {\n    throw new TypeError(\n      'Path must be a string. Received ' + JSON.stringify(path)\n    )\n  }\n}\n\n/* eslint-enable max-depth, complexity */\n","// Somewhat based on:\n// <https://github.com/defunctzombie/node-process/blob/master/browser.js>.\n// But I don’t think one tiny line of code can be copyrighted. 😅\nexport const proc = {cwd}\n\nfunction cwd() {\n  return '/'\n}\n","/**\n * @typedef URL\n * @property {string} hash\n * @property {string} host\n * @property {string} hostname\n * @property {string} href\n * @property {string} origin\n * @property {string} password\n * @property {string} pathname\n * @property {string} port\n * @property {string} protocol\n * @property {string} search\n * @property {any} searchParams\n * @property {string} username\n * @property {() => string} toString\n * @property {() => string} toJSON\n */\n\n/**\n * Check if `fileUrlOrPath` looks like a URL.\n *\n * @param {unknown} fileUrlOrPath\n *   File path or URL.\n * @returns {fileUrlOrPath is URL}\n *   Whether it’s a URL.\n */\n// From: <https://github.com/nodejs/node/blob/fcf8ba4/lib/internal/url.js#L1501>\nexport function isUrl(fileUrlOrPath) {\n  return (\n    fileUrlOrPath !== null &&\n    typeof fileUrlOrPath === 'object' &&\n    // @ts-expect-error: indexable.\n    fileUrlOrPath.href &&\n    // @ts-expect-error: indexable.\n    fileUrlOrPath.origin\n  )\n}\n","/// <reference lib=\"dom\" />\n\nimport {isUrl} from './minurl.shared.js'\n\n// See: <https://github.com/nodejs/node/blob/fcf8ba4/lib/internal/url.js>\n\n/**\n * @param {string | URL} path\n *   File URL.\n * @returns {string}\n *   File URL.\n */\nexport function urlToPath(path) {\n  if (typeof path === 'string') {\n    path = new URL(path)\n  } else if (!isUrl(path)) {\n    /** @type {NodeJS.ErrnoException} */\n    const error = new TypeError(\n      'The \"path\" argument must be of type string or an instance of URL. Received `' +\n        path +\n        '`'\n    )\n    error.code = 'ERR_INVALID_ARG_TYPE'\n    throw error\n  }\n\n  if (path.protocol !== 'file:') {\n    /** @type {NodeJS.ErrnoException} */\n    const error = new TypeError('The URL must be of scheme file')\n    error.code = 'ERR_INVALID_URL_SCHEME'\n    throw error\n  }\n\n  return getPathFromURLPosix(path)\n}\n\n/**\n * Get a path from a POSIX URL.\n *\n * @param {URL} url\n *   URL.\n * @returns {string}\n *   File path.\n */\nfunction getPathFromURLPosix(url) {\n  if (url.hostname !== '') {\n    /** @type {NodeJS.ErrnoException} */\n    const error = new TypeError(\n      'File URL host must be \"localhost\" or empty on darwin'\n    )\n    error.code = 'ERR_INVALID_FILE_URL_HOST'\n    throw error\n  }\n\n  const pathname = url.pathname\n  let index = -1\n\n  while (++index < pathname.length) {\n    if (\n      pathname.charCodeAt(index) === 37 /* `%` */ &&\n      pathname.charCodeAt(index + 1) === 50 /* `2` */\n    ) {\n      const third = pathname.charCodeAt(index + 2)\n      if (third === 70 /* `F` */ || third === 102 /* `f` */) {\n        /** @type {NodeJS.ErrnoException} */\n        const error = new TypeError(\n          'File URL path must not include encoded / characters'\n        )\n        error.code = 'ERR_INVALID_FILE_URL_PATH'\n        throw error\n      }\n    }\n  }\n\n  return decodeURIComponent(pathname)\n}\n\nexport {isUrl} from './minurl.shared.js'\n","/**\n * @typedef {import('unist').Node} Node\n * @typedef {import('unist').Position} Position\n * @typedef {import('unist').Point} Point\n * @typedef {import('./minurl.shared.js').URL} URL\n * @typedef {import('../index.js').Data} Data\n * @typedef {import('../index.js').Value} Value\n */\n\n/**\n * @typedef {Record<string, unknown> & {type: string, position?: Position | undefined}} NodeLike\n *\n * @typedef {'ascii' | 'utf8' | 'utf-8' | 'utf16le' | 'ucs2' | 'ucs-2' | 'base64' | 'base64url' | 'latin1' | 'binary' | 'hex'} BufferEncoding\n *   Encodings supported by the buffer class.\n *\n *   This is a copy of the types from Node, copied to prevent Node globals from\n *   being needed.\n *   Copied from: <https://github.com/DefinitelyTyped/DefinitelyTyped/blob/90a4ec8/types/node/buffer.d.ts#L170>\n *\n * @typedef {Options | URL | Value | VFile} Compatible\n *   Things that can be passed to the constructor.\n *\n * @typedef VFileCoreOptions\n *   Set multiple values.\n * @property {Value | null | undefined} [value]\n *   Set `value`.\n * @property {string | null | undefined} [cwd]\n *   Set `cwd`.\n * @property {Array<string> | null | undefined} [history]\n *   Set `history`.\n * @property {URL | string | null | undefined} [path]\n *   Set `path`.\n * @property {string | null | undefined} [basename]\n *   Set `basename`.\n * @property {string | null | undefined} [stem]\n *   Set `stem`.\n * @property {string | null | undefined} [extname]\n *   Set `extname`.\n * @property {string | null | undefined} [dirname]\n *   Set `dirname`.\n * @property {Data | null | undefined} [data]\n *   Set `data`.\n *\n * @typedef Map\n *   Raw source map.\n *\n *   See:\n *   <https://github.com/mozilla/source-map/blob/58819f0/source-map.d.ts#L15-L23>.\n * @property {number} version\n *   Which version of the source map spec this map is following.\n * @property {Array<string>} sources\n *   An array of URLs to the original source files.\n * @property {Array<string>} names\n *   An array of identifiers which can be referenced by individual mappings.\n * @property {string | undefined} [sourceRoot]\n *   The URL root from which all sources are relative.\n * @property {Array<string> | undefined} [sourcesContent]\n *   An array of contents of the original source files.\n * @property {string} mappings\n *   A string of base64 VLQs which contain the actual mappings.\n * @property {string} file\n *   The generated file this source map is associated with.\n *\n * @typedef {{[key: string]: unknown} & VFileCoreOptions} Options\n *   Configuration.\n *\n *   A bunch of keys that will be shallow copied over to the new file.\n *\n * @typedef {Record<string, unknown>} ReporterSettings\n *   Configuration for reporters.\n */\n\n/**\n * @template {ReporterSettings} Settings\n *   Options type.\n * @callback Reporter\n *   Type for a reporter.\n * @param {Array<VFile>} files\n *   Files to report.\n * @param {Settings} options\n *   Configuration.\n * @returns {string}\n *   Report.\n */\n\nimport bufferLike from 'is-buffer'\nimport {VFileMessage} from 'vfile-message'\nimport {path} from './minpath.js'\nimport {proc} from './minproc.js'\nimport {urlToPath, isUrl} from './minurl.js'\n\n/**\n * Order of setting (least specific to most), we need this because otherwise\n * `{stem: 'a', path: '~/b.js'}` would throw, as a path is needed before a\n * stem can be set.\n *\n * @type {Array<'basename' | 'dirname' | 'extname' | 'history' | 'path' | 'stem'>}\n */\nconst order = ['history', 'path', 'basename', 'stem', 'extname', 'dirname']\n\nexport class VFile {\n  /**\n   * Create a new virtual file.\n   *\n   * `options` is treated as:\n   *\n   * *   `string` or `Buffer` — `{value: options}`\n   * *   `URL` — `{path: options}`\n   * *   `VFile` — shallow copies its data over to the new file\n   * *   `object` — all fields are shallow copied over to the new file\n   *\n   * Path related fields are set in the following order (least specific to\n   * most specific): `history`, `path`, `basename`, `stem`, `extname`,\n   * `dirname`.\n   *\n   * You cannot set `dirname` or `extname` without setting either `history`,\n   * `path`, `basename`, or `stem` too.\n   *\n   * @param {Compatible | null | undefined} [value]\n   *   File value.\n   * @returns\n   *   New instance.\n   */\n  constructor(value) {\n    /** @type {Options | VFile} */\n    let options\n\n    if (!value) {\n      options = {}\n    } else if (typeof value === 'string' || buffer(value)) {\n      options = {value}\n    } else if (isUrl(value)) {\n      options = {path: value}\n    } else {\n      options = value\n    }\n\n    /**\n     * Place to store custom information (default: `{}`).\n     *\n     * It’s OK to store custom data directly on the file but moving it to\n     * `data` is recommended.\n     *\n     * @type {Data}\n     */\n    this.data = {}\n\n    /**\n     * List of messages associated with the file.\n     *\n     * @type {Array<VFileMessage>}\n     */\n    this.messages = []\n\n    /**\n     * List of filepaths the file moved between.\n     *\n     * The first is the original path and the last is the current path.\n     *\n     * @type {Array<string>}\n     */\n    this.history = []\n\n    /**\n     * Base of `path` (default: `process.cwd()` or `'/'` in browsers).\n     *\n     * @type {string}\n     */\n    this.cwd = proc.cwd()\n\n    /* eslint-disable no-unused-expressions */\n    /**\n     * Raw value.\n     *\n     * @type {Value}\n     */\n    this.value\n\n    // The below are non-standard, they are “well-known”.\n    // As in, used in several tools.\n\n    /**\n     * Whether a file was saved to disk.\n     *\n     * This is used by vfile reporters.\n     *\n     * @type {boolean}\n     */\n    this.stored\n\n    /**\n     * Custom, non-string, compiled, representation.\n     *\n     * This is used by unified to store non-string results.\n     * One example is when turning markdown into React nodes.\n     *\n     * @type {unknown}\n     */\n    this.result\n\n    /**\n     * Source map.\n     *\n     * This type is equivalent to the `RawSourceMap` type from the `source-map`\n     * module.\n     *\n     * @type {Map | null | undefined}\n     */\n    this.map\n    /* eslint-enable no-unused-expressions */\n\n    // Set path related properties in the correct order.\n    let index = -1\n\n    while (++index < order.length) {\n      const prop = order[index]\n\n      // Note: we specifically use `in` instead of `hasOwnProperty` to accept\n      // `vfile`s too.\n      if (\n        prop in options &&\n        options[prop] !== undefined &&\n        options[prop] !== null\n      ) {\n        // @ts-expect-error: TS doesn’t understand basic reality.\n        this[prop] = prop === 'history' ? [...options[prop]] : options[prop]\n      }\n    }\n\n    /** @type {string} */\n    let prop\n\n    // Set non-path related properties.\n    for (prop in options) {\n      // @ts-expect-error: fine to set other things.\n      if (!order.includes(prop)) {\n        // @ts-expect-error: fine to set other things.\n        this[prop] = options[prop]\n      }\n    }\n  }\n\n  /**\n   * Get the full path (example: `'~/index.min.js'`).\n   *\n   * @returns {string}\n   */\n  get path() {\n    return this.history[this.history.length - 1]\n  }\n\n  /**\n   * Set the full path (example: `'~/index.min.js'`).\n   *\n   * Cannot be nullified.\n   * You can set a file URL (a `URL` object with a `file:` protocol) which will\n   * be turned into a path with `url.fileURLToPath`.\n   *\n   * @param {string | URL} path\n   */\n  set path(path) {\n    if (isUrl(path)) {\n      path = urlToPath(path)\n    }\n\n    assertNonEmpty(path, 'path')\n\n    if (this.path !== path) {\n      this.history.push(path)\n    }\n  }\n\n  /**\n   * Get the parent path (example: `'~'`).\n   */\n  get dirname() {\n    return typeof this.path === 'string' ? path.dirname(this.path) : undefined\n  }\n\n  /**\n   * Set the parent path (example: `'~'`).\n   *\n   * Cannot be set if there’s no `path` yet.\n   */\n  set dirname(dirname) {\n    assertPath(this.basename, 'dirname')\n    this.path = path.join(dirname || '', this.basename)\n  }\n\n  /**\n   * Get the basename (including extname) (example: `'index.min.js'`).\n   */\n  get basename() {\n    return typeof this.path === 'string' ? path.basename(this.path) : undefined\n  }\n\n  /**\n   * Set basename (including extname) (`'index.min.js'`).\n   *\n   * Cannot contain path separators (`'/'` on unix, macOS, and browsers, `'\\'`\n   * on windows).\n   * Cannot be nullified (use `file.path = file.dirname` instead).\n   */\n  set basename(basename) {\n    assertNonEmpty(basename, 'basename')\n    assertPart(basename, 'basename')\n    this.path = path.join(this.dirname || '', basename)\n  }\n\n  /**\n   * Get the extname (including dot) (example: `'.js'`).\n   */\n  get extname() {\n    return typeof this.path === 'string' ? path.extname(this.path) : undefined\n  }\n\n  /**\n   * Set the extname (including dot) (example: `'.js'`).\n   *\n   * Cannot contain path separators (`'/'` on unix, macOS, and browsers, `'\\'`\n   * on windows).\n   * Cannot be set if there’s no `path` yet.\n   */\n  set extname(extname) {\n    assertPart(extname, 'extname')\n    assertPath(this.dirname, 'extname')\n\n    if (extname) {\n      if (extname.charCodeAt(0) !== 46 /* `.` */) {\n        throw new Error('`extname` must start with `.`')\n      }\n\n      if (extname.includes('.', 1)) {\n        throw new Error('`extname` cannot contain multiple dots')\n      }\n    }\n\n    this.path = path.join(this.dirname, this.stem + (extname || ''))\n  }\n\n  /**\n   * Get the stem (basename w/o extname) (example: `'index.min'`).\n   */\n  get stem() {\n    return typeof this.path === 'string'\n      ? path.basename(this.path, this.extname)\n      : undefined\n  }\n\n  /**\n   * Set the stem (basename w/o extname) (example: `'index.min'`).\n   *\n   * Cannot contain path separators (`'/'` on unix, macOS, and browsers, `'\\'`\n   * on windows).\n   * Cannot be nullified (use `file.path = file.dirname` instead).\n   */\n  set stem(stem) {\n    assertNonEmpty(stem, 'stem')\n    assertPart(stem, 'stem')\n    this.path = path.join(this.dirname || '', stem + (this.extname || ''))\n  }\n\n  /**\n   * Serialize the file.\n   *\n   * @param {BufferEncoding | null | undefined} [encoding='utf8']\n   *   Character encoding to understand `value` as when it’s a `Buffer`\n   *   (default: `'utf8'`).\n   * @returns {string}\n   *   Serialized file.\n   */\n  toString(encoding) {\n    return (this.value || '').toString(encoding || undefined)\n  }\n\n  /**\n   * Create a warning message associated with the file.\n   *\n   * Its `fatal` is set to `false` and `file` is set to the current file path.\n   * Its added to `file.messages`.\n   *\n   * @param {string | Error | VFileMessage} reason\n   *   Reason for message, uses the stack and message of the error if given.\n   * @param {Node | NodeLike | Position | Point | null | undefined} [place]\n   *   Place in file where the message occurred.\n   * @param {string | null | undefined} [origin]\n   *   Place in code where the message originates (example:\n   *   `'my-package:my-rule'` or `'my-rule'`).\n   * @returns {VFileMessage}\n   *   Message.\n   */\n  message(reason, place, origin) {\n    const message = new VFileMessage(reason, place, origin)\n\n    if (this.path) {\n      message.name = this.path + ':' + message.name\n      message.file = this.path\n    }\n\n    message.fatal = false\n\n    this.messages.push(message)\n\n    return message\n  }\n\n  /**\n   * Create an info message associated with the file.\n   *\n   * Its `fatal` is set to `null` and `file` is set to the current file path.\n   * Its added to `file.messages`.\n   *\n   * @param {string | Error | VFileMessage} reason\n   *   Reason for message, uses the stack and message of the error if given.\n   * @param {Node | NodeLike | Position | Point | null | undefined} [place]\n   *   Place in file where the message occurred.\n   * @param {string | null | undefined} [origin]\n   *   Place in code where the message originates (example:\n   *   `'my-package:my-rule'` or `'my-rule'`).\n   * @returns {VFileMessage}\n   *   Message.\n   */\n  info(reason, place, origin) {\n    const message = this.message(reason, place, origin)\n\n    message.fatal = null\n\n    return message\n  }\n\n  /**\n   * Create a fatal error associated with the file.\n   *\n   * Its `fatal` is set to `true` and `file` is set to the current file path.\n   * Its added to `file.messages`.\n   *\n   * > 👉 **Note**: a fatal error means that a file is no longer processable.\n   *\n   * @param {string | Error | VFileMessage} reason\n   *   Reason for message, uses the stack and message of the error if given.\n   * @param {Node | NodeLike | Position | Point | null | undefined} [place]\n   *   Place in file where the message occurred.\n   * @param {string | null | undefined} [origin]\n   *   Place in code where the message originates (example:\n   *   `'my-package:my-rule'` or `'my-rule'`).\n   * @returns {never}\n   *   Message.\n   * @throws {VFileMessage}\n   *   Message.\n   */\n  fail(reason, place, origin) {\n    const message = this.message(reason, place, origin)\n\n    message.fatal = true\n\n    throw message\n  }\n}\n\n/**\n * Assert that `part` is not a path (as in, does not contain `path.sep`).\n *\n * @param {string | null | undefined} part\n *   File path part.\n * @param {string} name\n *   Part name.\n * @returns {void}\n *   Nothing.\n */\nfunction assertPart(part, name) {\n  if (part && part.includes(path.sep)) {\n    throw new Error(\n      '`' + name + '` cannot be a path: did not expect `' + path.sep + '`'\n    )\n  }\n}\n\n/**\n * Assert that `part` is not empty.\n *\n * @param {string | undefined} part\n *   Thing.\n * @param {string} name\n *   Part name.\n * @returns {asserts part is string}\n *   Nothing.\n */\nfunction assertNonEmpty(part, name) {\n  if (!part) {\n    throw new Error('`' + name + '` cannot be empty')\n  }\n}\n\n/**\n * Assert `path` exists.\n *\n * @param {string | undefined} path\n *   Path.\n * @param {string} name\n *   Dependency name.\n * @returns {asserts path is string}\n *   Nothing.\n */\nfunction assertPath(path, name) {\n  if (!path) {\n    throw new Error('Setting `' + name + '` requires `path` to be set too')\n  }\n}\n\n/**\n * Assert `value` is a buffer.\n *\n * @param {unknown} value\n *   thing.\n * @returns {value is Buffer}\n *   Whether `value` is a Node.js buffer.\n */\nfunction buffer(value) {\n  return bufferLike(value)\n}\n","/**\n * Throw a given error.\n *\n * @param {Error|null|undefined} [error]\n *   Maybe error.\n * @returns {asserts error is null|undefined}\n */\nexport function bail(error) {\n  if (error) {\n    throw error\n  }\n}\n","export default function isPlainObject(value) {\n\tif (typeof value !== 'object' || value === null) {\n\t\treturn false;\n\t}\n\n\tconst prototype = Object.getPrototypeOf(value);\n\treturn (prototype === null || prototype === Object.prototype || Object.getPrototypeOf(prototype) === null) && !(Symbol.toStringTag in value) && !(Symbol.iterator in value);\n}\n","/**\n * @typedef {(error?: Error|null|undefined, ...output: Array<any>) => void} Callback\n * @typedef {(...input: Array<any>) => any} Middleware\n *\n * @typedef {(...input: Array<any>) => void} Run\n *   Call all middleware.\n * @typedef {(fn: Middleware) => Pipeline} Use\n *   Add `fn` (middleware) to the list.\n * @typedef {{run: Run, use: Use}} Pipeline\n *   Middleware.\n */\n\n/**\n * Create new middleware.\n *\n * @returns {Pipeline}\n */\nexport function trough() {\n  /** @type {Array<Middleware>} */\n  const fns = []\n  /** @type {Pipeline} */\n  const pipeline = {run, use}\n\n  return pipeline\n\n  /** @type {Run} */\n  function run(...values) {\n    let middlewareIndex = -1\n    /** @type {Callback} */\n    const callback = values.pop()\n\n    if (typeof callback !== 'function') {\n      throw new TypeError('Expected function as last argument, not ' + callback)\n    }\n\n    next(null, ...values)\n\n    /**\n     * Run the next `fn`, or we’re done.\n     *\n     * @param {Error|null|undefined} error\n     * @param {Array<any>} output\n     */\n    function next(error, ...output) {\n      const fn = fns[++middlewareIndex]\n      let index = -1\n\n      if (error) {\n        callback(error)\n        return\n      }\n\n      // Copy non-nullish input into values.\n      while (++index < values.length) {\n        if (output[index] === null || output[index] === undefined) {\n          output[index] = values[index]\n        }\n      }\n\n      // Save the newly created `output` for the next call.\n      values = output\n\n      // Next or done.\n      if (fn) {\n        wrap(fn, next)(...output)\n      } else {\n        callback(null, ...output)\n      }\n    }\n  }\n\n  /** @type {Use} */\n  function use(middelware) {\n    if (typeof middelware !== 'function') {\n      throw new TypeError(\n        'Expected `middelware` to be a function, not ' + middelware\n      )\n    }\n\n    fns.push(middelware)\n    return pipeline\n  }\n}\n\n/**\n * Wrap `middleware`.\n * Can be sync or async; return a promise, receive a callback, or return new\n * values and errors.\n *\n * @param {Middleware} middleware\n * @param {Callback} callback\n */\nexport function wrap(middleware, callback) {\n  /** @type {boolean} */\n  let called\n\n  return wrapped\n\n  /**\n   * Call `middleware`.\n   * @this {any}\n   * @param {Array<any>} parameters\n   * @returns {void}\n   */\n  function wrapped(...parameters) {\n    const fnExpectsCallback = middleware.length > parameters.length\n    /** @type {any} */\n    let result\n\n    if (fnExpectsCallback) {\n      parameters.push(done)\n    }\n\n    try {\n      result = middleware.apply(this, parameters)\n    } catch (error) {\n      const exception = /** @type {Error} */ (error)\n\n      // Well, this is quite the pickle.\n      // `middleware` received a callback and called it synchronously, but that\n      // threw an error.\n      // The only thing left to do is to throw the thing instead.\n      if (fnExpectsCallback && called) {\n        throw exception\n      }\n\n      return done(exception)\n    }\n\n    if (!fnExpectsCallback) {\n      if (result instanceof Promise) {\n        result.then(then, done)\n      } else if (result instanceof Error) {\n        done(result)\n      } else {\n        then(result)\n      }\n    }\n  }\n\n  /**\n   * Call `callback`, only once.\n   * @type {Callback}\n   */\n  function done(error, ...output) {\n    if (!called) {\n      called = true\n      callback(error, ...output)\n    }\n  }\n\n  /**\n   * Call `done` with one value.\n   *\n   * @param {any} [value]\n   */\n  function then(value) {\n    done(null, value)\n  }\n}\n","/**\n * @typedef {import('unist').Node} Node\n * @typedef {import('vfile').VFileCompatible} VFileCompatible\n * @typedef {import('vfile').VFileValue} VFileValue\n * @typedef {import('..').Processor} Processor\n * @typedef {import('..').Plugin} Plugin\n * @typedef {import('..').Preset} Preset\n * @typedef {import('..').Pluggable} Pluggable\n * @typedef {import('..').PluggableList} PluggableList\n * @typedef {import('..').Transformer} Transformer\n * @typedef {import('..').Parser} Parser\n * @typedef {import('..').Compiler} Compiler\n * @typedef {import('..').RunCallback} RunCallback\n * @typedef {import('..').ProcessCallback} ProcessCallback\n *\n * @typedef Context\n * @property {Node} tree\n * @property {VFile} file\n */\n\nimport {bail} from 'bail'\nimport isBuffer from 'is-buffer'\nimport extend from 'extend'\nimport isPlainObj from 'is-plain-obj'\nimport {trough} from 'trough'\nimport {VFile} from 'vfile'\n\n// Expose a frozen processor.\nexport const unified = base().freeze()\n\nconst own = {}.hasOwnProperty\n\n// Function to create the first processor.\n/**\n * @returns {Processor}\n */\nfunction base() {\n  const transformers = trough()\n  /** @type {Processor['attachers']} */\n  const attachers = []\n  /** @type {Record<string, unknown>} */\n  let namespace = {}\n  /** @type {boolean|undefined} */\n  let frozen\n  let freezeIndex = -1\n\n  // Data management.\n  // @ts-expect-error: overloads are handled.\n  processor.data = data\n  processor.Parser = undefined\n  processor.Compiler = undefined\n\n  // Lock.\n  processor.freeze = freeze\n\n  // Plugins.\n  processor.attachers = attachers\n  // @ts-expect-error: overloads are handled.\n  processor.use = use\n\n  // API.\n  processor.parse = parse\n  processor.stringify = stringify\n  // @ts-expect-error: overloads are handled.\n  processor.run = run\n  processor.runSync = runSync\n  // @ts-expect-error: overloads are handled.\n  processor.process = process\n  processor.processSync = processSync\n\n  // Expose.\n  return processor\n\n  // Create a new processor based on the processor in the current scope.\n  /** @type {Processor} */\n  function processor() {\n    const destination = base()\n    let index = -1\n\n    while (++index < attachers.length) {\n      destination.use(...attachers[index])\n    }\n\n    destination.data(extend(true, {}, namespace))\n\n    return destination\n  }\n\n  /**\n   * @param {string|Record<string, unknown>} [key]\n   * @param {unknown} [value]\n   * @returns {unknown}\n   */\n  function data(key, value) {\n    if (typeof key === 'string') {\n      // Set `key`.\n      if (arguments.length === 2) {\n        assertUnfrozen('data', frozen)\n        namespace[key] = value\n        return processor\n      }\n\n      // Get `key`.\n      return (own.call(namespace, key) && namespace[key]) || null\n    }\n\n    // Set space.\n    if (key) {\n      assertUnfrozen('data', frozen)\n      namespace = key\n      return processor\n    }\n\n    // Get space.\n    return namespace\n  }\n\n  /** @type {Processor['freeze']} */\n  function freeze() {\n    if (frozen) {\n      return processor\n    }\n\n    while (++freezeIndex < attachers.length) {\n      const [attacher, ...options] = attachers[freezeIndex]\n\n      if (options[0] === false) {\n        continue\n      }\n\n      if (options[0] === true) {\n        options[0] = undefined\n      }\n\n      /** @type {Transformer|void} */\n      const transformer = attacher.call(processor, ...options)\n\n      if (typeof transformer === 'function') {\n        transformers.use(transformer)\n      }\n    }\n\n    frozen = true\n    freezeIndex = Number.POSITIVE_INFINITY\n\n    return processor\n  }\n\n  /**\n   * @param {Pluggable|null|undefined} [value]\n   * @param {...unknown} options\n   * @returns {Processor}\n   */\n  function use(value, ...options) {\n    /** @type {Record<string, unknown>|undefined} */\n    let settings\n\n    assertUnfrozen('use', frozen)\n\n    if (value === null || value === undefined) {\n      // Empty.\n    } else if (typeof value === 'function') {\n      addPlugin(value, ...options)\n    } else if (typeof value === 'object') {\n      if (Array.isArray(value)) {\n        addList(value)\n      } else {\n        addPreset(value)\n      }\n    } else {\n      throw new TypeError('Expected usable value, not `' + value + '`')\n    }\n\n    if (settings) {\n      namespace.settings = Object.assign(namespace.settings || {}, settings)\n    }\n\n    return processor\n\n    /**\n     * @param {import('..').Pluggable<unknown[]>} value\n     * @returns {void}\n     */\n    function add(value) {\n      if (typeof value === 'function') {\n        addPlugin(value)\n      } else if (typeof value === 'object') {\n        if (Array.isArray(value)) {\n          const [plugin, ...options] = value\n          addPlugin(plugin, ...options)\n        } else {\n          addPreset(value)\n        }\n      } else {\n        throw new TypeError('Expected usable value, not `' + value + '`')\n      }\n    }\n\n    /**\n     * @param {Preset} result\n     * @returns {void}\n     */\n    function addPreset(result) {\n      addList(result.plugins)\n\n      if (result.settings) {\n        settings = Object.assign(settings || {}, result.settings)\n      }\n    }\n\n    /**\n     * @param {PluggableList|null|undefined} [plugins]\n     * @returns {void}\n     */\n    function addList(plugins) {\n      let index = -1\n\n      if (plugins === null || plugins === undefined) {\n        // Empty.\n      } else if (Array.isArray(plugins)) {\n        while (++index < plugins.length) {\n          const thing = plugins[index]\n          add(thing)\n        }\n      } else {\n        throw new TypeError('Expected a list of plugins, not `' + plugins + '`')\n      }\n    }\n\n    /**\n     * @param {Plugin} plugin\n     * @param {...unknown} [value]\n     * @returns {void}\n     */\n    function addPlugin(plugin, value) {\n      let index = -1\n      /** @type {Processor['attachers'][number]|undefined} */\n      let entry\n\n      while (++index < attachers.length) {\n        if (attachers[index][0] === plugin) {\n          entry = attachers[index]\n          break\n        }\n      }\n\n      if (entry) {\n        if (isPlainObj(entry[1]) && isPlainObj(value)) {\n          value = extend(true, entry[1], value)\n        }\n\n        entry[1] = value\n      } else {\n        // @ts-expect-error: fine.\n        attachers.push([...arguments])\n      }\n    }\n  }\n\n  /** @type {Processor['parse']} */\n  function parse(doc) {\n    processor.freeze()\n    const file = vfile(doc)\n    const Parser = processor.Parser\n    assertParser('parse', Parser)\n\n    if (newable(Parser, 'parse')) {\n      // @ts-expect-error: `newable` checks this.\n      return new Parser(String(file), file).parse()\n    }\n\n    // @ts-expect-error: `newable` checks this.\n    return Parser(String(file), file) // eslint-disable-line new-cap\n  }\n\n  /** @type {Processor['stringify']} */\n  function stringify(node, doc) {\n    processor.freeze()\n    const file = vfile(doc)\n    const Compiler = processor.Compiler\n    assertCompiler('stringify', Compiler)\n    assertNode(node)\n\n    if (newable(Compiler, 'compile')) {\n      // @ts-expect-error: `newable` checks this.\n      return new Compiler(node, file).compile()\n    }\n\n    // @ts-expect-error: `newable` checks this.\n    return Compiler(node, file) // eslint-disable-line new-cap\n  }\n\n  /**\n   * @param {Node} node\n   * @param {VFileCompatible|RunCallback} [doc]\n   * @param {RunCallback} [callback]\n   * @returns {Promise<Node>|void}\n   */\n  function run(node, doc, callback) {\n    assertNode(node)\n    processor.freeze()\n\n    if (!callback && typeof doc === 'function') {\n      callback = doc\n      doc = undefined\n    }\n\n    if (!callback) {\n      return new Promise(executor)\n    }\n\n    executor(null, callback)\n\n    /**\n     * @param {null|((node: Node) => void)} resolve\n     * @param {(error: Error) => void} reject\n     * @returns {void}\n     */\n    function executor(resolve, reject) {\n      // @ts-expect-error: `doc` can’t be a callback anymore, we checked.\n      transformers.run(node, vfile(doc), done)\n\n      /**\n       * @param {Error|null} error\n       * @param {Node} tree\n       * @param {VFile} file\n       * @returns {void}\n       */\n      function done(error, tree, file) {\n        tree = tree || node\n        if (error) {\n          reject(error)\n        } else if (resolve) {\n          resolve(tree)\n        } else {\n          // @ts-expect-error: `callback` is defined if `resolve` is not.\n          callback(null, tree, file)\n        }\n      }\n    }\n  }\n\n  /** @type {Processor['runSync']} */\n  function runSync(node, file) {\n    /** @type {Node|undefined} */\n    let result\n    /** @type {boolean|undefined} */\n    let complete\n\n    processor.run(node, file, done)\n\n    assertDone('runSync', 'run', complete)\n\n    // @ts-expect-error: we either bailed on an error or have a tree.\n    return result\n\n    /**\n     * @param {Error|null} [error]\n     * @param {Node} [tree]\n     * @returns {void}\n     */\n    function done(error, tree) {\n      bail(error)\n      result = tree\n      complete = true\n    }\n  }\n\n  /**\n   * @param {VFileCompatible} doc\n   * @param {ProcessCallback} [callback]\n   * @returns {Promise<VFile>|undefined}\n   */\n  function process(doc, callback) {\n    processor.freeze()\n    assertParser('process', processor.Parser)\n    assertCompiler('process', processor.Compiler)\n\n    if (!callback) {\n      return new Promise(executor)\n    }\n\n    executor(null, callback)\n\n    /**\n     * @param {null|((file: VFile) => void)} resolve\n     * @param {(error?: Error|null|undefined) => void} reject\n     * @returns {void}\n     */\n    function executor(resolve, reject) {\n      const file = vfile(doc)\n\n      processor.run(processor.parse(file), file, (error, tree, file) => {\n        if (error || !tree || !file) {\n          done(error)\n        } else {\n          /** @type {unknown} */\n          const result = processor.stringify(tree, file)\n\n          if (result === undefined || result === null) {\n            // Empty.\n          } else if (looksLikeAVFileValue(result)) {\n            file.value = result\n          } else {\n            file.result = result\n          }\n\n          done(error, file)\n        }\n      })\n\n      /**\n       * @param {Error|null|undefined} [error]\n       * @param {VFile|undefined} [file]\n       * @returns {void}\n       */\n      function done(error, file) {\n        if (error || !file) {\n          reject(error)\n        } else if (resolve) {\n          resolve(file)\n        } else {\n          // @ts-expect-error: `callback` is defined if `resolve` is not.\n          callback(null, file)\n        }\n      }\n    }\n  }\n\n  /** @type {Processor['processSync']} */\n  function processSync(doc) {\n    /** @type {boolean|undefined} */\n    let complete\n\n    processor.freeze()\n    assertParser('processSync', processor.Parser)\n    assertCompiler('processSync', processor.Compiler)\n\n    const file = vfile(doc)\n\n    processor.process(file, done)\n\n    assertDone('processSync', 'process', complete)\n\n    return file\n\n    /**\n     * @param {Error|null|undefined} [error]\n     * @returns {void}\n     */\n    function done(error) {\n      complete = true\n      bail(error)\n    }\n  }\n}\n\n/**\n * Check if `value` is a constructor.\n *\n * @param {unknown} value\n * @param {string} name\n * @returns {boolean}\n */\nfunction newable(value, name) {\n  return (\n    typeof value === 'function' &&\n    // Prototypes do exist.\n    // type-coverage:ignore-next-line\n    value.prototype &&\n    // A function with keys in its prototype is probably a constructor.\n    // Classes’ prototype methods are not enumerable, so we check if some value\n    // exists in the prototype.\n    // type-coverage:ignore-next-line\n    (keys(value.prototype) || name in value.prototype)\n  )\n}\n\n/**\n * Check if `value` is an object with keys.\n *\n * @param {Record<string, unknown>} value\n * @returns {boolean}\n */\nfunction keys(value) {\n  /** @type {string} */\n  let key\n\n  for (key in value) {\n    if (own.call(value, key)) {\n      return true\n    }\n  }\n\n  return false\n}\n\n/**\n * Assert a parser is available.\n *\n * @param {string} name\n * @param {unknown} value\n * @returns {asserts value is Parser}\n */\nfunction assertParser(name, value) {\n  if (typeof value !== 'function') {\n    throw new TypeError('Cannot `' + name + '` without `Parser`')\n  }\n}\n\n/**\n * Assert a compiler is available.\n *\n * @param {string} name\n * @param {unknown} value\n * @returns {asserts value is Compiler}\n */\nfunction assertCompiler(name, value) {\n  if (typeof value !== 'function') {\n    throw new TypeError('Cannot `' + name + '` without `Compiler`')\n  }\n}\n\n/**\n * Assert the processor is not frozen.\n *\n * @param {string} name\n * @param {unknown} frozen\n * @returns {asserts frozen is false}\n */\nfunction assertUnfrozen(name, frozen) {\n  if (frozen) {\n    throw new Error(\n      'Cannot call `' +\n        name +\n        '` on a frozen processor.\\nCreate a new processor first, by calling it: use `processor()` instead of `processor`.'\n    )\n  }\n}\n\n/**\n * Assert `node` is a unist node.\n *\n * @param {unknown} node\n * @returns {asserts node is Node}\n */\nfunction assertNode(node) {\n  // `isPlainObj` unfortunately uses `any` instead of `unknown`.\n  // type-coverage:ignore-next-line\n  if (!isPlainObj(node) || typeof node.type !== 'string') {\n    throw new TypeError('Expected node, got `' + node + '`')\n    // Fine.\n  }\n}\n\n/**\n * Assert that `complete` is `true`.\n *\n * @param {string} name\n * @param {string} asyncName\n * @param {unknown} complete\n * @returns {asserts complete is true}\n */\nfunction assertDone(name, asyncName, complete) {\n  if (!complete) {\n    throw new Error(\n      '`' + name + '` finished async. Use `' + asyncName + '` instead'\n    )\n  }\n}\n\n/**\n * @param {VFileCompatible} [value]\n * @returns {VFile}\n */\nfunction vfile(value) {\n  return looksLikeAVFile(value) ? value : new VFile(value)\n}\n\n/**\n * @param {VFileCompatible} [value]\n * @returns {value is VFile}\n */\nfunction looksLikeAVFile(value) {\n  return Boolean(\n    value &&\n      typeof value === 'object' &&\n      'message' in value &&\n      'messages' in value\n  )\n}\n\n/**\n * @param {unknown} [value]\n * @returns {value is VFileValue}\n */\nfunction looksLikeAVFileValue(value) {\n  return typeof value === 'string' || isBuffer(value)\n}\n","/**\n * @typedef {import('mdast').Root} Root\n * @typedef {import('mdast-util-from-markdown').Options} Options\n */\n\nimport {fromMarkdown} from 'mdast-util-from-markdown'\n\n/**\n * @this {import('unified').Processor}\n * @type {import('unified').Plugin<[Options?] | void[], string, Root>}\n */\nexport default function remarkParse(options) {\n  /** @type {import('unified').ParserFunction<Root>} */\n  const parser = (doc) => {\n    // Assume options.\n    const settings = /** @type {Options} */ (this.data('settings'))\n\n    return fromMarkdown(\n      doc,\n      Object.assign({}, settings, options, {\n        // Note: these options are not in the readme.\n        // The goal is for them to be set by plugins on `data` instead of being\n        // passed by users.\n        extensions: this.data('micromarkExtensions') || [],\n        mdastExtensions: this.data('fromMarkdownExtensions') || []\n      })\n    )\n  }\n\n  Object.assign(this, {Parser: parser})\n}\n","import {asciiAlphanumeric} from 'micromark-util-character'\nimport {encode} from 'micromark-util-encode'\n/**\n * Make a value safe for injection as a URL.\n *\n * This encodes unsafe characters with percent-encoding and skips already\n * encoded sequences (see `normalizeUri`).\n * Further unsafe characters are encoded as character references (see\n * `micromark-util-encode`).\n *\n * A regex of allowed protocols can be given, in which case the URL is\n * sanitized.\n * For example, `/^(https?|ircs?|mailto|xmpp)$/i` can be used for `a[href]`, or\n * `/^https?$/i` for `img[src]` (this is what `github.com` allows).\n * If the URL includes an unknown protocol (one not matched by `protocol`, such\n * as a dangerous example, `javascript:`), the value is ignored.\n *\n * @param {string | undefined} url\n *   URI to sanitize.\n * @param {RegExp | null | undefined} [protocol]\n *   Allowed protocols.\n * @returns {string}\n *   Sanitized URI.\n */\nexport function sanitizeUri(url, protocol) {\n  const value = encode(normalizeUri(url || ''))\n  if (!protocol) {\n    return value\n  }\n  const colon = value.indexOf(':')\n  const questionMark = value.indexOf('?')\n  const numberSign = value.indexOf('#')\n  const slash = value.indexOf('/')\n  if (\n    // If there is no protocol, it’s relative.\n    colon < 0 ||\n    // If the first colon is after a `?`, `#`, or `/`, it’s not a protocol.\n    (slash > -1 && colon > slash) ||\n    (questionMark > -1 && colon > questionMark) ||\n    (numberSign > -1 && colon > numberSign) ||\n    // It is a protocol, it should be allowed.\n    protocol.test(value.slice(0, colon))\n  ) {\n    return value\n  }\n  return ''\n}\n\n/**\n * Normalize a URL.\n *\n * Encode unsafe characters with percent-encoding, skipping already encoded\n * sequences.\n *\n * @param {string} value\n *   URI to normalize.\n * @returns {string}\n *   Normalized URI.\n */\nexport function normalizeUri(value) {\n  /** @type {Array<string>} */\n  const result = []\n  let index = -1\n  let start = 0\n  let skip = 0\n  while (++index < value.length) {\n    const code = value.charCodeAt(index)\n    /** @type {string} */\n    let replace = ''\n\n    // A correct percent encoded value.\n    if (\n      code === 37 &&\n      asciiAlphanumeric(value.charCodeAt(index + 1)) &&\n      asciiAlphanumeric(value.charCodeAt(index + 2))\n    ) {\n      skip = 2\n    }\n    // ASCII.\n    else if (code < 128) {\n      if (!/[!#$&-;=?-Z_a-z~]/.test(String.fromCharCode(code))) {\n        replace = String.fromCharCode(code)\n      }\n    }\n    // Astral.\n    else if (code > 55295 && code < 57344) {\n      const next = value.charCodeAt(index + 1)\n\n      // A correct surrogate pair.\n      if (code < 56320 && next > 56319 && next < 57344) {\n        replace = String.fromCharCode(code, next)\n        skip = 1\n      }\n      // Lone surrogate.\n      else {\n        replace = '\\uFFFD'\n      }\n    }\n    // Unicode.\n    else {\n      replace = String.fromCharCode(code)\n    }\n    if (replace) {\n      result.push(value.slice(start, index), encodeURIComponent(replace))\n      start = index + skip + 1\n      replace = ''\n    }\n    if (skip) {\n      index += skip\n      skip = 0\n    }\n  }\n  return result.join('') + value.slice(start)\n}\n","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('hast').ElementContent} ElementContent\n *\n * @typedef {import('./state.js').State} State\n */\n\nimport {normalizeUri} from 'micromark-util-sanitize-uri'\n\n/**\n * Generate a hast footer for called footnote definitions.\n *\n * @param {State} state\n *   Info passed around.\n * @returns {Element | undefined}\n *   `section` element or `undefined`.\n */\nexport function footer(state) {\n  /** @type {Array<ElementContent>} */\n  const listItems = []\n  let index = -1\n\n  while (++index < state.footnoteOrder.length) {\n    const def = state.footnoteById[state.footnoteOrder[index]]\n\n    if (!def) {\n      continue\n    }\n\n    const content = state.all(def)\n    const id = String(def.identifier).toUpperCase()\n    const safeId = normalizeUri(id.toLowerCase())\n    let referenceIndex = 0\n    /** @type {Array<ElementContent>} */\n    const backReferences = []\n\n    while (++referenceIndex <= state.footnoteCounts[id]) {\n      /** @type {Element} */\n      const backReference = {\n        type: 'element',\n        tagName: 'a',\n        properties: {\n          href:\n            '#' +\n            state.clobberPrefix +\n            'fnref-' +\n            safeId +\n            (referenceIndex > 1 ? '-' + referenceIndex : ''),\n          dataFootnoteBackref: true,\n          className: ['data-footnote-backref'],\n          ariaLabel: state.footnoteBackLabel\n        },\n        children: [{type: 'text', value: '↩'}]\n      }\n\n      if (referenceIndex > 1) {\n        backReference.children.push({\n          type: 'element',\n          tagName: 'sup',\n          children: [{type: 'text', value: String(referenceIndex)}]\n        })\n      }\n\n      if (backReferences.length > 0) {\n        backReferences.push({type: 'text', value: ' '})\n      }\n\n      backReferences.push(backReference)\n    }\n\n    const tail = content[content.length - 1]\n\n    if (tail && tail.type === 'element' && tail.tagName === 'p') {\n      const tailTail = tail.children[tail.children.length - 1]\n      if (tailTail && tailTail.type === 'text') {\n        tailTail.value += ' '\n      } else {\n        tail.children.push({type: 'text', value: ' '})\n      }\n\n      tail.children.push(...backReferences)\n    } else {\n      content.push(...backReferences)\n    }\n\n    /** @type {Element} */\n    const listItem = {\n      type: 'element',\n      tagName: 'li',\n      properties: {id: state.clobberPrefix + 'fn-' + safeId},\n      children: state.wrap(content, true)\n    }\n\n    state.patch(def, listItem)\n\n    listItems.push(listItem)\n  }\n\n  if (listItems.length === 0) {\n    return\n  }\n\n  return {\n    type: 'element',\n    tagName: 'section',\n    properties: {dataFootnotes: true, className: ['footnotes']},\n    children: [\n      {\n        type: 'element',\n        tagName: state.footnoteLabelTagName,\n        properties: {\n          // To do: use structured clone.\n          ...JSON.parse(JSON.stringify(state.footnoteLabelProperties)),\n          id: 'footnote-label'\n        },\n        children: [{type: 'text', value: state.footnoteLabel}]\n      },\n      {type: 'text', value: '\\n'},\n      {\n        type: 'element',\n        tagName: 'ol',\n        properties: {},\n        children: state.wrap(listItems, true)\n      },\n      {type: 'text', value: '\\n'}\n    ]\n  }\n}\n","/**\n * @typedef {import('unist').Node} Node\n * @typedef {import('unist').Parent} Parent\n * @typedef {import('unist-util-is').Test} Test\n * @typedef {import('unist-util-visit-parents').VisitorResult} VisitorResult\n */\n\n/**\n * Check if `Child` can be a child of `Ancestor`.\n *\n * Returns the ancestor when `Child` can be a child of `Ancestor`, or returns\n * `never`.\n *\n * @template {Node} Ancestor\n *   Node type.\n * @template {Node} Child\n *   Node type.\n * @typedef {(\n *   Ancestor extends Parent\n *     ? Child extends Ancestor['children'][number]\n *       ? Ancestor\n *       : never\n *     : never\n * )} ParentsOf\n */\n\n/**\n * @template {Node} [Visited=Node]\n *   Visited node type.\n * @template {Parent} [Ancestor=Parent]\n *   Ancestor type.\n * @callback Visitor\n *   Handle a node (matching `test`, if given).\n *\n *   Visitors are free to transform `node`.\n *   They can also transform `parent`.\n *\n *   Replacing `node` itself, if `SKIP` is not returned, still causes its\n *   descendants to be walked (which is a bug).\n *\n *   When adding or removing previous siblings of `node` (or next siblings, in\n *   case of reverse), the `Visitor` should return a new `Index` to specify the\n *   sibling to traverse after `node` is traversed.\n *   Adding or removing next siblings of `node` (or previous siblings, in case\n *   of reverse) is handled as expected without needing to return a new `Index`.\n *\n *   Removing the children property of `parent` still results in them being\n *   traversed.\n * @param {Visited} node\n *   Found node.\n * @param {Visited extends Node ? number | null : never} index\n *   Index of `node` in `parent`.\n * @param {Ancestor extends Node ? Ancestor | null : never} parent\n *   Parent of `node`.\n * @returns {VisitorResult}\n *   What to do next.\n *\n *   An `Index` is treated as a tuple of `[CONTINUE, Index]`.\n *   An `Action` is treated as a tuple of `[Action]`.\n *\n *   Passing a tuple back only makes sense if the `Action` is `SKIP`.\n *   When the `Action` is `EXIT`, that action can be returned.\n *   When the `Action` is `CONTINUE`, `Index` can be returned.\n */\n\n/**\n * Build a typed `Visitor` function from a node and all possible parents.\n *\n * It will infer which values are passed as `node` and which as `parent`.\n *\n * @template {Node} Visited\n *   Node type.\n * @template {Parent} Ancestor\n *   Parent type.\n * @typedef {Visitor<Visited, ParentsOf<Ancestor, Visited>>} BuildVisitorFromMatch\n */\n\n/**\n * Build a typed `Visitor` function from a list of descendants and a test.\n *\n * It will infer which values are passed as `node` and which as `parent`.\n *\n * @template {Node} Descendant\n *   Node type.\n * @template {Test} Check\n *   Test type.\n * @typedef {(\n *   BuildVisitorFromMatch<\n *     import('unist-util-visit-parents/complex-types.js').Matches<Descendant, Check>,\n *     Extract<Descendant, Parent>\n *   >\n * )} BuildVisitorFromDescendants\n */\n\n/**\n * Build a typed `Visitor` function from a tree and a test.\n *\n * It will infer which values are passed as `node` and which as `parent`.\n *\n * @template {Node} [Tree=Node]\n *   Node type.\n * @template {Test} [Check=string]\n *   Test type.\n * @typedef {(\n *   BuildVisitorFromDescendants<\n *     import('unist-util-visit-parents/complex-types.js').InclusiveDescendant<Tree>,\n *     Check\n *   >\n * )} BuildVisitor\n */\n\nimport {visitParents} from 'unist-util-visit-parents'\n\n/**\n * Visit nodes.\n *\n * This algorithm performs *depth-first* *tree traversal* in *preorder*\n * (**NLR**) or if `reverse` is given, in *reverse preorder* (**NRL**).\n *\n * You can choose for which nodes `visitor` is called by passing a `test`.\n * For complex tests, you should test yourself in `visitor`, as it will be\n * faster and will have improved type information.\n *\n * Walking the tree is an intensive task.\n * Make use of the return values of the visitor when possible.\n * Instead of walking a tree multiple times, walk it once, use `unist-util-is`\n * to check if a node matches, and then perform different operations.\n *\n * You can change the tree.\n * See `Visitor` for more info.\n *\n * @param tree\n *   Tree to traverse.\n * @param test\n *   `unist-util-is`-compatible test\n * @param visitor\n *   Handle each node.\n * @param reverse\n *   Traverse in reverse preorder (NRL) instead of the default preorder (NLR).\n * @returns\n *   Nothing.\n */\nexport const visit =\n  /**\n   * @type {(\n   *   (<Tree extends Node, Check extends Test>(tree: Tree, test: Check, visitor: BuildVisitor<Tree, Check>, reverse?: boolean | null | undefined) => void) &\n   *   (<Tree extends Node>(tree: Tree, visitor: BuildVisitor<Tree>, reverse?: boolean | null | undefined) => void)\n   * )}\n   */\n  (\n    /**\n     * @param {Node} tree\n     * @param {Test} test\n     * @param {Visitor} visitor\n     * @param {boolean | null | undefined} [reverse]\n     * @returns {void}\n     */\n    function (tree, test, visitor, reverse) {\n      if (typeof test === 'function' && typeof visitor !== 'function') {\n        reverse = visitor\n        visitor = test\n        test = null\n      }\n\n      visitParents(tree, test, overload, reverse)\n\n      /**\n       * @param {Node} node\n       * @param {Array<Parent>} parents\n       */\n      function overload(node, parents) {\n        const parent = parents[parents.length - 1]\n        return visitor(\n          node,\n          parent ? parent.children.indexOf(node) : null,\n          parent\n        )\n      }\n    }\n  )\n\nexport {CONTINUE, EXIT, SKIP} from 'unist-util-visit-parents'\n","/**\n * @typedef {import('unist').Position} Position\n * @typedef {import('unist').Node} Node\n * @typedef {import('unist').Point} Point\n */\n\n/**\n * @typedef NodeLike\n * @property {string} type\n * @property {PositionLike | null | undefined} [position]\n *\n * @typedef PositionLike\n * @property {PointLike | null | undefined} [start]\n * @property {PointLike | null | undefined} [end]\n *\n * @typedef PointLike\n * @property {number | null | undefined} [line]\n * @property {number | null | undefined} [column]\n * @property {number | null | undefined} [offset]\n */\n\n/**\n * Get the starting point of `node`.\n *\n * @param node\n *   Node.\n * @returns\n *   Point.\n */\nexport const pointStart = point('start')\n\n/**\n * Get the ending point of `node`.\n *\n * @param node\n *   Node.\n * @returns\n *   Point.\n */\nexport const pointEnd = point('end')\n\n/**\n * Get the positional info of `node`.\n *\n * @param {NodeLike | Node | null | undefined} [node]\n *   Node.\n * @returns {Position}\n *   Position.\n */\nexport function position(node) {\n  return {start: pointStart(node), end: pointEnd(node)}\n}\n\n/**\n * Get the positional info of `node`.\n *\n * @param {'start' | 'end'} type\n *   Side.\n * @returns\n *   Getter.\n */\nfunction point(type) {\n  return point\n\n  /**\n   * Get the point info of `node` at a bound side.\n   *\n   * @param {NodeLike | Node | null | undefined} [node]\n   * @returns {Point}\n   */\n  function point(node) {\n    const point = (node && node.position && node.position[type]) || {}\n\n    // To do: next major: don’t return points when invalid.\n    return {\n      // @ts-expect-error: in practice, null is allowed.\n      line: point.line || null,\n      // @ts-expect-error: in practice, null is allowed.\n      column: point.column || null,\n      // @ts-expect-error: in practice, null is allowed.\n      offset: point.offset > -1 ? point.offset : null\n    }\n  }\n}\n","/**\n * @typedef PointLike\n * @property {number | null | undefined} [line]\n * @property {number | null | undefined} [column]\n * @property {number | null | undefined} [offset]\n *\n * @typedef PositionLike\n * @property {PointLike | null | undefined} [start]\n * @property {PointLike | null | undefined} [end]\n *\n * @typedef NodeLike\n * @property {PositionLike | null | undefined} [position]\n */\n\n/**\n * Check if `node` is generated.\n *\n * @param {NodeLike | null | undefined} [node]\n *   Node to check.\n * @returns {boolean}\n *   Whether `node` is generated (does not have positional info).\n */\nexport function generated(node) {\n  return (\n    !node ||\n    !node.position ||\n    !node.position.start ||\n    !node.position.start.line ||\n    !node.position.start.column ||\n    !node.position.end ||\n    !node.position.end.line ||\n    !node.position.end.column\n  )\n}\n","/**\n * @typedef {import('mdast').Root} Root\n * @typedef {import('mdast').Content} Content\n * @typedef {import('mdast').Definition} Definition\n */\n\n/**\n * @typedef {Root | Content} Node\n *\n * @callback GetDefinition\n *   Get a definition by identifier.\n * @param {string | null | undefined} [identifier]\n *   Identifier of definition.\n * @returns {Definition | null}\n *   Definition corresponding to `identifier` or `null`.\n */\n\nimport {visit} from 'unist-util-visit'\n\nconst own = {}.hasOwnProperty\n\n/**\n * Find definitions in `tree`.\n *\n * Uses CommonMark precedence, which means that earlier definitions are\n * preferred over duplicate later definitions.\n *\n * @param {Node} tree\n *   Tree to check.\n * @returns {GetDefinition}\n *   Getter.\n */\nexport function definitions(tree) {\n  /** @type {Record<string, Definition>} */\n  const cache = Object.create(null)\n\n  if (!tree || !tree.type) {\n    throw new Error('mdast-util-definitions expected node')\n  }\n\n  visit(tree, 'definition', (definition) => {\n    const id = clean(definition.identifier)\n    if (id && !own.call(cache, id)) {\n      cache[id] = definition\n    }\n  })\n\n  return definition\n\n  /** @type {GetDefinition} */\n  function definition(identifier) {\n    const id = clean(identifier)\n    // To do: next major: return `undefined` when not found.\n    return id && own.call(cache, id) ? cache[id] : null\n  }\n}\n\n/**\n * @param {string | null | undefined} [value]\n * @returns {string}\n */\nfunction clean(value) {\n  return String(value || '').toUpperCase()\n}\n","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('mdast').Blockquote} Blockquote\n * @typedef {import('../state.js').State} State\n */\n\n/**\n * Turn an mdast `blockquote` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {Blockquote} node\n *   mdast node.\n * @returns {Element}\n *   hast node.\n */\nexport function blockquote(state, node) {\n  /** @type {Element} */\n  const result = {\n    type: 'element',\n    tagName: 'blockquote',\n    properties: {},\n    children: state.wrap(state.all(node), true)\n  }\n  state.patch(node, result)\n  return state.applyData(node, result)\n}\n","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('hast').Text} Text\n * @typedef {import('mdast').Break} Break\n * @typedef {import('../state.js').State} State\n */\n\n/**\n * Turn an mdast `break` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {Break} node\n *   mdast node.\n * @returns {Array<Element | Text>}\n *   hast element content.\n */\nexport function hardBreak(state, node) {\n  /** @type {Element} */\n  const result = {type: 'element', tagName: 'br', properties: {}, children: []}\n  state.patch(node, result)\n  return [state.applyData(node, result), {type: 'text', value: '\\n'}]\n}\n","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('hast').Properties} Properties\n * @typedef {import('mdast').Code} Code\n * @typedef {import('../state.js').State} State\n\n */\n\n/**\n * Turn an mdast `code` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {Code} node\n *   mdast node.\n * @returns {Element}\n *   hast node.\n */\nexport function code(state, node) {\n  const value = node.value ? node.value + '\\n' : ''\n  // To do: next major, use `node.lang` w/o regex, the splitting’s been going\n  // on for years in remark now.\n  const lang = node.lang ? node.lang.match(/^[^ \\t]+(?=[ \\t]|$)/) : null\n  /** @type {Properties} */\n  const properties = {}\n\n  if (lang) {\n    properties.className = ['language-' + lang]\n  }\n\n  // Create `<code>`.\n  /** @type {Element} */\n  let result = {\n    type: 'element',\n    tagName: 'code',\n    properties,\n    children: [{type: 'text', value}]\n  }\n\n  if (node.meta) {\n    result.data = {meta: node.meta}\n  }\n\n  state.patch(node, result)\n  result = state.applyData(node, result)\n\n  // Create `<pre>`.\n  result = {type: 'element', tagName: 'pre', properties: {}, children: [result]}\n  state.patch(node, result)\n  return result\n}\n","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('mdast').Delete} Delete\n * @typedef {import('../state.js').State} State\n\n */\n\n/**\n * Turn an mdast `delete` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {Delete} node\n *   mdast node.\n * @returns {Element}\n *   hast node.\n */\nexport function strikethrough(state, node) {\n  /** @type {Element} */\n  const result = {\n    type: 'element',\n    tagName: 'del',\n    properties: {},\n    children: state.all(node)\n  }\n  state.patch(node, result)\n  return state.applyData(node, result)\n}\n","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('mdast').Emphasis} Emphasis\n * @typedef {import('../state.js').State} State\n */\n\n/**\n * Turn an mdast `emphasis` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {Emphasis} node\n *   mdast node.\n * @returns {Element}\n *   hast node.\n */\nexport function emphasis(state, node) {\n  /** @type {Element} */\n  const result = {\n    type: 'element',\n    tagName: 'em',\n    properties: {},\n    children: state.all(node)\n  }\n  state.patch(node, result)\n  return state.applyData(node, result)\n}\n","/**\n * @typedef {import('mdast').FootnoteReference} FootnoteReference\n * @typedef {import('hast').Element} Element\n * @typedef {import('../state.js').State} State\n */\n\nimport {normalizeUri} from 'micromark-util-sanitize-uri'\n\n/**\n * Turn an mdast `footnoteReference` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {FootnoteReference} node\n *   mdast node.\n * @returns {Element}\n *   hast node.\n */\nexport function footnoteReference(state, node) {\n  const id = String(node.identifier).toUpperCase()\n  const safeId = normalizeUri(id.toLowerCase())\n  const index = state.footnoteOrder.indexOf(id)\n  /** @type {number} */\n  let counter\n\n  if (index === -1) {\n    state.footnoteOrder.push(id)\n    state.footnoteCounts[id] = 1\n    counter = state.footnoteOrder.length\n  } else {\n    state.footnoteCounts[id]++\n    counter = index + 1\n  }\n\n  const reuseCounter = state.footnoteCounts[id]\n\n  /** @type {Element} */\n  const link = {\n    type: 'element',\n    tagName: 'a',\n    properties: {\n      href: '#' + state.clobberPrefix + 'fn-' + safeId,\n      id:\n        state.clobberPrefix +\n        'fnref-' +\n        safeId +\n        (reuseCounter > 1 ? '-' + reuseCounter : ''),\n      dataFootnoteRef: true,\n      ariaDescribedBy: ['footnote-label']\n    },\n    children: [{type: 'text', value: String(counter)}]\n  }\n  state.patch(node, link)\n\n  /** @type {Element} */\n  const sup = {\n    type: 'element',\n    tagName: 'sup',\n    properties: {},\n    children: [link]\n  }\n  state.patch(node, sup)\n  return state.applyData(node, sup)\n}\n","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('mdast').Footnote} Footnote\n * @typedef {import('../state.js').State} State\n */\n\nimport {footnoteReference} from './footnote-reference.js'\n\n// To do: when both:\n// * <https://github.com/micromark/micromark-extension-footnote>\n// * <https://github.com/syntax-tree/mdast-util-footnote>\n// …are archived, remove this (also from mdast).\n// These inline notes are not used in GFM.\n\n/**\n * Turn an mdast `footnote` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {Footnote} node\n *   mdast node.\n * @returns {Element}\n *   hast node.\n */\nexport function footnote(state, node) {\n  const footnoteById = state.footnoteById\n  let no = 1\n\n  while (no in footnoteById) no++\n\n  const identifier = String(no)\n\n  footnoteById[identifier] = {\n    type: 'footnoteDefinition',\n    identifier,\n    children: [{type: 'paragraph', children: node.children}],\n    position: node.position\n  }\n\n  return footnoteReference(state, {\n    type: 'footnoteReference',\n    identifier,\n    position: node.position\n  })\n}\n","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('mdast').Heading} Heading\n * @typedef {import('../state.js').State} State\n */\n\n/**\n * Turn an mdast `heading` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {Heading} node\n *   mdast node.\n * @returns {Element}\n *   hast node.\n */\nexport function heading(state, node) {\n  /** @type {Element} */\n  const result = {\n    type: 'element',\n    tagName: 'h' + node.depth,\n    properties: {},\n    children: state.all(node)\n  }\n  state.patch(node, result)\n  return state.applyData(node, result)\n}\n","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('mdast').HTML} Html\n * @typedef {import('../state.js').State} State\n * @typedef {import('../../index.js').Raw} Raw\n */\n\n/**\n * Turn an mdast `html` node into hast (`raw` node in dangerous mode, otherwise\n * nothing).\n *\n * @param {State} state\n *   Info passed around.\n * @param {Html} node\n *   mdast node.\n * @returns {Raw | Element | null}\n *   hast node.\n */\nexport function html(state, node) {\n  if (state.dangerous) {\n    /** @type {Raw} */\n    const result = {type: 'raw', value: node.value}\n    state.patch(node, result)\n    return state.applyData(node, result)\n  }\n\n  // To do: next major: return `undefined`.\n  return null\n}\n","/**\n * @typedef {import('hast').ElementContent} ElementContent\n *\n * @typedef {import('mdast').Content} Content\n * @typedef {import('mdast').Reference} Reference\n * @typedef {import('mdast').Root} Root\n *\n * @typedef {import('./state.js').State} State\n */\n\n/**\n * @typedef {Root | Content} Nodes\n * @typedef {Extract<Nodes, Reference>} References\n */\n\n// To do: next major: always return array.\n\n/**\n * Return the content of a reference without definition as plain text.\n *\n * @param {State} state\n *   Info passed around.\n * @param {References} node\n *   Reference node (image, link).\n * @returns {ElementContent | Array<ElementContent>}\n *   hast content.\n */\nexport function revert(state, node) {\n  const subtype = node.referenceType\n  let suffix = ']'\n\n  if (subtype === 'collapsed') {\n    suffix += '[]'\n  } else if (subtype === 'full') {\n    suffix += '[' + (node.label || node.identifier) + ']'\n  }\n\n  if (node.type === 'imageReference') {\n    return {type: 'text', value: '![' + node.alt + suffix}\n  }\n\n  const contents = state.all(node)\n  const head = contents[0]\n\n  if (head && head.type === 'text') {\n    head.value = '[' + head.value\n  } else {\n    contents.unshift({type: 'text', value: '['})\n  }\n\n  const tail = contents[contents.length - 1]\n\n  if (tail && tail.type === 'text') {\n    tail.value += suffix\n  } else {\n    contents.push({type: 'text', value: suffix})\n  }\n\n  return contents\n}\n","/**\n * @typedef {import('hast').ElementContent} ElementContent\n * @typedef {import('hast').Element} Element\n * @typedef {import('hast').Properties} Properties\n * @typedef {import('mdast').ImageReference} ImageReference\n * @typedef {import('../state.js').State} State\n */\n\nimport {normalizeUri} from 'micromark-util-sanitize-uri'\nimport {revert} from '../revert.js'\n\n/**\n * Turn an mdast `imageReference` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {ImageReference} node\n *   mdast node.\n * @returns {ElementContent | Array<ElementContent>}\n *   hast node.\n */\nexport function imageReference(state, node) {\n  const def = state.definition(node.identifier)\n\n  if (!def) {\n    return revert(state, node)\n  }\n\n  /** @type {Properties} */\n  const properties = {src: normalizeUri(def.url || ''), alt: node.alt}\n\n  if (def.title !== null && def.title !== undefined) {\n    properties.title = def.title\n  }\n\n  /** @type {Element} */\n  const result = {type: 'element', tagName: 'img', properties, children: []}\n  state.patch(node, result)\n  return state.applyData(node, result)\n}\n","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('hast').Properties} Properties\n * @typedef {import('mdast').Image} Image\n * @typedef {import('../state.js').State} State\n */\n\nimport {normalizeUri} from 'micromark-util-sanitize-uri'\n\n/**\n * Turn an mdast `image` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {Image} node\n *   mdast node.\n * @returns {Element}\n *   hast node.\n */\nexport function image(state, node) {\n  /** @type {Properties} */\n  const properties = {src: normalizeUri(node.url)}\n\n  if (node.alt !== null && node.alt !== undefined) {\n    properties.alt = node.alt\n  }\n\n  if (node.title !== null && node.title !== undefined) {\n    properties.title = node.title\n  }\n\n  /** @type {Element} */\n  const result = {type: 'element', tagName: 'img', properties, children: []}\n  state.patch(node, result)\n  return state.applyData(node, result)\n}\n","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('hast').Text} Text\n * @typedef {import('mdast').InlineCode} InlineCode\n * @typedef {import('../state.js').State} State\n */\n\n/**\n * Turn an mdast `inlineCode` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {InlineCode} node\n *   mdast node.\n * @returns {Element}\n *   hast node.\n */\nexport function inlineCode(state, node) {\n  /** @type {Text} */\n  const text = {type: 'text', value: node.value.replace(/\\r?\\n|\\r/g, ' ')}\n  state.patch(node, text)\n\n  /** @type {Element} */\n  const result = {\n    type: 'element',\n    tagName: 'code',\n    properties: {},\n    children: [text]\n  }\n  state.patch(node, result)\n  return state.applyData(node, result)\n}\n","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('hast').ElementContent} ElementContent\n * @typedef {import('hast').Properties} Properties\n * @typedef {import('mdast').LinkReference} LinkReference\n * @typedef {import('../state.js').State} State\n */\n\nimport {normalizeUri} from 'micromark-util-sanitize-uri'\nimport {revert} from '../revert.js'\n\n/**\n * Turn an mdast `linkReference` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {LinkReference} node\n *   mdast node.\n * @returns {ElementContent | Array<ElementContent>}\n *   hast node.\n */\nexport function linkReference(state, node) {\n  const def = state.definition(node.identifier)\n\n  if (!def) {\n    return revert(state, node)\n  }\n\n  /** @type {Properties} */\n  const properties = {href: normalizeUri(def.url || '')}\n\n  if (def.title !== null && def.title !== undefined) {\n    properties.title = def.title\n  }\n\n  /** @type {Element} */\n  const result = {\n    type: 'element',\n    tagName: 'a',\n    properties,\n    children: state.all(node)\n  }\n  state.patch(node, result)\n  return state.applyData(node, result)\n}\n","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('hast').Properties} Properties\n * @typedef {import('mdast').Link} Link\n * @typedef {import('../state.js').State} State\n */\n\nimport {normalizeUri} from 'micromark-util-sanitize-uri'\n\n/**\n * Turn an mdast `link` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {Link} node\n *   mdast node.\n * @returns {Element}\n *   hast node.\n */\nexport function link(state, node) {\n  /** @type {Properties} */\n  const properties = {href: normalizeUri(node.url)}\n\n  if (node.title !== null && node.title !== undefined) {\n    properties.title = node.title\n  }\n\n  /** @type {Element} */\n  const result = {\n    type: 'element',\n    tagName: 'a',\n    properties,\n    children: state.all(node)\n  }\n  state.patch(node, result)\n  return state.applyData(node, result)\n}\n","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('hast').ElementContent} ElementContent\n * @typedef {import('hast').Properties} Properties\n * @typedef {import('mdast').Content} Content\n * @typedef {import('mdast').ListItem} ListItem\n * @typedef {import('mdast').Parent} Parent\n * @typedef {import('mdast').Root} Root\n * @typedef {import('../state.js').State} State\n */\n\n/**\n * @typedef {Root | Content} Nodes\n * @typedef {Extract<Nodes, Parent>} Parents\n */\n\n/**\n * Turn an mdast `listItem` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {ListItem} node\n *   mdast node.\n * @param {Parents | null | undefined} parent\n *   Parent of `node`.\n * @returns {Element}\n *   hast node.\n */\nexport function listItem(state, node, parent) {\n  const results = state.all(node)\n  const loose = parent ? listLoose(parent) : listItemLoose(node)\n  /** @type {Properties} */\n  const properties = {}\n  /** @type {Array<ElementContent>} */\n  const children = []\n\n  if (typeof node.checked === 'boolean') {\n    const head = results[0]\n    /** @type {Element} */\n    let paragraph\n\n    if (head && head.type === 'element' && head.tagName === 'p') {\n      paragraph = head\n    } else {\n      paragraph = {type: 'element', tagName: 'p', properties: {}, children: []}\n      results.unshift(paragraph)\n    }\n\n    if (paragraph.children.length > 0) {\n      paragraph.children.unshift({type: 'text', value: ' '})\n    }\n\n    paragraph.children.unshift({\n      type: 'element',\n      tagName: 'input',\n      properties: {type: 'checkbox', checked: node.checked, disabled: true},\n      children: []\n    })\n\n    // According to github-markdown-css, this class hides bullet.\n    // See: <https://github.com/sindresorhus/github-markdown-css>.\n    properties.className = ['task-list-item']\n  }\n\n  let index = -1\n\n  while (++index < results.length) {\n    const child = results[index]\n\n    // Add eols before nodes, except if this is a loose, first paragraph.\n    if (\n      loose ||\n      index !== 0 ||\n      child.type !== 'element' ||\n      child.tagName !== 'p'\n    ) {\n      children.push({type: 'text', value: '\\n'})\n    }\n\n    if (child.type === 'element' && child.tagName === 'p' && !loose) {\n      children.push(...child.children)\n    } else {\n      children.push(child)\n    }\n  }\n\n  const tail = results[results.length - 1]\n\n  // Add a final eol.\n  if (tail && (loose || tail.type !== 'element' || tail.tagName !== 'p')) {\n    children.push({type: 'text', value: '\\n'})\n  }\n\n  /** @type {Element} */\n  const result = {type: 'element', tagName: 'li', properties, children}\n  state.patch(node, result)\n  return state.applyData(node, result)\n}\n\n/**\n * @param {Parents} node\n * @return {Boolean}\n */\nfunction listLoose(node) {\n  let loose = false\n  if (node.type === 'list') {\n    loose = node.spread || false\n    const children = node.children\n    let index = -1\n\n    while (!loose && ++index < children.length) {\n      loose = listItemLoose(children[index])\n    }\n  }\n\n  return loose\n}\n\n/**\n * @param {ListItem} node\n * @return {Boolean}\n */\nfunction listItemLoose(node) {\n  const spread = node.spread\n\n  return spread === undefined || spread === null\n    ? node.children.length > 1\n    : spread\n}\n","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('hast').Properties} Properties\n * @typedef {import('mdast').List} List\n * @typedef {import('../state.js').State} State\n */\n\n/**\n * Turn an mdast `list` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {List} node\n *   mdast node.\n * @returns {Element}\n *   hast node.\n */\nexport function list(state, node) {\n  /** @type {Properties} */\n  const properties = {}\n  const results = state.all(node)\n  let index = -1\n\n  if (typeof node.start === 'number' && node.start !== 1) {\n    properties.start = node.start\n  }\n\n  // Like GitHub, add a class for custom styling.\n  while (++index < results.length) {\n    const child = results[index]\n\n    if (\n      child.type === 'element' &&\n      child.tagName === 'li' &&\n      child.properties &&\n      Array.isArray(child.properties.className) &&\n      child.properties.className.includes('task-list-item')\n    ) {\n      properties.className = ['contains-task-list']\n      break\n    }\n  }\n\n  /** @type {Element} */\n  const result = {\n    type: 'element',\n    tagName: node.ordered ? 'ol' : 'ul',\n    properties,\n    children: state.wrap(results, true)\n  }\n  state.patch(node, result)\n  return state.applyData(node, result)\n}\n","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('mdast').Paragraph} Paragraph\n * @typedef {import('../state.js').State} State\n */\n\n/**\n * Turn an mdast `paragraph` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {Paragraph} node\n *   mdast node.\n * @returns {Element}\n *   hast node.\n */\nexport function paragraph(state, node) {\n  /** @type {Element} */\n  const result = {\n    type: 'element',\n    tagName: 'p',\n    properties: {},\n    children: state.all(node)\n  }\n  state.patch(node, result)\n  return state.applyData(node, result)\n}\n","/**\n * @typedef {import('hast').Root} HastRoot\n * @typedef {import('hast').Element} HastElement\n * @typedef {import('mdast').Root} MdastRoot\n * @typedef {import('../state.js').State} State\n */\n\n/**\n * Turn an mdast `root` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {MdastRoot} node\n *   mdast node.\n * @returns {HastRoot | HastElement}\n *   hast node.\n */\nexport function root(state, node) {\n  /** @type {HastRoot} */\n  const result = {type: 'root', children: state.wrap(state.all(node))}\n  state.patch(node, result)\n  return state.applyData(node, result)\n}\n","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('mdast').Strong} Strong\n * @typedef {import('../state.js').State} State\n */\n\n/**\n * Turn an mdast `strong` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {Strong} node\n *   mdast node.\n * @returns {Element}\n *   hast node.\n */\nexport function strong(state, node) {\n  /** @type {Element} */\n  const result = {\n    type: 'element',\n    tagName: 'strong',\n    properties: {},\n    children: state.all(node)\n  }\n  state.patch(node, result)\n  return state.applyData(node, result)\n}\n","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('mdast').Table} Table\n * @typedef {import('../state.js').State} State\n */\n\nimport {pointStart, pointEnd} from 'unist-util-position'\n\n/**\n * Turn an mdast `table` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {Table} node\n *   mdast node.\n * @returns {Element}\n *   hast node.\n */\nexport function table(state, node) {\n  const rows = state.all(node)\n  const firstRow = rows.shift()\n  /** @type {Array<Element>} */\n  const tableContent = []\n\n  if (firstRow) {\n    /** @type {Element} */\n    const head = {\n      type: 'element',\n      tagName: 'thead',\n      properties: {},\n      children: state.wrap([firstRow], true)\n    }\n    state.patch(node.children[0], head)\n    tableContent.push(head)\n  }\n\n  if (rows.length > 0) {\n    /** @type {Element} */\n    const body = {\n      type: 'element',\n      tagName: 'tbody',\n      properties: {},\n      children: state.wrap(rows, true)\n    }\n\n    const start = pointStart(node.children[1])\n    const end = pointEnd(node.children[node.children.length - 1])\n    if (start.line && end.line) body.position = {start, end}\n    tableContent.push(body)\n  }\n\n  /** @type {Element} */\n  const result = {\n    type: 'element',\n    tagName: 'table',\n    properties: {},\n    children: state.wrap(tableContent, true)\n  }\n  state.patch(node, result)\n  return state.applyData(node, result)\n}\n","/**\n * @typedef {import('hast').Properties} Properties\n * @typedef {import('hast').Element} Element\n * @typedef {import('hast').ElementContent} ElementContent\n * @typedef {import('mdast').Content} Content\n * @typedef {import('mdast').Parent} Parent\n * @typedef {import('mdast').Root} Root\n * @typedef {import('mdast').TableRow} TableRow\n * @typedef {import('../state.js').State} State\n */\n\n/**\n * @typedef {Root | Content} Nodes\n * @typedef {Extract<Nodes, Parent>} Parents\n */\n\n/**\n * Turn an mdast `tableRow` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {TableRow} node\n *   mdast node.\n * @param {Parents | null | undefined} parent\n *   Parent of `node`.\n * @returns {Element}\n *   hast node.\n */\nexport function tableRow(state, node, parent) {\n  const siblings = parent ? parent.children : undefined\n  // Generate a body row when without parent.\n  const rowIndex = siblings ? siblings.indexOf(node) : 1\n  const tagName = rowIndex === 0 ? 'th' : 'td'\n  const align = parent && parent.type === 'table' ? parent.align : undefined\n  const length = align ? align.length : node.children.length\n  let cellIndex = -1\n  /** @type {Array<ElementContent>} */\n  const cells = []\n\n  while (++cellIndex < length) {\n    // Note: can also be undefined.\n    const cell = node.children[cellIndex]\n    /** @type {Properties} */\n    const properties = {}\n    const alignValue = align ? align[cellIndex] : undefined\n\n    if (alignValue) {\n      properties.align = alignValue\n    }\n\n    /** @type {Element} */\n    let result = {type: 'element', tagName, properties, children: []}\n\n    if (cell) {\n      result.children = state.all(cell)\n      state.patch(cell, result)\n      result = state.applyData(node, result)\n    }\n\n    cells.push(result)\n  }\n\n  /** @type {Element} */\n  const result = {\n    type: 'element',\n    tagName: 'tr',\n    properties: {},\n    children: state.wrap(cells, true)\n  }\n  state.patch(node, result)\n  return state.applyData(node, result)\n}\n","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('mdast').TableCell} TableCell\n * @typedef {import('../state.js').State} State\n */\n\n/**\n * Turn an mdast `tableCell` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {TableCell} node\n *   mdast node.\n * @returns {Element}\n *   hast node.\n */\nexport function tableCell(state, node) {\n  // Note: this function is normally not called: see `table-row` for how rows\n  // and their cells are compiled.\n  /** @type {Element} */\n  const result = {\n    type: 'element',\n    tagName: 'td', // Assume body cell.\n    properties: {},\n    children: state.all(node)\n  }\n  state.patch(node, result)\n  return state.applyData(node, result)\n}\n","const tab = 9 /* `\\t` */\nconst space = 32 /* ` ` */\n\n/**\n * Remove initial and final spaces and tabs at the line breaks in `value`.\n * Does not trim initial and final spaces and tabs of the value itself.\n *\n * @param {string} value\n *   Value to trim.\n * @returns {string}\n *   Trimmed value.\n */\nexport function trimLines(value) {\n  const source = String(value)\n  const search = /\\r?\\n|\\r/g\n  let match = search.exec(source)\n  let last = 0\n  /** @type {Array<string>} */\n  const lines = []\n\n  while (match) {\n    lines.push(\n      trimLine(source.slice(last, match.index), last > 0, true),\n      match[0]\n    )\n\n    last = match.index + match[0].length\n    match = search.exec(source)\n  }\n\n  lines.push(trimLine(source.slice(last), last > 0, false))\n\n  return lines.join('')\n}\n\n/**\n * @param {string} value\n *   Line to trim.\n * @param {boolean} start\n *   Whether to trim the start of the line.\n * @param {boolean} end\n *   Whether to trim the end of the line.\n * @returns {string}\n *   Trimmed line.\n */\nfunction trimLine(value, start, end) {\n  let startIndex = 0\n  let endIndex = value.length\n\n  if (start) {\n    let code = value.codePointAt(startIndex)\n\n    while (code === tab || code === space) {\n      startIndex++\n      code = value.codePointAt(startIndex)\n    }\n  }\n\n  if (end) {\n    let code = value.codePointAt(endIndex - 1)\n\n    while (code === tab || code === space) {\n      endIndex--\n      code = value.codePointAt(endIndex - 1)\n    }\n  }\n\n  return endIndex > startIndex ? value.slice(startIndex, endIndex) : ''\n}\n","/**\n * @typedef {import('hast').Element} HastElement\n * @typedef {import('hast').Text} HastText\n * @typedef {import('mdast').Text} MdastText\n * @typedef {import('../state.js').State} State\n */\n\nimport {trimLines} from 'trim-lines'\n\n/**\n * Turn an mdast `text` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {MdastText} node\n *   mdast node.\n * @returns {HastText | HastElement}\n *   hast node.\n */\nexport function text(state, node) {\n  /** @type {HastText} */\n  const result = {type: 'text', value: trimLines(String(node.value))}\n  state.patch(node, result)\n  return state.applyData(node, result)\n}\n","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('mdast').ThematicBreak} ThematicBreak\n * @typedef {import('../state.js').State} State\n */\n\n/**\n * Turn an mdast `thematicBreak` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {ThematicBreak} node\n *   mdast node.\n * @returns {Element}\n *   hast node.\n */\nexport function thematicBreak(state, node) {\n  /** @type {Element} */\n  const result = {\n    type: 'element',\n    tagName: 'hr',\n    properties: {},\n    children: []\n  }\n  state.patch(node, result)\n  return state.applyData(node, result)\n}\n","import {blockquote} from './blockquote.js'\nimport {hardBreak} from './break.js'\nimport {code} from './code.js'\nimport {strikethrough} from './delete.js'\nimport {emphasis} from './emphasis.js'\nimport {footnoteReference} from './footnote-reference.js'\nimport {footnote} from './footnote.js'\nimport {heading} from './heading.js'\nimport {html} from './html.js'\nimport {imageReference} from './image-reference.js'\nimport {image} from './image.js'\nimport {inlineCode} from './inline-code.js'\nimport {linkReference} from './link-reference.js'\nimport {link} from './link.js'\nimport {listItem} from './list-item.js'\nimport {list} from './list.js'\nimport {paragraph} from './paragraph.js'\nimport {root} from './root.js'\nimport {strong} from './strong.js'\nimport {table} from './table.js'\nimport {tableRow} from './table-row.js'\nimport {tableCell} from './table-cell.js'\nimport {text} from './text.js'\nimport {thematicBreak} from './thematic-break.js'\n\n/**\n * Default handlers for nodes.\n */\nexport const handlers = {\n  blockquote,\n  break: hardBreak,\n  code,\n  delete: strikethrough,\n  emphasis,\n  footnoteReference,\n  footnote,\n  heading,\n  html,\n  imageReference,\n  image,\n  inlineCode,\n  linkReference,\n  link,\n  listItem,\n  list,\n  paragraph,\n  root,\n  strong,\n  table,\n  tableCell,\n  tableRow,\n  text,\n  thematicBreak,\n  toml: ignore,\n  yaml: ignore,\n  definition: ignore,\n  footnoteDefinition: ignore\n}\n\n// Return nothing for nodes that are ignored.\nfunction ignore() {\n  // To do: next major: return `undefined`.\n  return null\n}\n","/**\n * @typedef {import('hast').Content} HastContent\n * @typedef {import('hast').Element} HastElement\n * @typedef {import('hast').ElementContent} HastElementContent\n * @typedef {import('hast').Properties} HastProperties\n * @typedef {import('hast').Root} HastRoot\n * @typedef {import('hast').Text} HastText\n *\n * @typedef {import('mdast').Content} MdastContent\n * @typedef {import('mdast').Definition} MdastDefinition\n * @typedef {import('mdast').FootnoteDefinition} MdastFootnoteDefinition\n * @typedef {import('mdast').Parent} MdastParent\n * @typedef {import('mdast').Root} MdastRoot\n */\n\n/**\n * @typedef {HastRoot | HastContent} HastNodes\n * @typedef {MdastRoot | MdastContent} MdastNodes\n * @typedef {Extract<MdastNodes, MdastParent>} MdastParents\n *\n * @typedef EmbeddedHastFields\n *   hast fields.\n * @property {string | null | undefined} [hName]\n *   Generate a specific element with this tag name instead.\n * @property {HastProperties | null | undefined} [hProperties]\n *   Generate an element with these properties instead.\n * @property {Array<HastElementContent> | null | undefined} [hChildren]\n *   Generate an element with this content instead.\n *\n * @typedef {Record<string, unknown> & EmbeddedHastFields} MdastData\n *   mdast data with embedded hast fields.\n *\n * @typedef {MdastNodes & {data?: MdastData | null | undefined}} MdastNodeWithData\n *   mdast node with embedded hast data.\n *\n * @typedef PointLike\n *   Point-like value.\n * @property {number | null | undefined} [line]\n *   Line.\n * @property {number | null | undefined} [column]\n *   Column.\n * @property {number | null | undefined} [offset]\n *   Offset.\n *\n * @typedef PositionLike\n *   Position-like value.\n * @property {PointLike | null | undefined} [start]\n *   Point-like value.\n * @property {PointLike | null | undefined} [end]\n *   Point-like value.\n *\n * @callback Handler\n *   Handle a node.\n * @param {State} state\n *   Info passed around.\n * @param {any} node\n *   mdast node to handle.\n * @param {MdastParents | null | undefined} parent\n *   Parent of `node`.\n * @returns {HastElementContent | Array<HastElementContent> | null | undefined}\n *   hast node.\n *\n * @callback HFunctionProps\n *   Signature of `state` for when props are passed.\n * @param {MdastNodes | PositionLike | null | undefined} node\n *   mdast node or unist position.\n * @param {string} tagName\n *   HTML tag name.\n * @param {HastProperties} props\n *   Properties.\n * @param {Array<HastElementContent> | null | undefined} [children]\n *   hast content.\n * @returns {HastElement}\n *   Compiled element.\n *\n * @callback HFunctionNoProps\n *   Signature of `state` for when no props are passed.\n * @param {MdastNodes | PositionLike | null | undefined} node\n *   mdast node or unist position.\n * @param {string} tagName\n *   HTML tag name.\n * @param {Array<HastElementContent> | null | undefined} [children]\n *   hast content.\n * @returns {HastElement}\n *   Compiled element.\n *\n * @typedef HFields\n *   Info on `state`.\n * @property {boolean} dangerous\n *   Whether HTML is allowed.\n * @property {string} clobberPrefix\n *   Prefix to use to prevent DOM clobbering.\n * @property {string} footnoteLabel\n *   Label to use to introduce the footnote section.\n * @property {string} footnoteLabelTagName\n *   HTML used for the footnote label.\n * @property {HastProperties} footnoteLabelProperties\n *   Properties on the HTML tag used for the footnote label.\n * @property {string} footnoteBackLabel\n *   Label to use from backreferences back to their footnote call.\n * @property {(identifier: string) => MdastDefinition | null} definition\n *   Definition cache.\n * @property {Record<string, MdastFootnoteDefinition>} footnoteById\n *   Footnote definitions by their identifier.\n * @property {Array<string>} footnoteOrder\n *   Identifiers of order when footnote calls first appear in tree order.\n * @property {Record<string, number>} footnoteCounts\n *   Counts for how often the same footnote was called.\n * @property {Handlers} handlers\n *   Applied handlers.\n * @property {Handler} unknownHandler\n *   Handler for any none not in `passThrough` or otherwise handled.\n * @property {(from: MdastNodes, node: HastNodes) => void} patch\n *   Copy a node’s positional info.\n * @property {<Type extends HastNodes>(from: MdastNodes, to: Type) => Type | HastElement} applyData\n *   Honor the `data` of `from`, and generate an element instead of `node`.\n * @property {(node: MdastNodes, parent: MdastParents | null | undefined) => HastElementContent | Array<HastElementContent> | null | undefined} one\n *   Transform an mdast node to hast.\n * @property {(node: MdastNodes) => Array<HastElementContent>} all\n *   Transform the children of an mdast parent to hast.\n * @property {<Type extends HastContent>(nodes: Array<Type>, loose?: boolean | null | undefined) => Array<Type | HastText>} wrap\n *   Wrap `nodes` with line endings between each node, adds initial/final line endings when `loose`.\n * @property {(left: MdastNodeWithData | PositionLike | null | undefined, right: HastElementContent) => HastElementContent} augment\n *   Like `state` but lower-level and usable on non-elements.\n *   Deprecated: use `patch` and `applyData`.\n * @property {Array<string>} passThrough\n *   List of node types to pass through untouched (except for their children).\n *\n * @typedef Options\n *   Configuration (optional).\n * @property {boolean | null | undefined} [allowDangerousHtml=false]\n *   Whether to persist raw HTML in markdown in the hast tree.\n * @property {string | null | undefined} [clobberPrefix='user-content-']\n *   Prefix to use before the `id` attribute on footnotes to prevent it from\n *   *clobbering*.\n * @property {string | null | undefined} [footnoteBackLabel='Back to content']\n *   Label to use from backreferences back to their footnote call (affects\n *   screen readers).\n * @property {string | null | undefined} [footnoteLabel='Footnotes']\n *   Label to use for the footnotes section (affects screen readers).\n * @property {HastProperties | null | undefined} [footnoteLabelProperties={className: ['sr-only']}]\n *   Properties to use on the footnote label (note that `id: 'footnote-label'`\n *   is always added as footnote calls use it with `aria-describedby` to\n *   provide an accessible label).\n * @property {string | null | undefined} [footnoteLabelTagName='h2']\n *   Tag name to use for the footnote label.\n * @property {Handlers | null | undefined} [handlers]\n *   Extra handlers for nodes.\n * @property {Array<string> | null | undefined} [passThrough]\n *   List of custom mdast node types to pass through (keep) in hast (note that\n *   the node itself is passed, but eventual children are transformed).\n * @property {Handler | null | undefined} [unknownHandler]\n *   Handler for all unknown nodes.\n *\n * @typedef {Record<string, Handler>} Handlers\n *   Handle nodes.\n *\n * @typedef {HFunctionProps & HFunctionNoProps & HFields} State\n *   Info passed around.\n */\n\nimport {visit} from 'unist-util-visit'\nimport {position, pointStart, pointEnd} from 'unist-util-position'\nimport {generated} from 'unist-util-generated'\nimport {definitions} from 'mdast-util-definitions'\nimport {handlers} from './handlers/index.js'\n\nconst own = {}.hasOwnProperty\n\n/**\n * Create `state` from an mdast tree.\n *\n * @param {MdastNodes} tree\n *   mdast node to transform.\n * @param {Options | null | undefined} [options]\n *   Configuration.\n * @returns {State}\n *   `state` function.\n */\nexport function createState(tree, options) {\n  const settings = options || {}\n  const dangerous = settings.allowDangerousHtml || false\n  /** @type {Record<string, MdastFootnoteDefinition>} */\n  const footnoteById = {}\n\n  // To do: next major: add `options` to state, remove:\n  // `dangerous`, `clobberPrefix`, `footnoteLabel`, `footnoteLabelTagName`,\n  // `footnoteLabelProperties`, `footnoteBackLabel`, `passThrough`,\n  // `unknownHandler`.\n\n  // To do: next major: move to `state.options.allowDangerousHtml`.\n  state.dangerous = dangerous\n  // To do: next major: move to `state.options`.\n  state.clobberPrefix =\n    settings.clobberPrefix === undefined || settings.clobberPrefix === null\n      ? 'user-content-'\n      : settings.clobberPrefix\n  // To do: next major: move to `state.options`.\n  state.footnoteLabel = settings.footnoteLabel || 'Footnotes'\n  // To do: next major: move to `state.options`.\n  state.footnoteLabelTagName = settings.footnoteLabelTagName || 'h2'\n  // To do: next major: move to `state.options`.\n  state.footnoteLabelProperties = settings.footnoteLabelProperties || {\n    className: ['sr-only']\n  }\n  // To do: next major: move to `state.options`.\n  state.footnoteBackLabel = settings.footnoteBackLabel || 'Back to content'\n  // To do: next major: move to `state.options`.\n  state.unknownHandler = settings.unknownHandler\n  // To do: next major: move to `state.options`.\n  state.passThrough = settings.passThrough\n\n  state.handlers = {...handlers, ...settings.handlers}\n\n  // To do: next major: replace utility with `definitionById` object, so we\n  // only walk once (as we need footnotes too).\n  state.definition = definitions(tree)\n  state.footnoteById = footnoteById\n  /** @type {Array<string>} */\n  state.footnoteOrder = []\n  /** @type {Record<string, number>} */\n  state.footnoteCounts = {}\n\n  state.patch = patch\n  state.applyData = applyData\n  state.one = oneBound\n  state.all = allBound\n  state.wrap = wrap\n  // To do: next major: remove `augment`.\n  state.augment = augment\n\n  visit(tree, 'footnoteDefinition', (definition) => {\n    const id = String(definition.identifier).toUpperCase()\n\n    // Mimick CM behavior of link definitions.\n    // See: <https://github.com/syntax-tree/mdast-util-definitions/blob/8290999/index.js#L26>.\n    if (!own.call(footnoteById, id)) {\n      footnoteById[id] = definition\n    }\n  })\n\n  // @ts-expect-error Hush, it’s fine!\n  return state\n\n  /**\n   * Finalise the created `right`, a hast node, from `left`, an mdast node.\n   *\n   * @param {MdastNodeWithData | PositionLike | null | undefined} left\n   * @param {HastElementContent} right\n   * @returns {HastElementContent}\n   */\n  /* c8 ignore start */\n  // To do: next major: remove.\n  function augment(left, right) {\n    // Handle `data.hName`, `data.hProperties, `data.hChildren`.\n    if (left && 'data' in left && left.data) {\n      /** @type {MdastData} */\n      const data = left.data\n\n      if (data.hName) {\n        if (right.type !== 'element') {\n          right = {\n            type: 'element',\n            tagName: '',\n            properties: {},\n            children: []\n          }\n        }\n\n        right.tagName = data.hName\n      }\n\n      if (right.type === 'element' && data.hProperties) {\n        right.properties = {...right.properties, ...data.hProperties}\n      }\n\n      if ('children' in right && right.children && data.hChildren) {\n        right.children = data.hChildren\n      }\n    }\n\n    if (left) {\n      const ctx = 'type' in left ? left : {position: left}\n\n      if (!generated(ctx)) {\n        // @ts-expect-error: fine.\n        right.position = {start: pointStart(ctx), end: pointEnd(ctx)}\n      }\n    }\n\n    return right\n  }\n  /* c8 ignore stop */\n\n  /**\n   * Create an element for `node`.\n   *\n   * @type {HFunctionProps}\n   */\n  /* c8 ignore start */\n  // To do: next major: remove.\n  function state(node, tagName, props, children) {\n    if (Array.isArray(props)) {\n      children = props\n      props = {}\n    }\n\n    // @ts-expect-error augmenting an element yields an element.\n    return augment(node, {\n      type: 'element',\n      tagName,\n      properties: props || {},\n      children: children || []\n    })\n  }\n  /* c8 ignore stop */\n\n  /**\n   * Transform an mdast node into a hast node.\n   *\n   * @param {MdastNodes} node\n   *   mdast node.\n   * @param {MdastParents | null | undefined} [parent]\n   *   Parent of `node`.\n   * @returns {HastElementContent | Array<HastElementContent> | null | undefined}\n   *   Resulting hast node.\n   */\n  function oneBound(node, parent) {\n    // @ts-expect-error: that’s a state :)\n    return one(state, node, parent)\n  }\n\n  /**\n   * Transform the children of an mdast node into hast nodes.\n   *\n   * @param {MdastNodes} parent\n   *   mdast node to compile\n   * @returns {Array<HastElementContent>}\n   *   Resulting hast nodes.\n   */\n  function allBound(parent) {\n    // @ts-expect-error: that’s a state :)\n    return all(state, parent)\n  }\n}\n\n/**\n * Copy a node’s positional info.\n *\n * @param {MdastNodes} from\n *   mdast node to copy from.\n * @param {HastNodes} to\n *   hast node to copy into.\n * @returns {void}\n *   Nothing.\n */\nfunction patch(from, to) {\n  if (from.position) to.position = position(from)\n}\n\n/**\n * Honor the `data` of `from` and maybe generate an element instead of `to`.\n *\n * @template {HastNodes} Type\n *   Node type.\n * @param {MdastNodes} from\n *   mdast node to use data from.\n * @param {Type} to\n *   hast node to change.\n * @returns {Type | HastElement}\n *   Nothing.\n */\nfunction applyData(from, to) {\n  /** @type {Type | HastElement} */\n  let result = to\n\n  // Handle `data.hName`, `data.hProperties, `data.hChildren`.\n  if (from && from.data) {\n    const hName = from.data.hName\n    const hChildren = from.data.hChildren\n    const hProperties = from.data.hProperties\n\n    if (typeof hName === 'string') {\n      // Transforming the node resulted in an element with a different name\n      // than wanted:\n      if (result.type === 'element') {\n        result.tagName = hName\n      }\n      // Transforming the node resulted in a non-element, which happens for\n      // raw, text, and root nodes (unless custom handlers are passed).\n      // The intent is likely to keep the content around (otherwise: pass\n      // `hChildren`).\n      else {\n        result = {\n          type: 'element',\n          tagName: hName,\n          properties: {},\n          children: []\n        }\n\n        // To do: next major: take the children from the `root`, or inject the\n        // raw/text/comment or so into the element?\n        // if ('children' in node) {\n        //   // @ts-expect-error: assume `children` are allowed in elements.\n        //   result.children = node.children\n        // } else {\n        //   // @ts-expect-error: assume `node` is allowed in elements.\n        //   result.children.push(node)\n        // }\n      }\n    }\n\n    if (result.type === 'element' && hProperties) {\n      result.properties = {...result.properties, ...hProperties}\n    }\n\n    if (\n      'children' in result &&\n      result.children &&\n      hChildren !== null &&\n      hChildren !== undefined\n    ) {\n      // @ts-expect-error: assume valid children are defined.\n      result.children = hChildren\n    }\n  }\n\n  return result\n}\n\n/**\n * Transform an mdast node into a hast node.\n *\n * @param {State} state\n *   Info passed around.\n * @param {MdastNodes} node\n *   mdast node.\n * @param {MdastParents | null | undefined} [parent]\n *   Parent of `node`.\n * @returns {HastElementContent | Array<HastElementContent> | null | undefined}\n *   Resulting hast node.\n */\n// To do: next major: do not expose, keep bound.\nexport function one(state, node, parent) {\n  const type = node && node.type\n\n  // Fail on non-nodes.\n  if (!type) {\n    throw new Error('Expected node, got `' + node + '`')\n  }\n\n  if (own.call(state.handlers, type)) {\n    return state.handlers[type](state, node, parent)\n  }\n\n  if (state.passThrough && state.passThrough.includes(type)) {\n    // To do: next major: deep clone.\n    // @ts-expect-error: types of passed through nodes are expected to be added manually.\n    return 'children' in node ? {...node, children: all(state, node)} : node\n  }\n\n  if (state.unknownHandler) {\n    return state.unknownHandler(state, node, parent)\n  }\n\n  return defaultUnknownHandler(state, node)\n}\n\n/**\n * Transform the children of an mdast node into hast nodes.\n *\n * @param {State} state\n *   Info passed around.\n * @param {MdastNodes} parent\n *   mdast node to compile\n * @returns {Array<HastElementContent>}\n *   Resulting hast nodes.\n */\n// To do: next major: do not expose, keep bound.\nexport function all(state, parent) {\n  /** @type {Array<HastElementContent>} */\n  const values = []\n\n  if ('children' in parent) {\n    const nodes = parent.children\n    let index = -1\n    while (++index < nodes.length) {\n      const result = one(state, nodes[index], parent)\n\n      // To do: see if we van clean this? Can we merge texts?\n      if (result) {\n        if (index && nodes[index - 1].type === 'break') {\n          if (!Array.isArray(result) && result.type === 'text') {\n            result.value = result.value.replace(/^\\s+/, '')\n          }\n\n          if (!Array.isArray(result) && result.type === 'element') {\n            const head = result.children[0]\n\n            if (head && head.type === 'text') {\n              head.value = head.value.replace(/^\\s+/, '')\n            }\n          }\n        }\n\n        if (Array.isArray(result)) {\n          values.push(...result)\n        } else {\n          values.push(result)\n        }\n      }\n    }\n  }\n\n  return values\n}\n\n/**\n * Transform an unknown node.\n *\n * @param {State} state\n *   Info passed around.\n * @param {MdastNodes} node\n *   Unknown mdast node.\n * @returns {HastText | HastElement}\n *   Resulting hast node.\n */\nfunction defaultUnknownHandler(state, node) {\n  const data = node.data || {}\n  /** @type {HastText | HastElement} */\n  const result =\n    'value' in node &&\n    !(own.call(data, 'hProperties') || own.call(data, 'hChildren'))\n      ? {type: 'text', value: node.value}\n      : {\n          type: 'element',\n          tagName: 'div',\n          properties: {},\n          children: all(state, node)\n        }\n\n  state.patch(node, result)\n  return state.applyData(node, result)\n}\n\n/**\n * Wrap `nodes` with line endings between each node.\n *\n * @template {HastContent} Type\n *   Node type.\n * @param {Array<Type>} nodes\n *   List of nodes to wrap.\n * @param {boolean | null | undefined} [loose=false]\n *   Whether to add line endings at start and end.\n * @returns {Array<Type | HastText>}\n *   Wrapped nodes.\n */\nexport function wrap(nodes, loose) {\n  /** @type {Array<Type | HastText>} */\n  const result = []\n  let index = -1\n\n  if (loose) {\n    result.push({type: 'text', value: '\\n'})\n  }\n\n  while (++index < nodes.length) {\n    if (index) result.push({type: 'text', value: '\\n'})\n    result.push(nodes[index])\n  }\n\n  if (loose && nodes.length > 0) {\n    result.push({type: 'text', value: '\\n'})\n  }\n\n  return result\n}\n","/**\n * @typedef {import('hast').Content} HastContent\n * @typedef {import('hast').Root} HastRoot\n *\n * @typedef {import('mdast').Content} MdastContent\n * @typedef {import('mdast').Root} MdastRoot\n *\n * @typedef {import('./state.js').Options} Options\n */\n\n/**\n * @typedef {HastRoot | HastContent} HastNodes\n * @typedef {MdastRoot | MdastContent} MdastNodes\n */\n\nimport {footer} from './footer.js'\nimport {createState} from './state.js'\n\n/**\n * Transform mdast to hast.\n *\n * ##### Notes\n *\n * ###### HTML\n *\n * Raw HTML is available in mdast as `html` nodes and can be embedded in hast\n * as semistandard `raw` nodes.\n * Most utilities ignore `raw` nodes but two notable ones don’t:\n *\n * *   `hast-util-to-html` also has an option `allowDangerousHtml` which will\n *     output the raw HTML.\n *     This is typically discouraged as noted by the option name but is useful\n *     if you completely trust authors\n * *   `hast-util-raw` can handle the raw embedded HTML strings by parsing them\n *     into standard hast nodes (`element`, `text`, etc).\n *     This is a heavy task as it needs a full HTML parser, but it is the only\n *     way to support untrusted content\n *\n * ###### Footnotes\n *\n * Many options supported here relate to footnotes.\n * Footnotes are not specified by CommonMark, which we follow by default.\n * They are supported by GitHub, so footnotes can be enabled in markdown with\n * `mdast-util-gfm`.\n *\n * The options `footnoteBackLabel` and `footnoteLabel` define natural language\n * that explains footnotes, which is hidden for sighted users but shown to\n * assistive technology.\n * When your page is not in English, you must define translated values.\n *\n * Back references use ARIA attributes, but the section label itself uses a\n * heading that is hidden with an `sr-only` class.\n * To show it to sighted users, define different attributes in\n * `footnoteLabelProperties`.\n *\n * ###### Clobbering\n *\n * Footnotes introduces a problem, as it links footnote calls to footnote\n * definitions on the page through `id` attributes generated from user content,\n * which results in DOM clobbering.\n *\n * DOM clobbering is this:\n *\n * ```html\n * <p id=x></p>\n * <script>alert(x) // `x` now refers to the DOM `p#x` element</script>\n * ```\n *\n * Elements by their ID are made available by browsers on the `window` object,\n * which is a security risk.\n * Using a prefix solves this problem.\n *\n * More information on how to handle clobbering and the prefix is explained in\n * Example: headings (DOM clobbering) in `rehype-sanitize`.\n *\n * ###### Unknown nodes\n *\n * Unknown nodes are nodes with a type that isn’t in `handlers` or `passThrough`.\n * The default behavior for unknown nodes is:\n *\n * *   when the node has a `value` (and doesn’t have `data.hName`,\n *     `data.hProperties`, or `data.hChildren`, see later), create a hast `text`\n *     node\n * *   otherwise, create a `<div>` element (which could be changed with\n *     `data.hName`), with its children mapped from mdast to hast as well\n *\n * This behavior can be changed by passing an `unknownHandler`.\n *\n * @param {MdastNodes} tree\n *   mdast tree.\n * @param {Options | null | undefined} [options]\n *   Configuration.\n * @returns {HastNodes | null | undefined}\n *   hast tree.\n */\n// To do: next major: always return a single `root`.\nexport function toHast(tree, options) {\n  const state = createState(tree, options)\n  const node = state.one(tree, null)\n  const foot = footer(state)\n\n  if (foot) {\n    // @ts-expect-error If there’s a footer, there were definitions, meaning block\n    // content.\n    // So assume `node` is a parent node.\n    node.children.push({type: 'text', value: '\\n'}, foot)\n  }\n\n  // To do: next major: always return root?\n  return Array.isArray(node) ? {type: 'root', children: node} : node\n}\n","/**\n * @typedef {import('hast').Root} HastRoot\n * @typedef {import('mdast').Root} MdastRoot\n * @typedef {import('mdast-util-to-hast').Options} Options\n * @typedef {import('unified').Processor<any, any, any, any>} Processor\n *\n * @typedef {import('mdast-util-to-hast')} DoNotTouchAsThisImportIncludesRawInTree\n */\n\nimport {toHast} from 'mdast-util-to-hast'\n\n// Note: the `<MdastRoot, HastRoot>` overload doesn’t seem to work :'(\n\n/**\n * Plugin that turns markdown into HTML to support rehype.\n *\n * *   If a destination processor is given, that processor runs with a new HTML\n *     (hast) tree (bridge-mode).\n *     As the given processor runs with a hast tree, and rehype plugins support\n *     hast, that means rehype plugins can be used with the given processor.\n *     The hast tree is discarded in the end.\n *     It’s highly unlikely that you want to do this.\n * *   The common case is to not pass a destination processor, in which case the\n *     current processor continues running with a new HTML (hast) tree\n *     (mutate-mode).\n *     As the current processor continues with a hast tree, and rehype plugins\n *     support hast, that means rehype plugins can be used after\n *     `remark-rehype`.\n *     It’s likely that this is what you want to do.\n *\n * @param destination\n *   Optional unified processor.\n * @param options\n *   Options passed to `mdast-util-to-hast`.\n */\nconst remarkRehype =\n  /** @type {(import('unified').Plugin<[Processor, Options?]|[null|undefined, Options?]|[Options]|[], MdastRoot>)} */\n  (\n    function (destination, options) {\n      return destination && 'run' in destination\n        ? bridge(destination, options)\n        : mutate(destination || options)\n    }\n  )\n\nexport default remarkRehype\n\n/**\n * Bridge-mode.\n * Runs the destination with the new hast tree.\n *\n * @type {import('unified').Plugin<[Processor, Options?], MdastRoot>}\n */\nfunction bridge(destination, options) {\n  return (node, file, next) => {\n    destination.run(toHast(node, options), file, (error) => {\n      next(error)\n    })\n  }\n}\n\n/**\n * Mutate-mode.\n * Further plugins run on the hast tree.\n *\n * @type {import('unified').Plugin<[Options?]|void[], MdastRoot, HastRoot>}\n */\nfunction mutate(options) {\n  // @ts-expect-error: assume a corresponding node is returned by `toHast`.\n  return (node) => toHast(node, options)\n}\n","import {visit} from 'unist-util-visit'\n\n/**\n * @typedef {import('unist').Node} Node\n * @typedef {import('hast').Root} Root\n * @typedef {import('hast').Element} Element\n *\n * @callback AllowElement\n * @param {Element} element\n * @param {number} index\n * @param {Element|Root} parent\n * @returns {boolean|undefined}\n *\n * @typedef Options\n * @property {Array<string>} [allowedElements]\n * @property {Array<string>} [disallowedElements=[]]\n * @property {AllowElement} [allowElement]\n * @property {boolean} [unwrapDisallowed=false]\n */\n\n/**\n * @type {import('unified').Plugin<[Options], Root>}\n */\nexport default function rehypeFilter(options) {\n  if (options.allowedElements && options.disallowedElements) {\n    throw new TypeError(\n      'Only one of `allowedElements` and `disallowedElements` should be defined'\n    )\n  }\n\n  if (\n    options.allowedElements ||\n    options.disallowedElements ||\n    options.allowElement\n  ) {\n    return (tree) => {\n      visit(tree, 'element', (node, index, parent_) => {\n        const parent = /** @type {Element|Root} */ (parent_)\n        /** @type {boolean|undefined} */\n        let remove\n\n        if (options.allowedElements) {\n          remove = !options.allowedElements.includes(node.tagName)\n        } else if (options.disallowedElements) {\n          remove = options.disallowedElements.includes(node.tagName)\n        }\n\n        if (!remove && options.allowElement && typeof index === 'number') {\n          remove = !options.allowElement(node, index, parent)\n        }\n\n        if (remove && typeof index === 'number') {\n          if (options.unwrapDisallowed && node.children) {\n            parent.children.splice(index, 1, ...node.children)\n          } else {\n            parent.children.splice(index, 1)\n          }\n\n          return index\n        }\n\n        return undefined\n      })\n    }\n  }\n}\n","/**\n * Check if the given value is *inter-element whitespace*.\n *\n * @param {unknown} thing\n *   Thing to check (typically `Node` or `string`).\n * @returns {boolean}\n *   Whether the `value` is inter-element whitespace (`boolean`): consisting of\n *   zero or more of space, tab (`\\t`), line feed (`\\n`), carriage return\n *   (`\\r`), or form feed (`\\f`).\n *   If a node is passed it must be a `Text` node, whose `value` field is\n *   checked.\n */\nexport function whitespace(thing) {\n  /** @type {string} */\n  const value =\n    // @ts-expect-error looks like a node.\n    thing && typeof thing === 'object' && thing.type === 'text'\n      ? // @ts-expect-error looks like a text.\n        thing.value || ''\n      : thing\n\n  // HTML whitespace expression.\n  // See <https://infra.spec.whatwg.org/#ascii-whitespace>.\n  return typeof value === 'string' && value.replace(/[ \\t\\n\\f\\r]/g, '') === ''\n}\n","/**\n * `hast` is close to `React`, but differs in a couple of cases.\n *\n * To get a React property from a hast property, check if it is in\n * `hastToReact`, if it is, then use the corresponding value,\n * otherwise, use the hast property.\n *\n * @type {Record<string, string>}\n */\nexport const hastToReact = {\n  classId: 'classID',\n  dataType: 'datatype',\n  itemId: 'itemID',\n  strokeDashArray: 'strokeDasharray',\n  strokeDashOffset: 'strokeDashoffset',\n  strokeLineCap: 'strokeLinecap',\n  strokeLineJoin: 'strokeLinejoin',\n  strokeMiterLimit: 'strokeMiterlimit',\n  typeOf: 'typeof',\n  xLinkActuate: 'xlinkActuate',\n  xLinkArcRole: 'xlinkArcrole',\n  xLinkHref: 'xlinkHref',\n  xLinkRole: 'xlinkRole',\n  xLinkShow: 'xlinkShow',\n  xLinkTitle: 'xlinkTitle',\n  xLinkType: 'xlinkType',\n  xmlnsXLink: 'xmlnsXlink'\n}\n","import StyleToObject from './index.js';\n\nexport default StyleToObject;\n","/**\n * @template T\n * @typedef {import('react').ComponentType<T>} ComponentType<T>\n */\n\n/**\n * @template {import('react').ElementType} T\n * @typedef {import('react').ComponentPropsWithoutRef<T>} ComponentPropsWithoutRef<T>\n */\n\n/**\n * @typedef {import('react').ReactNode} ReactNode\n * @typedef {import('unist').Position} Position\n * @typedef {import('hast').Element} Element\n * @typedef {import('hast').ElementContent} ElementContent\n * @typedef {import('hast').Root} Root\n * @typedef {import('hast').Text} Text\n * @typedef {import('hast').Comment} Comment\n * @typedef {import('hast').DocType} Doctype\n * @typedef {import('property-information').Info} Info\n * @typedef {import('property-information').Schema} Schema\n * @typedef {import('./complex-types.js').ReactMarkdownProps} ReactMarkdownProps\n *\n * @typedef Raw\n * @property {'raw'} type\n * @property {string} value\n *\n * @typedef Context\n * @property {Options} options\n * @property {Schema} schema\n * @property {number} listDepth\n *\n * @callback TransformLink\n * @param {string} href\n * @param {Array<ElementContent>} children\n * @param {string?} title\n * @returns {string}\n *\n * @callback TransformImage\n * @param {string} src\n * @param {string} alt\n * @param {string?} title\n * @returns {string}\n *\n * @typedef {import('react').HTMLAttributeAnchorTarget} TransformLinkTargetType\n *\n * @callback TransformLinkTarget\n * @param {string} href\n * @param {Array<ElementContent>} children\n * @param {string?} title\n * @returns {TransformLinkTargetType|undefined}\n *\n * @typedef {keyof JSX.IntrinsicElements} ReactMarkdownNames\n *\n * To do: is `data-sourcepos` typeable?\n *\n * @typedef {ComponentPropsWithoutRef<'code'> & ReactMarkdownProps & {inline?: boolean}} CodeProps\n * @typedef {ComponentPropsWithoutRef<'h1'> & ReactMarkdownProps & {level: number}} HeadingProps\n * @typedef {ComponentPropsWithoutRef<'li'> & ReactMarkdownProps & {checked: boolean|null, index: number, ordered: boolean}} LiProps\n * @typedef {ComponentPropsWithoutRef<'ol'> & ReactMarkdownProps & {depth: number, ordered: true}} OrderedListProps\n * @typedef {ComponentPropsWithoutRef<'td'> & ReactMarkdownProps & {style?: Record<string, unknown>, isHeader: false}} TableDataCellProps\n * @typedef {ComponentPropsWithoutRef<'th'> & ReactMarkdownProps & {style?: Record<string, unknown>, isHeader: true}} TableHeaderCellProps\n * @typedef {ComponentPropsWithoutRef<'tr'> & ReactMarkdownProps & {isHeader: boolean}} TableRowProps\n * @typedef {ComponentPropsWithoutRef<'ul'> & ReactMarkdownProps & {depth: number, ordered: false}} UnorderedListProps\n *\n * @typedef {ComponentType<CodeProps>} CodeComponent\n * @typedef {ComponentType<HeadingProps>} HeadingComponent\n * @typedef {ComponentType<LiProps>} LiComponent\n * @typedef {ComponentType<OrderedListProps>} OrderedListComponent\n * @typedef {ComponentType<TableDataCellProps>} TableDataCellComponent\n * @typedef {ComponentType<TableHeaderCellProps>} TableHeaderCellComponent\n * @typedef {ComponentType<TableRowProps>} TableRowComponent\n * @typedef {ComponentType<UnorderedListProps>} UnorderedListComponent\n *\n * @typedef SpecialComponents\n * @property {CodeComponent|ReactMarkdownNames} code\n * @property {HeadingComponent|ReactMarkdownNames} h1\n * @property {HeadingComponent|ReactMarkdownNames} h2\n * @property {HeadingComponent|ReactMarkdownNames} h3\n * @property {HeadingComponent|ReactMarkdownNames} h4\n * @property {HeadingComponent|ReactMarkdownNames} h5\n * @property {HeadingComponent|ReactMarkdownNames} h6\n * @property {LiComponent|ReactMarkdownNames} li\n * @property {OrderedListComponent|ReactMarkdownNames} ol\n * @property {TableDataCellComponent|ReactMarkdownNames} td\n * @property {TableHeaderCellComponent|ReactMarkdownNames} th\n * @property {TableRowComponent|ReactMarkdownNames} tr\n * @property {UnorderedListComponent|ReactMarkdownNames} ul\n *\n * @typedef {Partial<Omit<import('./complex-types.js').NormalComponents, keyof SpecialComponents> & SpecialComponents>} Components\n *\n * @typedef Options\n * @property {boolean} [sourcePos=false]\n * @property {boolean} [rawSourcePos=false]\n * @property {boolean} [skipHtml=false]\n * @property {boolean} [includeElementIndex=false]\n * @property {null|false|TransformLink} [transformLinkUri]\n * @property {TransformImage} [transformImageUri]\n * @property {TransformLinkTargetType|TransformLinkTarget} [linkTarget]\n * @property {Components} [components]\n */\n\nimport React from 'react'\nimport ReactIs from 'react-is'\nimport {whitespace} from 'hast-util-whitespace'\nimport {svg, find, hastToReact} from 'property-information'\nimport {stringify as spaces} from 'space-separated-tokens'\nimport {stringify as commas} from 'comma-separated-tokens'\nimport style from 'style-to-object'\nimport {uriTransformer} from './uri-transformer.js'\n\nconst own = {}.hasOwnProperty\n\n// The table-related elements that must not contain whitespace text according\n// to React.\nconst tableElements = new Set(['table', 'thead', 'tbody', 'tfoot', 'tr'])\n\n/**\n * @param {Context} context\n * @param {Element|Root} node\n */\nexport function childrenToReact(context, node) {\n  /** @type {Array<ReactNode>} */\n  const children = []\n  let childIndex = -1\n  /** @type {Comment|Doctype|Element|Raw|Text} */\n  let child\n\n  while (++childIndex < node.children.length) {\n    child = node.children[childIndex]\n\n    if (child.type === 'element') {\n      children.push(toReact(context, child, childIndex, node))\n    } else if (child.type === 'text') {\n      // Currently, a warning is triggered by react for *any* white space in\n      // tables.\n      // So we drop it.\n      // See: <https://github.com/facebook/react/pull/7081>.\n      // See: <https://github.com/facebook/react/pull/7515>.\n      // See: <https://github.com/remarkjs/remark-react/issues/64>.\n      // See: <https://github.com/remarkjs/react-markdown/issues/576>.\n      if (\n        node.type !== 'element' ||\n        !tableElements.has(node.tagName) ||\n        !whitespace(child)\n      ) {\n        children.push(child.value)\n      }\n    } else if (child.type === 'raw' && !context.options.skipHtml) {\n      // Default behavior is to show (encoded) HTML.\n      children.push(child.value)\n    }\n  }\n\n  return children\n}\n\n/**\n * @param {Context} context\n * @param {Element} node\n * @param {number} index\n * @param {Element|Root} parent\n */\nfunction toReact(context, node, index, parent) {\n  const options = context.options\n  const transform =\n    options.transformLinkUri === undefined\n      ? uriTransformer\n      : options.transformLinkUri\n  const parentSchema = context.schema\n  /** @type {ReactMarkdownNames} */\n  // @ts-expect-error assume a known HTML/SVG element.\n  const name = node.tagName\n  /** @type {Record<string, unknown>} */\n  const properties = {}\n  let schema = parentSchema\n  /** @type {string} */\n  let property\n\n  if (parentSchema.space === 'html' && name === 'svg') {\n    schema = svg\n    context.schema = schema\n  }\n\n  if (node.properties) {\n    for (property in node.properties) {\n      if (own.call(node.properties, property)) {\n        addProperty(properties, property, node.properties[property], context)\n      }\n    }\n  }\n\n  if (name === 'ol' || name === 'ul') {\n    context.listDepth++\n  }\n\n  const children = childrenToReact(context, node)\n\n  if (name === 'ol' || name === 'ul') {\n    context.listDepth--\n  }\n\n  // Restore parent schema.\n  context.schema = parentSchema\n\n  // Nodes created by plugins do not have positional info, in which case we use\n  // an object that matches the position interface.\n  const position = node.position || {\n    start: {line: null, column: null, offset: null},\n    end: {line: null, column: null, offset: null}\n  }\n  const component =\n    options.components && own.call(options.components, name)\n      ? options.components[name]\n      : name\n  const basic = typeof component === 'string' || component === React.Fragment\n\n  if (!ReactIs.isValidElementType(component)) {\n    throw new TypeError(\n      `Component for name \\`${name}\\` not defined or is not renderable`\n    )\n  }\n\n  properties.key = index\n\n  if (name === 'a' && options.linkTarget) {\n    properties.target =\n      typeof options.linkTarget === 'function'\n        ? options.linkTarget(\n            String(properties.href || ''),\n            node.children,\n            typeof properties.title === 'string' ? properties.title : null\n          )\n        : options.linkTarget\n  }\n\n  if (name === 'a' && transform) {\n    properties.href = transform(\n      String(properties.href || ''),\n      node.children,\n      typeof properties.title === 'string' ? properties.title : null\n    )\n  }\n\n  if (\n    !basic &&\n    name === 'code' &&\n    parent.type === 'element' &&\n    parent.tagName !== 'pre'\n  ) {\n    properties.inline = true\n  }\n\n  if (\n    !basic &&\n    (name === 'h1' ||\n      name === 'h2' ||\n      name === 'h3' ||\n      name === 'h4' ||\n      name === 'h5' ||\n      name === 'h6')\n  ) {\n    properties.level = Number.parseInt(name.charAt(1), 10)\n  }\n\n  if (name === 'img' && options.transformImageUri) {\n    properties.src = options.transformImageUri(\n      String(properties.src || ''),\n      String(properties.alt || ''),\n      typeof properties.title === 'string' ? properties.title : null\n    )\n  }\n\n  if (!basic && name === 'li' && parent.type === 'element') {\n    const input = getInputElement(node)\n    properties.checked =\n      input && input.properties ? Boolean(input.properties.checked) : null\n    properties.index = getElementsBeforeCount(parent, node)\n    properties.ordered = parent.tagName === 'ol'\n  }\n\n  if (!basic && (name === 'ol' || name === 'ul')) {\n    properties.ordered = name === 'ol'\n    properties.depth = context.listDepth\n  }\n\n  if (name === 'td' || name === 'th') {\n    if (properties.align) {\n      if (!properties.style) properties.style = {}\n      // @ts-expect-error assume `style` is an object\n      properties.style.textAlign = properties.align\n      delete properties.align\n    }\n\n    if (!basic) {\n      properties.isHeader = name === 'th'\n    }\n  }\n\n  if (!basic && name === 'tr' && parent.type === 'element') {\n    properties.isHeader = Boolean(parent.tagName === 'thead')\n  }\n\n  // If `sourcePos` is given, pass source information (line/column info from markdown source).\n  if (options.sourcePos) {\n    properties['data-sourcepos'] = flattenPosition(position)\n  }\n\n  if (!basic && options.rawSourcePos) {\n    properties.sourcePosition = node.position\n  }\n\n  // If `includeElementIndex` is given, pass node index info to components.\n  if (!basic && options.includeElementIndex) {\n    properties.index = getElementsBeforeCount(parent, node)\n    properties.siblingCount = getElementsBeforeCount(parent)\n  }\n\n  if (!basic) {\n    properties.node = node\n  }\n\n  // Ensure no React warnings are emitted for void elements w/ children.\n  return children.length > 0\n    ? React.createElement(component, properties, children)\n    : React.createElement(component, properties)\n}\n\n/**\n * @param {Element|Root} node\n * @returns {Element?}\n */\nfunction getInputElement(node) {\n  let index = -1\n\n  while (++index < node.children.length) {\n    const child = node.children[index]\n\n    if (child.type === 'element' && child.tagName === 'input') {\n      return child\n    }\n  }\n\n  return null\n}\n\n/**\n * @param {Element|Root} parent\n * @param {Element} [node]\n * @returns {number}\n */\nfunction getElementsBeforeCount(parent, node) {\n  let index = -1\n  let count = 0\n\n  while (++index < parent.children.length) {\n    if (parent.children[index] === node) break\n    if (parent.children[index].type === 'element') count++\n  }\n\n  return count\n}\n\n/**\n * @param {Record<string, unknown>} props\n * @param {string} prop\n * @param {unknown} value\n * @param {Context} ctx\n */\nfunction addProperty(props, prop, value, ctx) {\n  const info = find(ctx.schema, prop)\n  let result = value\n\n  // Ignore nullish and `NaN` values.\n  // eslint-disable-next-line no-self-compare\n  if (result === null || result === undefined || result !== result) {\n    return\n  }\n\n  // Accept `array`.\n  // Most props are space-separated.\n  if (Array.isArray(result)) {\n    result = info.commaSeparated ? commas(result) : spaces(result)\n  }\n\n  if (info.property === 'style' && typeof result === 'string') {\n    result = parseStyle(result)\n  }\n\n  if (info.space && info.property) {\n    props[\n      own.call(hastToReact, info.property)\n        ? hastToReact[info.property]\n        : info.property\n    ] = result\n  } else if (info.attribute) {\n    props[info.attribute] = result\n  }\n}\n\n/**\n * @param {string} value\n * @returns {Record<string, string>}\n */\nfunction parseStyle(value) {\n  /** @type {Record<string, string>} */\n  const result = {}\n\n  try {\n    style(value, iterator)\n  } catch {\n    // Silent.\n  }\n\n  return result\n\n  /**\n   * @param {string} name\n   * @param {string} v\n   */\n  function iterator(name, v) {\n    const k = name.slice(0, 4) === '-ms-' ? `ms-${name.slice(4)}` : name\n    result[k.replace(/-([a-z])/g, styleReplacer)] = v\n  }\n}\n\n/**\n * @param {unknown} _\n * @param {string} $1\n */\nfunction styleReplacer(_, $1) {\n  return $1.toUpperCase()\n}\n\n/**\n * @param {Position|{start: {line: null, column: null, offset: null}, end: {line: null, column: null, offset: null}}} pos\n * @returns {string}\n */\nfunction flattenPosition(pos) {\n  return [\n    pos.start.line,\n    ':',\n    pos.start.column,\n    '-',\n    pos.end.line,\n    ':',\n    pos.end.column\n  ]\n    .map(String)\n    .join('')\n}\n","/**\n * @typedef {import('react').ReactNode} ReactNode\n * @typedef {import('react').ReactElement<{}>} ReactElement\n * @typedef {import('unified').PluggableList} PluggableList\n * @typedef {import('hast').Root} Root\n * @typedef {import('./rehype-filter.js').Options} FilterOptions\n * @typedef {import('./ast-to-react.js').Options} TransformOptions\n *\n * @typedef CoreOptions\n * @property {string} children\n *\n * @typedef PluginOptions\n * @property {PluggableList} [remarkPlugins=[]]\n * @property {PluggableList} [rehypePlugins=[]]\n * @property {import('remark-rehype').Options | undefined} [remarkRehypeOptions={}]\n *\n * @typedef LayoutOptions\n * @property {string} [className]\n *\n * @typedef {CoreOptions & PluginOptions & LayoutOptions & FilterOptions & TransformOptions} ReactMarkdownOptions\n *\n * @typedef Deprecation\n * @property {string} id\n * @property {string} [to]\n */\n\nimport React from 'react'\nimport {VFile} from 'vfile'\nimport {unified} from 'unified'\nimport remarkParse from 'remark-parse'\nimport remarkRehype from 'remark-rehype'\nimport PropTypes from 'prop-types'\nimport {html} from 'property-information'\nimport rehypeFilter from './rehype-filter.js'\nimport {childrenToReact} from './ast-to-react.js'\n\nconst own = {}.hasOwnProperty\nconst changelog =\n  'https://github.com/remarkjs/react-markdown/blob/main/changelog.md'\n\n/** @type {Record<string, Deprecation>} */\nconst deprecated = {\n  plugins: {to: 'remarkPlugins', id: 'change-plugins-to-remarkplugins'},\n  renderers: {to: 'components', id: 'change-renderers-to-components'},\n  astPlugins: {id: 'remove-buggy-html-in-markdown-parser'},\n  allowDangerousHtml: {id: 'remove-buggy-html-in-markdown-parser'},\n  escapeHtml: {id: 'remove-buggy-html-in-markdown-parser'},\n  source: {to: 'children', id: 'change-source-to-children'},\n  allowNode: {\n    to: 'allowElement',\n    id: 'replace-allownode-allowedtypes-and-disallowedtypes'\n  },\n  allowedTypes: {\n    to: 'allowedElements',\n    id: 'replace-allownode-allowedtypes-and-disallowedtypes'\n  },\n  disallowedTypes: {\n    to: 'disallowedElements',\n    id: 'replace-allownode-allowedtypes-and-disallowedtypes'\n  },\n  includeNodeIndex: {\n    to: 'includeElementIndex',\n    id: 'change-includenodeindex-to-includeelementindex'\n  }\n}\n\n/**\n * React component to render markdown.\n *\n * @param {ReactMarkdownOptions} options\n * @returns {ReactElement}\n */\nexport function ReactMarkdown(options) {\n  for (const key in deprecated) {\n    if (own.call(deprecated, key) && own.call(options, key)) {\n      const deprecation = deprecated[key]\n      console.warn(\n        `[react-markdown] Warning: please ${\n          deprecation.to ? `use \\`${deprecation.to}\\` instead of` : 'remove'\n        } \\`${key}\\` (see <${changelog}#${deprecation.id}> for more info)`\n      )\n      delete deprecated[key]\n    }\n  }\n\n  const processor = unified()\n    .use(remarkParse)\n    .use(options.remarkPlugins || [])\n    .use(remarkRehype, {\n      ...options.remarkRehypeOptions,\n      allowDangerousHtml: true\n    })\n    .use(options.rehypePlugins || [])\n    .use(rehypeFilter, options)\n\n  const file = new VFile()\n\n  if (typeof options.children === 'string') {\n    file.value = options.children\n  } else if (options.children !== undefined && options.children !== null) {\n    console.warn(\n      `[react-markdown] Warning: please pass a string as \\`children\\` (not: \\`${options.children}\\`)`\n    )\n  }\n\n  const hastNode = processor.runSync(processor.parse(file), file)\n\n  if (hastNode.type !== 'root') {\n    throw new TypeError('Expected a `root` node')\n  }\n\n  /** @type {ReactElement} */\n  let result = React.createElement(\n    React.Fragment,\n    {},\n    childrenToReact({options, schema: html, listDepth: 0}, hastNode)\n  )\n\n  if (options.className) {\n    result = React.createElement('div', {className: options.className}, result)\n  }\n\n  return result\n}\n\nReactMarkdown.propTypes = {\n  // Core options:\n  children: PropTypes.string,\n  // Layout options:\n  className: PropTypes.string,\n  // Filter options:\n  allowElement: PropTypes.func,\n  allowedElements: PropTypes.arrayOf(PropTypes.string),\n  disallowedElements: PropTypes.arrayOf(PropTypes.string),\n  unwrapDisallowed: PropTypes.bool,\n  // Plugin options:\n  remarkPlugins: PropTypes.arrayOf(\n    PropTypes.oneOfType([\n      PropTypes.object,\n      PropTypes.func,\n      PropTypes.arrayOf(\n        PropTypes.oneOfType([\n          PropTypes.bool,\n          PropTypes.string,\n          PropTypes.object,\n          PropTypes.func,\n          PropTypes.arrayOf(\n            // prettier-ignore\n            // type-coverage:ignore-next-line\n            PropTypes.any\n          )\n        ])\n      )\n    ])\n  ),\n  rehypePlugins: PropTypes.arrayOf(\n    PropTypes.oneOfType([\n      PropTypes.object,\n      PropTypes.func,\n      PropTypes.arrayOf(\n        PropTypes.oneOfType([\n          PropTypes.bool,\n          PropTypes.string,\n          PropTypes.object,\n          PropTypes.func,\n          PropTypes.arrayOf(\n            // prettier-ignore\n            // type-coverage:ignore-next-line\n            PropTypes.any\n          )\n        ])\n      )\n    ])\n  ),\n  // Transform options:\n  sourcePos: PropTypes.bool,\n  rawSourcePos: PropTypes.bool,\n  skipHtml: PropTypes.bool,\n  includeElementIndex: PropTypes.bool,\n  transformLinkUri: PropTypes.oneOfType([PropTypes.func, PropTypes.bool]),\n  linkTarget: PropTypes.oneOfType([PropTypes.func, PropTypes.string]),\n  transformImageUri: PropTypes.func,\n  components: PropTypes.object\n}\n","/**\n * @typedef {import('micromark-util-types').Code} Code\n * @typedef {import('micromark-util-types').ConstructRecord} ConstructRecord\n * @typedef {import('micromark-util-types').Event} Event\n * @typedef {import('micromark-util-types').Extension} Extension\n * @typedef {import('micromark-util-types').Previous} Previous\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n */\n\nimport {\n  asciiAlpha,\n  asciiAlphanumeric,\n  asciiControl,\n  markdownLineEndingOrSpace,\n  unicodePunctuation,\n  unicodeWhitespace\n} from 'micromark-util-character'\nconst wwwPrefix = {\n  tokenize: tokenizeWwwPrefix,\n  partial: true\n}\nconst domain = {\n  tokenize: tokenizeDomain,\n  partial: true\n}\nconst path = {\n  tokenize: tokenizePath,\n  partial: true\n}\nconst trail = {\n  tokenize: tokenizeTrail,\n  partial: true\n}\nconst emailDomainDotTrail = {\n  tokenize: tokenizeEmailDomainDotTrail,\n  partial: true\n}\nconst wwwAutolink = {\n  tokenize: tokenizeWwwAutolink,\n  previous: previousWww\n}\nconst protocolAutolink = {\n  tokenize: tokenizeProtocolAutolink,\n  previous: previousProtocol\n}\nconst emailAutolink = {\n  tokenize: tokenizeEmailAutolink,\n  previous: previousEmail\n}\n\n/** @type {ConstructRecord} */\nconst text = {}\n\n// To do: next major: expose functions that yields extension.\n\n/**\n * Extension for `micromark` that can be passed in `extensions` to enable GFM\n * autolink literal syntax.\n *\n * @type {Extension}\n */\nexport const gfmAutolinkLiteral = {\n  text\n}\n\n/** @type {Code} */\nlet code = 48\n\n// Add alphanumerics.\nwhile (code < 123) {\n  text[code] = emailAutolink\n  code++\n  if (code === 58) code = 65\n  else if (code === 91) code = 97\n}\ntext[43] = emailAutolink\ntext[45] = emailAutolink\ntext[46] = emailAutolink\ntext[95] = emailAutolink\ntext[72] = [emailAutolink, protocolAutolink]\ntext[104] = [emailAutolink, protocolAutolink]\ntext[87] = [emailAutolink, wwwAutolink]\ntext[119] = [emailAutolink, wwwAutolink]\n\n// To do: perform email autolink literals on events, afterwards.\n// That’s where `markdown-rs` and `cmark-gfm` perform it.\n// It should look for `@`, then for atext backwards, and then for a label\n// forwards.\n// To do: `mailto:`, `xmpp:` protocol as prefix.\n\n/**\n * Email autolink literal.\n *\n * ```markdown\n * > | a contact@example.org b\n *       ^^^^^^^^^^^^^^^^^^^\n * ```\n *\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeEmailAutolink(effects, ok, nok) {\n  const self = this\n  /** @type {boolean | undefined} */\n  let dot\n  /** @type {boolean} */\n  let data\n  return start\n\n  /**\n   * Start of email autolink literal.\n   *\n   * ```markdown\n   * > | a contact@example.org b\n   *       ^\n   * ```\n   *\n   * @type {State}\n   */\n  function start(code) {\n    if (\n      !gfmAtext(code) ||\n      !previousEmail.call(self, self.previous) ||\n      previousUnbalanced(self.events)\n    ) {\n      return nok(code)\n    }\n    effects.enter('literalAutolink')\n    effects.enter('literalAutolinkEmail')\n    return atext(code)\n  }\n\n  /**\n   * In email atext.\n   *\n   * ```markdown\n   * > | a contact@example.org b\n   *       ^\n   * ```\n   *\n   * @type {State}\n   */\n  function atext(code) {\n    if (gfmAtext(code)) {\n      effects.consume(code)\n      return atext\n    }\n    if (code === 64) {\n      effects.consume(code)\n      return emailDomain\n    }\n    return nok(code)\n  }\n\n  /**\n   * In email domain.\n   *\n   * The reference code is a bit overly complex as it handles the `@`, of which\n   * there may be just one.\n   * Source: <https://github.com/github/cmark-gfm/blob/ef1cfcb/extensions/autolink.c#L318>\n   *\n   * ```markdown\n   * > | a contact@example.org b\n   *               ^\n   * ```\n   *\n   * @type {State}\n   */\n  function emailDomain(code) {\n    // Dot followed by alphanumerical (not `-` or `_`).\n    if (code === 46) {\n      return effects.check(\n        emailDomainDotTrail,\n        emailDomainAfter,\n        emailDomainDot\n      )(code)\n    }\n\n    // Alphanumerical, `-`, and `_`.\n    if (code === 45 || code === 95 || asciiAlphanumeric(code)) {\n      data = true\n      effects.consume(code)\n      return emailDomain\n    }\n\n    // To do: `/` if xmpp.\n\n    // Note: normally we’d truncate trailing punctuation from the link.\n    // However, email autolink literals cannot contain any of those markers,\n    // except for `.`, but that can only occur if it isn’t trailing.\n    // So we can ignore truncating!\n    return emailDomainAfter(code)\n  }\n\n  /**\n   * In email domain, on dot that is not a trail.\n   *\n   * ```markdown\n   * > | a contact@example.org b\n   *                      ^\n   * ```\n   *\n   * @type {State}\n   */\n  function emailDomainDot(code) {\n    effects.consume(code)\n    dot = true\n    return emailDomain\n  }\n\n  /**\n   * After email domain.\n   *\n   * ```markdown\n   * > | a contact@example.org b\n   *                          ^\n   * ```\n   *\n   * @type {State}\n   */\n  function emailDomainAfter(code) {\n    // Domain must not be empty, must include a dot, and must end in alphabetical.\n    // Source: <https://github.com/github/cmark-gfm/blob/ef1cfcb/extensions/autolink.c#L332>.\n    if (data && dot && asciiAlpha(self.previous)) {\n      effects.exit('literalAutolinkEmail')\n      effects.exit('literalAutolink')\n      return ok(code)\n    }\n    return nok(code)\n  }\n}\n\n/**\n * `www` autolink literal.\n *\n * ```markdown\n * > | a www.example.org b\n *       ^^^^^^^^^^^^^^^\n * ```\n *\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeWwwAutolink(effects, ok, nok) {\n  const self = this\n  return wwwStart\n\n  /**\n   * Start of www autolink literal.\n   *\n   * ```markdown\n   * > | www.example.com/a?b#c\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function wwwStart(code) {\n    if (\n      (code !== 87 && code !== 119) ||\n      !previousWww.call(self, self.previous) ||\n      previousUnbalanced(self.events)\n    ) {\n      return nok(code)\n    }\n    effects.enter('literalAutolink')\n    effects.enter('literalAutolinkWww')\n    // Note: we *check*, so we can discard the `www.` we parsed.\n    // If it worked, we consider it as a part of the domain.\n    return effects.check(\n      wwwPrefix,\n      effects.attempt(domain, effects.attempt(path, wwwAfter), nok),\n      nok\n    )(code)\n  }\n\n  /**\n   * After a www autolink literal.\n   *\n   * ```markdown\n   * > | www.example.com/a?b#c\n   *                          ^\n   * ```\n   *\n   * @type {State}\n   */\n  function wwwAfter(code) {\n    effects.exit('literalAutolinkWww')\n    effects.exit('literalAutolink')\n    return ok(code)\n  }\n}\n\n/**\n * Protocol autolink literal.\n *\n * ```markdown\n * > | a https://example.org b\n *       ^^^^^^^^^^^^^^^^^^^\n * ```\n *\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeProtocolAutolink(effects, ok, nok) {\n  const self = this\n  let buffer = ''\n  let seen = false\n  return protocolStart\n\n  /**\n   * Start of protocol autolink literal.\n   *\n   * ```markdown\n   * > | https://example.com/a?b#c\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function protocolStart(code) {\n    if (\n      (code === 72 || code === 104) &&\n      previousProtocol.call(self, self.previous) &&\n      !previousUnbalanced(self.events)\n    ) {\n      effects.enter('literalAutolink')\n      effects.enter('literalAutolinkHttp')\n      buffer += String.fromCodePoint(code)\n      effects.consume(code)\n      return protocolPrefixInside\n    }\n    return nok(code)\n  }\n\n  /**\n   * In protocol.\n   *\n   * ```markdown\n   * > | https://example.com/a?b#c\n   *     ^^^^^\n   * ```\n   *\n   * @type {State}\n   */\n  function protocolPrefixInside(code) {\n    // `5` is size of `https`\n    if (asciiAlpha(code) && buffer.length < 5) {\n      // @ts-expect-error: definitely number.\n      buffer += String.fromCodePoint(code)\n      effects.consume(code)\n      return protocolPrefixInside\n    }\n    if (code === 58) {\n      const protocol = buffer.toLowerCase()\n      if (protocol === 'http' || protocol === 'https') {\n        effects.consume(code)\n        return protocolSlashesInside\n      }\n    }\n    return nok(code)\n  }\n\n  /**\n   * In slashes.\n   *\n   * ```markdown\n   * > | https://example.com/a?b#c\n   *           ^^\n   * ```\n   *\n   * @type {State}\n   */\n  function protocolSlashesInside(code) {\n    if (code === 47) {\n      effects.consume(code)\n      if (seen) {\n        return afterProtocol\n      }\n      seen = true\n      return protocolSlashesInside\n    }\n    return nok(code)\n  }\n\n  /**\n   * After protocol, before domain.\n   *\n   * ```markdown\n   * > | https://example.com/a?b#c\n   *             ^\n   * ```\n   *\n   * @type {State}\n   */\n  function afterProtocol(code) {\n    // To do: this is different from `markdown-rs`:\n    // https://github.com/wooorm/markdown-rs/blob/b3a921c761309ae00a51fe348d8a43adbc54b518/src/construct/gfm_autolink_literal.rs#L172-L182\n    return code === null ||\n      asciiControl(code) ||\n      markdownLineEndingOrSpace(code) ||\n      unicodeWhitespace(code) ||\n      unicodePunctuation(code)\n      ? nok(code)\n      : effects.attempt(domain, effects.attempt(path, protocolAfter), nok)(code)\n  }\n\n  /**\n   * After a protocol autolink literal.\n   *\n   * ```markdown\n   * > | https://example.com/a?b#c\n   *                              ^\n   * ```\n   *\n   * @type {State}\n   */\n  function protocolAfter(code) {\n    effects.exit('literalAutolinkHttp')\n    effects.exit('literalAutolink')\n    return ok(code)\n  }\n}\n\n/**\n * `www` prefix.\n *\n * ```markdown\n * > | a www.example.org b\n *       ^^^^\n * ```\n *\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeWwwPrefix(effects, ok, nok) {\n  let size = 0\n  return wwwPrefixInside\n\n  /**\n   * In www prefix.\n   *\n   * ```markdown\n   * > | www.example.com\n   *     ^^^^\n   * ```\n   *\n   * @type {State}\n   */\n  function wwwPrefixInside(code) {\n    if ((code === 87 || code === 119) && size < 3) {\n      size++\n      effects.consume(code)\n      return wwwPrefixInside\n    }\n    if (code === 46 && size === 3) {\n      effects.consume(code)\n      return wwwPrefixAfter\n    }\n    return nok(code)\n  }\n\n  /**\n   * After www prefix.\n   *\n   * ```markdown\n   * > | www.example.com\n   *         ^\n   * ```\n   *\n   * @type {State}\n   */\n  function wwwPrefixAfter(code) {\n    // If there is *anything*, we can link.\n    return code === null ? nok(code) : ok(code)\n  }\n}\n\n/**\n * Domain.\n *\n * ```markdown\n * > | a https://example.org b\n *               ^^^^^^^^^^^\n * ```\n *\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeDomain(effects, ok, nok) {\n  /** @type {boolean | undefined} */\n  let underscoreInLastSegment\n  /** @type {boolean | undefined} */\n  let underscoreInLastLastSegment\n  /** @type {boolean | undefined} */\n  let seen\n  return domainInside\n\n  /**\n   * In domain.\n   *\n   * ```markdown\n   * > | https://example.com/a\n   *             ^^^^^^^^^^^\n   * ```\n   *\n   * @type {State}\n   */\n  function domainInside(code) {\n    // Check whether this marker, which is a trailing punctuation\n    // marker, optionally followed by more trailing markers, and then\n    // followed by an end.\n    if (code === 46 || code === 95) {\n      return effects.check(trail, domainAfter, domainAtPunctuation)(code)\n    }\n\n    // GH documents that only alphanumerics (other than `-`, `.`, and `_`) can\n    // occur, which sounds like ASCII only, but they also support `www.點看.com`,\n    // so that’s Unicode.\n    // Instead of some new production for Unicode alphanumerics, markdown\n    // already has that for Unicode punctuation and whitespace, so use those.\n    // Source: <https://github.com/github/cmark-gfm/blob/ef1cfcb/extensions/autolink.c#L12>.\n    if (\n      code === null ||\n      markdownLineEndingOrSpace(code) ||\n      unicodeWhitespace(code) ||\n      (code !== 45 && unicodePunctuation(code))\n    ) {\n      return domainAfter(code)\n    }\n    seen = true\n    effects.consume(code)\n    return domainInside\n  }\n\n  /**\n   * In domain, at potential trailing punctuation, that was not trailing.\n   *\n   * ```markdown\n   * > | https://example.com\n   *                    ^\n   * ```\n   *\n   * @type {State}\n   */\n  function domainAtPunctuation(code) {\n    // There is an underscore in the last segment of the domain\n    if (code === 95) {\n      underscoreInLastSegment = true\n    }\n    // Otherwise, it’s a `.`: save the last segment underscore in the\n    // penultimate segment slot.\n    else {\n      underscoreInLastLastSegment = underscoreInLastSegment\n      underscoreInLastSegment = undefined\n    }\n    effects.consume(code)\n    return domainInside\n  }\n\n  /**\n   * After domain.\n   *\n   * ```markdown\n   * > | https://example.com/a\n   *                        ^\n   * ```\n   *\n   * @type {State} */\n  function domainAfter(code) {\n    // Note: that’s GH says a dot is needed, but it’s not true:\n    // <https://github.com/github/cmark-gfm/issues/279>\n    if (underscoreInLastLastSegment || underscoreInLastSegment || !seen) {\n      return nok(code)\n    }\n    return ok(code)\n  }\n}\n\n/**\n * Path.\n *\n * ```markdown\n * > | a https://example.org/stuff b\n *                          ^^^^^^\n * ```\n *\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizePath(effects, ok) {\n  let sizeOpen = 0\n  let sizeClose = 0\n  return pathInside\n\n  /**\n   * In path.\n   *\n   * ```markdown\n   * > | https://example.com/a\n   *                        ^^\n   * ```\n   *\n   * @type {State}\n   */\n  function pathInside(code) {\n    if (code === 40) {\n      sizeOpen++\n      effects.consume(code)\n      return pathInside\n    }\n\n    // To do: `markdown-rs` also needs this.\n    // If this is a paren, and there are less closings than openings,\n    // we don’t check for a trail.\n    if (code === 41 && sizeClose < sizeOpen) {\n      return pathAtPunctuation(code)\n    }\n\n    // Check whether this trailing punctuation marker is optionally\n    // followed by more trailing markers, and then followed\n    // by an end.\n    if (\n      code === 33 ||\n      code === 34 ||\n      code === 38 ||\n      code === 39 ||\n      code === 41 ||\n      code === 42 ||\n      code === 44 ||\n      code === 46 ||\n      code === 58 ||\n      code === 59 ||\n      code === 60 ||\n      code === 63 ||\n      code === 93 ||\n      code === 95 ||\n      code === 126\n    ) {\n      return effects.check(trail, ok, pathAtPunctuation)(code)\n    }\n    if (\n      code === null ||\n      markdownLineEndingOrSpace(code) ||\n      unicodeWhitespace(code)\n    ) {\n      return ok(code)\n    }\n    effects.consume(code)\n    return pathInside\n  }\n\n  /**\n   * In path, at potential trailing punctuation, that was not trailing.\n   *\n   * ```markdown\n   * > | https://example.com/a\"b\n   *                          ^\n   * ```\n   *\n   * @type {State}\n   */\n  function pathAtPunctuation(code) {\n    // Count closing parens.\n    if (code === 41) {\n      sizeClose++\n    }\n    effects.consume(code)\n    return pathInside\n  }\n}\n\n/**\n * Trail.\n *\n * This calls `ok` if this *is* the trail, followed by an end, which means\n * the entire trail is not part of the link.\n * It calls `nok` if this *is* part of the link.\n *\n * ```markdown\n * > | https://example.com\").\n *                        ^^^\n * ```\n *\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeTrail(effects, ok, nok) {\n  return trail\n\n  /**\n   * In trail of domain or path.\n   *\n   * ```markdown\n   * > | https://example.com\").\n   *                        ^\n   * ```\n   *\n   * @type {State}\n   */\n  function trail(code) {\n    // Regular trailing punctuation.\n    if (\n      code === 33 ||\n      code === 34 ||\n      code === 39 ||\n      code === 41 ||\n      code === 42 ||\n      code === 44 ||\n      code === 46 ||\n      code === 58 ||\n      code === 59 ||\n      code === 63 ||\n      code === 95 ||\n      code === 126\n    ) {\n      effects.consume(code)\n      return trail\n    }\n\n    // `&` followed by one or more alphabeticals and then a `;`, is\n    // as a whole considered as trailing punctuation.\n    // In all other cases, it is considered as continuation of the URL.\n    if (code === 38) {\n      effects.consume(code)\n      return trailCharRefStart\n    }\n\n    // Needed because we allow literals after `[`, as we fix:\n    // <https://github.com/github/cmark-gfm/issues/278>.\n    // Check that it is not followed by `(` or `[`.\n    if (code === 93) {\n      effects.consume(code)\n      return trailBracketAfter\n    }\n    if (\n      // `<` is an end.\n      code === 60 ||\n      // So is whitespace.\n      code === null ||\n      markdownLineEndingOrSpace(code) ||\n      unicodeWhitespace(code)\n    ) {\n      return ok(code)\n    }\n    return nok(code)\n  }\n\n  /**\n   * In trail, after `]`.\n   *\n   * > 👉 **Note**: this deviates from `cmark-gfm` to fix a bug.\n   * > See end of <https://github.com/github/cmark-gfm/issues/278> for more.\n   *\n   * ```markdown\n   * > | https://example.com](\n   *                         ^\n   * ```\n   *\n   * @type {State}\n   */\n  function trailBracketAfter(code) {\n    // Whitespace or something that could start a resource or reference is the end.\n    // Switch back to trail otherwise.\n    if (\n      code === null ||\n      code === 40 ||\n      code === 91 ||\n      markdownLineEndingOrSpace(code) ||\n      unicodeWhitespace(code)\n    ) {\n      return ok(code)\n    }\n    return trail(code)\n  }\n\n  /**\n   * In character-reference like trail, after `&`.\n   *\n   * ```markdown\n   * > | https://example.com&amp;).\n   *                         ^\n   * ```\n   *\n   * @type {State}\n   */\n  function trailCharRefStart(code) {\n    // When non-alpha, it’s not a trail.\n    return asciiAlpha(code) ? trailCharRefInside(code) : nok(code)\n  }\n\n  /**\n   * In character-reference like trail.\n   *\n   * ```markdown\n   * > | https://example.com&amp;).\n   *                         ^\n   * ```\n   *\n   * @type {State}\n   */\n  function trailCharRefInside(code) {\n    // Switch back to trail if this is well-formed.\n    if (code === 59) {\n      effects.consume(code)\n      return trail\n    }\n    if (asciiAlpha(code)) {\n      effects.consume(code)\n      return trailCharRefInside\n    }\n\n    // It’s not a trail.\n    return nok(code)\n  }\n}\n\n/**\n * Dot in email domain trail.\n *\n * This calls `ok` if this *is* the trail, followed by an end, which means\n * the trail is not part of the link.\n * It calls `nok` if this *is* part of the link.\n *\n * ```markdown\n * > | contact@example.org.\n *                        ^\n * ```\n *\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeEmailDomainDotTrail(effects, ok, nok) {\n  return start\n\n  /**\n   * Dot.\n   *\n   * ```markdown\n   * > | contact@example.org.\n   *                    ^   ^\n   * ```\n   *\n   * @type {State}\n   */\n  function start(code) {\n    // Must be dot.\n    effects.consume(code)\n    return after\n  }\n\n  /**\n   * After dot.\n   *\n   * ```markdown\n   * > | contact@example.org.\n   *                     ^   ^\n   * ```\n   *\n   * @type {State}\n   */\n  function after(code) {\n    // Not a trail if alphanumeric.\n    return asciiAlphanumeric(code) ? nok(code) : ok(code)\n  }\n}\n\n/**\n * See:\n * <https://github.com/github/cmark-gfm/blob/ef1cfcb/extensions/autolink.c#L156>.\n *\n * @type {Previous}\n */\nfunction previousWww(code) {\n  return (\n    code === null ||\n    code === 40 ||\n    code === 42 ||\n    code === 95 ||\n    code === 91 ||\n    code === 93 ||\n    code === 126 ||\n    markdownLineEndingOrSpace(code)\n  )\n}\n\n/**\n * See:\n * <https://github.com/github/cmark-gfm/blob/ef1cfcb/extensions/autolink.c#L214>.\n *\n * @type {Previous}\n */\nfunction previousProtocol(code) {\n  return !asciiAlpha(code)\n}\n\n/**\n * @this {TokenizeContext}\n * @type {Previous}\n */\nfunction previousEmail(code) {\n  // Do not allow a slash “inside” atext.\n  // The reference code is a bit weird, but that’s what it results in.\n  // Source: <https://github.com/github/cmark-gfm/blob/ef1cfcb/extensions/autolink.c#L307>.\n  // Other than slash, every preceding character is allowed.\n  return !(code === 47 || gfmAtext(code))\n}\n\n/**\n * @param {Code} code\n * @returns {boolean}\n */\nfunction gfmAtext(code) {\n  return (\n    code === 43 ||\n    code === 45 ||\n    code === 46 ||\n    code === 95 ||\n    asciiAlphanumeric(code)\n  )\n}\n\n/**\n * @param {Array<Event>} events\n * @returns {boolean}\n */\nfunction previousUnbalanced(events) {\n  let index = events.length\n  let result = false\n  while (index--) {\n    const token = events[index][1]\n    if (\n      (token.type === 'labelLink' || token.type === 'labelImage') &&\n      !token._balanced\n    ) {\n      result = true\n      break\n    }\n\n    // If we’ve seen this token, and it was marked as not having any unbalanced\n    // bracket before it, we can exit.\n    if (token._gfmAutolinkLiteralWalkedInto) {\n      result = false\n      break\n    }\n  }\n  if (events.length > 0 && !result) {\n    // Mark the last token as “walked into” w/o finding\n    // anything.\n    events[events.length - 1][1]._gfmAutolinkLiteralWalkedInto = true\n  }\n  return result\n}\n","/**\n * @typedef {import('micromark-util-types').Event} Event\n * @typedef {import('micromark-util-types').Exiter} Exiter\n * @typedef {import('micromark-util-types').Extension} Extension\n * @typedef {import('micromark-util-types').Resolver} Resolver\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').Token} Token\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n */\n\nimport {blankLine} from 'micromark-core-commonmark'\nimport {factorySpace} from 'micromark-factory-space'\nimport {markdownLineEndingOrSpace} from 'micromark-util-character'\nimport {normalizeIdentifier} from 'micromark-util-normalize-identifier'\nconst indent = {\n  tokenize: tokenizeIndent,\n  partial: true\n}\n\n// To do: micromark should support a `_hiddenGfmFootnoteSupport`, which only\n// affects label start (image).\n// That will let us drop `tokenizePotentialGfmFootnote*`.\n// It currently has a `_hiddenFootnoteSupport`, which affects that and more.\n// That can be removed when `micromark-extension-footnote` is archived.\n\n/**\n * Create an extension for `micromark` to enable GFM footnote syntax.\n *\n * @returns {Extension}\n *   Extension for `micromark` that can be passed in `extensions` to\n *   enable GFM footnote syntax.\n */\nexport function gfmFootnote() {\n  /** @type {Extension} */\n  return {\n    document: {\n      [91]: {\n        tokenize: tokenizeDefinitionStart,\n        continuation: {\n          tokenize: tokenizeDefinitionContinuation\n        },\n        exit: gfmFootnoteDefinitionEnd\n      }\n    },\n    text: {\n      [91]: {\n        tokenize: tokenizeGfmFootnoteCall\n      },\n      [93]: {\n        add: 'after',\n        tokenize: tokenizePotentialGfmFootnoteCall,\n        resolveTo: resolveToPotentialGfmFootnoteCall\n      }\n    }\n  }\n}\n\n// To do: remove after micromark update.\n/**\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizePotentialGfmFootnoteCall(effects, ok, nok) {\n  const self = this\n  let index = self.events.length\n  /** @type {Array<string>} */\n  // @ts-expect-error It’s fine!\n  const defined = self.parser.gfmFootnotes || (self.parser.gfmFootnotes = [])\n  /** @type {Token} */\n  let labelStart\n\n  // Find an opening.\n  while (index--) {\n    const token = self.events[index][1]\n    if (token.type === 'labelImage') {\n      labelStart = token\n      break\n    }\n\n    // Exit if we’ve walked far enough.\n    if (\n      token.type === 'gfmFootnoteCall' ||\n      token.type === 'labelLink' ||\n      token.type === 'label' ||\n      token.type === 'image' ||\n      token.type === 'link'\n    ) {\n      break\n    }\n  }\n  return start\n\n  /**\n   * @type {State}\n   */\n  function start(code) {\n    if (!labelStart || !labelStart._balanced) {\n      return nok(code)\n    }\n    const id = normalizeIdentifier(\n      self.sliceSerialize({\n        start: labelStart.end,\n        end: self.now()\n      })\n    )\n    if (id.codePointAt(0) !== 94 || !defined.includes(id.slice(1))) {\n      return nok(code)\n    }\n    effects.enter('gfmFootnoteCallLabelMarker')\n    effects.consume(code)\n    effects.exit('gfmFootnoteCallLabelMarker')\n    return ok(code)\n  }\n}\n\n// To do: remove after micromark update.\n/** @type {Resolver} */\nfunction resolveToPotentialGfmFootnoteCall(events, context) {\n  let index = events.length\n  /** @type {Token | undefined} */\n  let labelStart\n\n  // Find an opening.\n  while (index--) {\n    if (\n      events[index][1].type === 'labelImage' &&\n      events[index][0] === 'enter'\n    ) {\n      labelStart = events[index][1]\n      break\n    }\n  }\n  // Change the `labelImageMarker` to a `data`.\n  events[index + 1][1].type = 'data'\n  events[index + 3][1].type = 'gfmFootnoteCallLabelMarker'\n\n  // The whole (without `!`):\n  /** @type {Token} */\n  const call = {\n    type: 'gfmFootnoteCall',\n    start: Object.assign({}, events[index + 3][1].start),\n    end: Object.assign({}, events[events.length - 1][1].end)\n  }\n  // The `^` marker\n  /** @type {Token} */\n  const marker = {\n    type: 'gfmFootnoteCallMarker',\n    start: Object.assign({}, events[index + 3][1].end),\n    end: Object.assign({}, events[index + 3][1].end)\n  }\n  // Increment the end 1 character.\n  marker.end.column++\n  marker.end.offset++\n  marker.end._bufferIndex++\n  /** @type {Token} */\n  const string = {\n    type: 'gfmFootnoteCallString',\n    start: Object.assign({}, marker.end),\n    end: Object.assign({}, events[events.length - 1][1].start)\n  }\n  /** @type {Token} */\n  const chunk = {\n    type: 'chunkString',\n    contentType: 'string',\n    start: Object.assign({}, string.start),\n    end: Object.assign({}, string.end)\n  }\n\n  /** @type {Array<Event>} */\n  const replacement = [\n    // Take the `labelImageMarker` (now `data`, the `!`)\n    events[index + 1],\n    events[index + 2],\n    ['enter', call, context],\n    // The `[`\n    events[index + 3],\n    events[index + 4],\n    // The `^`.\n    ['enter', marker, context],\n    ['exit', marker, context],\n    // Everything in between.\n    ['enter', string, context],\n    ['enter', chunk, context],\n    ['exit', chunk, context],\n    ['exit', string, context],\n    // The ending (`]`, properly parsed and labelled).\n    events[events.length - 2],\n    events[events.length - 1],\n    ['exit', call, context]\n  ]\n  events.splice(index, events.length - index + 1, ...replacement)\n  return events\n}\n\n/**\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeGfmFootnoteCall(effects, ok, nok) {\n  const self = this\n  /** @type {Array<string>} */\n  // @ts-expect-error It’s fine!\n  const defined = self.parser.gfmFootnotes || (self.parser.gfmFootnotes = [])\n  let size = 0\n  /** @type {boolean} */\n  let data\n\n  // Note: the implementation of `markdown-rs` is different, because it houses\n  // core *and* extensions in one project.\n  // Therefore, it can include footnote logic inside `label-end`.\n  // We can’t do that, but luckily, we can parse footnotes in a simpler way than\n  // needed for labels.\n  return start\n\n  /**\n   * Start of footnote label.\n   *\n   * ```markdown\n   * > | a [^b] c\n   *       ^\n   * ```\n   *\n   * @type {State}\n   */\n  function start(code) {\n    effects.enter('gfmFootnoteCall')\n    effects.enter('gfmFootnoteCallLabelMarker')\n    effects.consume(code)\n    effects.exit('gfmFootnoteCallLabelMarker')\n    return callStart\n  }\n\n  /**\n   * After `[`, at `^`.\n   *\n   * ```markdown\n   * > | a [^b] c\n   *        ^\n   * ```\n   *\n   * @type {State}\n   */\n  function callStart(code) {\n    if (code !== 94) return nok(code)\n    effects.enter('gfmFootnoteCallMarker')\n    effects.consume(code)\n    effects.exit('gfmFootnoteCallMarker')\n    effects.enter('gfmFootnoteCallString')\n    effects.enter('chunkString').contentType = 'string'\n    return callData\n  }\n\n  /**\n   * In label.\n   *\n   * ```markdown\n   * > | a [^b] c\n   *         ^\n   * ```\n   *\n   * @type {State}\n   */\n  function callData(code) {\n    if (\n      // Too long.\n      size > 999 ||\n      // Closing brace with nothing.\n      (code === 93 && !data) ||\n      // Space or tab is not supported by GFM for some reason.\n      // `\\n` and `[` not being supported makes sense.\n      code === null ||\n      code === 91 ||\n      markdownLineEndingOrSpace(code)\n    ) {\n      return nok(code)\n    }\n    if (code === 93) {\n      effects.exit('chunkString')\n      const token = effects.exit('gfmFootnoteCallString')\n      if (!defined.includes(normalizeIdentifier(self.sliceSerialize(token)))) {\n        return nok(code)\n      }\n      effects.enter('gfmFootnoteCallLabelMarker')\n      effects.consume(code)\n      effects.exit('gfmFootnoteCallLabelMarker')\n      effects.exit('gfmFootnoteCall')\n      return ok\n    }\n    if (!markdownLineEndingOrSpace(code)) {\n      data = true\n    }\n    size++\n    effects.consume(code)\n    return code === 92 ? callEscape : callData\n  }\n\n  /**\n   * On character after escape.\n   *\n   * ```markdown\n   * > | a [^b\\c] d\n   *           ^\n   * ```\n   *\n   * @type {State}\n   */\n  function callEscape(code) {\n    if (code === 91 || code === 92 || code === 93) {\n      effects.consume(code)\n      size++\n      return callData\n    }\n    return callData(code)\n  }\n}\n\n/**\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeDefinitionStart(effects, ok, nok) {\n  const self = this\n  /** @type {Array<string>} */\n  // @ts-expect-error It’s fine!\n  const defined = self.parser.gfmFootnotes || (self.parser.gfmFootnotes = [])\n  /** @type {string} */\n  let identifier\n  let size = 0\n  /** @type {boolean | undefined} */\n  let data\n  return start\n\n  /**\n   * Start of GFM footnote definition.\n   *\n   * ```markdown\n   * > | [^a]: b\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function start(code) {\n    effects.enter('gfmFootnoteDefinition')._container = true\n    effects.enter('gfmFootnoteDefinitionLabel')\n    effects.enter('gfmFootnoteDefinitionLabelMarker')\n    effects.consume(code)\n    effects.exit('gfmFootnoteDefinitionLabelMarker')\n    return labelAtMarker\n  }\n\n  /**\n   * In label, at caret.\n   *\n   * ```markdown\n   * > | [^a]: b\n   *      ^\n   * ```\n   *\n   * @type {State}\n   */\n  function labelAtMarker(code) {\n    if (code === 94) {\n      effects.enter('gfmFootnoteDefinitionMarker')\n      effects.consume(code)\n      effects.exit('gfmFootnoteDefinitionMarker')\n      effects.enter('gfmFootnoteDefinitionLabelString')\n      effects.enter('chunkString').contentType = 'string'\n      return labelInside\n    }\n    return nok(code)\n  }\n\n  /**\n   * In label.\n   *\n   * > 👉 **Note**: `cmark-gfm` prevents whitespace from occurring in footnote\n   * > definition labels.\n   *\n   * ```markdown\n   * > | [^a]: b\n   *       ^\n   * ```\n   *\n   * @type {State}\n   */\n  function labelInside(code) {\n    if (\n      // Too long.\n      size > 999 ||\n      // Closing brace with nothing.\n      (code === 93 && !data) ||\n      // Space or tab is not supported by GFM for some reason.\n      // `\\n` and `[` not being supported makes sense.\n      code === null ||\n      code === 91 ||\n      markdownLineEndingOrSpace(code)\n    ) {\n      return nok(code)\n    }\n    if (code === 93) {\n      effects.exit('chunkString')\n      const token = effects.exit('gfmFootnoteDefinitionLabelString')\n      identifier = normalizeIdentifier(self.sliceSerialize(token))\n      effects.enter('gfmFootnoteDefinitionLabelMarker')\n      effects.consume(code)\n      effects.exit('gfmFootnoteDefinitionLabelMarker')\n      effects.exit('gfmFootnoteDefinitionLabel')\n      return labelAfter\n    }\n    if (!markdownLineEndingOrSpace(code)) {\n      data = true\n    }\n    size++\n    effects.consume(code)\n    return code === 92 ? labelEscape : labelInside\n  }\n\n  /**\n   * After `\\`, at a special character.\n   *\n   * > 👉 **Note**: `cmark-gfm` currently does not support escaped brackets:\n   * > <https://github.com/github/cmark-gfm/issues/240>\n   *\n   * ```markdown\n   * > | [^a\\*b]: c\n   *         ^\n   * ```\n   *\n   * @type {State}\n   */\n  function labelEscape(code) {\n    if (code === 91 || code === 92 || code === 93) {\n      effects.consume(code)\n      size++\n      return labelInside\n    }\n    return labelInside(code)\n  }\n\n  /**\n   * After definition label.\n   *\n   * ```markdown\n   * > | [^a]: b\n   *         ^\n   * ```\n   *\n   * @type {State}\n   */\n  function labelAfter(code) {\n    if (code === 58) {\n      effects.enter('definitionMarker')\n      effects.consume(code)\n      effects.exit('definitionMarker')\n      if (!defined.includes(identifier)) {\n        defined.push(identifier)\n      }\n\n      // Any whitespace after the marker is eaten, forming indented code\n      // is not possible.\n      // No space is also fine, just like a block quote marker.\n      return factorySpace(\n        effects,\n        whitespaceAfter,\n        'gfmFootnoteDefinitionWhitespace'\n      )\n    }\n    return nok(code)\n  }\n\n  /**\n   * After definition prefix.\n   *\n   * ```markdown\n   * > | [^a]: b\n   *           ^\n   * ```\n   *\n   * @type {State}\n   */\n  function whitespaceAfter(code) {\n    // `markdown-rs` has a wrapping token for the prefix that is closed here.\n    return ok(code)\n  }\n}\n\n/**\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeDefinitionContinuation(effects, ok, nok) {\n  /// Start of footnote definition continuation.\n  ///\n  /// ```markdown\n  ///   | [^a]: b\n  /// > |     c\n  ///     ^\n  /// ```\n  //\n  // Either a blank line, which is okay, or an indented thing.\n  return effects.check(blankLine, ok, effects.attempt(indent, ok, nok))\n}\n\n/** @type {Exiter} */\nfunction gfmFootnoteDefinitionEnd(effects) {\n  effects.exit('gfmFootnoteDefinition')\n}\n\n/**\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeIndent(effects, ok, nok) {\n  const self = this\n  return factorySpace(\n    effects,\n    afterPrefix,\n    'gfmFootnoteDefinitionIndent',\n    4 + 1\n  )\n\n  /**\n   * @type {State}\n   */\n  function afterPrefix(code) {\n    const tail = self.events[self.events.length - 1]\n    return tail &&\n      tail[1].type === 'gfmFootnoteDefinitionIndent' &&\n      tail[2].sliceSerialize(tail[1], true).length === 4\n      ? ok(code)\n      : nok(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Event} Event\n * @typedef {import('micromark-util-types').Extension} Extension\n * @typedef {import('micromark-util-types').Resolver} Resolver\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').Token} Token\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n *\n * @typedef Options\n *   Configuration (optional).\n * @property {boolean} [singleTilde=true]\n *   Whether to support strikethrough with a single tilde.\n *\n *   Single tildes work on github.com, but are technically prohibited by the\n *   GFM spec.\n */\n\nimport {splice} from 'micromark-util-chunked'\nimport {classifyCharacter} from 'micromark-util-classify-character'\nimport {resolveAll} from 'micromark-util-resolve-all'\n/**\n * Create an extension for `micromark` to enable GFM strikethrough syntax.\n *\n * @param {Options | null | undefined} [options]\n *   Configuration.\n * @returns {Extension}\n *   Extension for `micromark` that can be passed in `extensions`, to\n *   enable GFM strikethrough syntax.\n */\nexport function gfmStrikethrough(options) {\n  const options_ = options || {}\n  let single = options_.singleTilde\n  const tokenizer = {\n    tokenize: tokenizeStrikethrough,\n    resolveAll: resolveAllStrikethrough\n  }\n  if (single === null || single === undefined) {\n    single = true\n  }\n  return {\n    text: {\n      [126]: tokenizer\n    },\n    insideSpan: {\n      null: [tokenizer]\n    },\n    attentionMarkers: {\n      null: [126]\n    }\n  }\n\n  /**\n   * Take events and resolve strikethrough.\n   *\n   * @type {Resolver}\n   */\n  function resolveAllStrikethrough(events, context) {\n    let index = -1\n\n    // Walk through all events.\n    while (++index < events.length) {\n      // Find a token that can close.\n      if (\n        events[index][0] === 'enter' &&\n        events[index][1].type === 'strikethroughSequenceTemporary' &&\n        events[index][1]._close\n      ) {\n        let open = index\n\n        // Now walk back to find an opener.\n        while (open--) {\n          // Find a token that can open the closer.\n          if (\n            events[open][0] === 'exit' &&\n            events[open][1].type === 'strikethroughSequenceTemporary' &&\n            events[open][1]._open &&\n            // If the sizes are the same:\n            events[index][1].end.offset - events[index][1].start.offset ===\n              events[open][1].end.offset - events[open][1].start.offset\n          ) {\n            events[index][1].type = 'strikethroughSequence'\n            events[open][1].type = 'strikethroughSequence'\n\n            /** @type {Token} */\n            const strikethrough = {\n              type: 'strikethrough',\n              start: Object.assign({}, events[open][1].start),\n              end: Object.assign({}, events[index][1].end)\n            }\n\n            /** @type {Token} */\n            const text = {\n              type: 'strikethroughText',\n              start: Object.assign({}, events[open][1].end),\n              end: Object.assign({}, events[index][1].start)\n            }\n\n            // Opening.\n            /** @type {Array<Event>} */\n            const nextEvents = [\n              ['enter', strikethrough, context],\n              ['enter', events[open][1], context],\n              ['exit', events[open][1], context],\n              ['enter', text, context]\n            ]\n            const insideSpan = context.parser.constructs.insideSpan.null\n            if (insideSpan) {\n              // Between.\n              splice(\n                nextEvents,\n                nextEvents.length,\n                0,\n                resolveAll(insideSpan, events.slice(open + 1, index), context)\n              )\n            }\n\n            // Closing.\n            splice(nextEvents, nextEvents.length, 0, [\n              ['exit', text, context],\n              ['enter', events[index][1], context],\n              ['exit', events[index][1], context],\n              ['exit', strikethrough, context]\n            ])\n            splice(events, open - 1, index - open + 3, nextEvents)\n            index = open + nextEvents.length - 2\n            break\n          }\n        }\n      }\n    }\n    index = -1\n    while (++index < events.length) {\n      if (events[index][1].type === 'strikethroughSequenceTemporary') {\n        events[index][1].type = 'data'\n      }\n    }\n    return events\n  }\n\n  /**\n   * @this {TokenizeContext}\n   * @type {Tokenizer}\n   */\n  function tokenizeStrikethrough(effects, ok, nok) {\n    const previous = this.previous\n    const events = this.events\n    let size = 0\n    return start\n\n    /** @type {State} */\n    function start(code) {\n      if (\n        previous === 126 &&\n        events[events.length - 1][1].type !== 'characterEscape'\n      ) {\n        return nok(code)\n      }\n      effects.enter('strikethroughSequenceTemporary')\n      return more(code)\n    }\n\n    /** @type {State} */\n    function more(code) {\n      const before = classifyCharacter(previous)\n      if (code === 126) {\n        // If this is the third marker, exit.\n        if (size > 1) return nok(code)\n        effects.consume(code)\n        size++\n        return more\n      }\n      if (size < 2 && !single) return nok(code)\n      const token = effects.exit('strikethroughSequenceTemporary')\n      const after = classifyCharacter(code)\n      token._open = !after || (after === 2 && Boolean(before))\n      token._close = !before || (before === 2 && Boolean(after))\n      return ok(code)\n    }\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Event} Event\n */\n\n// Port of `edit_map.rs` from `markdown-rs`.\n// This should move to `markdown-js` later.\n\n// Deal with several changes in events, batching them together.\n//\n// Preferably, changes should be kept to a minimum.\n// Sometimes, it’s needed to change the list of events, because parsing can be\n// messy, and it helps to expose a cleaner interface of events to the compiler\n// and other users.\n// It can also help to merge many adjacent similar events.\n// And, in other cases, it’s needed to parse subcontent: pass some events\n// through another tokenizer and inject the result.\n\n/**\n * @typedef {[number, number, Array<Event>]} Change\n * @typedef {[number, number, number]} Jump\n */\n\n/**\n * Tracks a bunch of edits.\n */\nexport class EditMap {\n  /**\n   * Create a new edit map.\n   */\n  constructor() {\n    /**\n     * Record of changes.\n     *\n     * @type {Array<Change>}\n     */\n    this.map = []\n  }\n\n  /**\n   * Create an edit: a remove and/or add at a certain place.\n   *\n   * @param {number} index\n   * @param {number} remove\n   * @param {Array<Event>} add\n   * @returns {void}\n   */\n  add(index, remove, add) {\n    addImpl(this, index, remove, add)\n  }\n\n  // To do: not used here.\n  // /**\n  //  * Create an edit: but insert `add` before existing additions.\n  //  *\n  //  * @param {number} index\n  //  * @param {number} remove\n  //  * @param {Array<Event>} add\n  //  * @returns {void}\n  //  */\n  // addBefore(index, remove, add) {\n  //   addImpl(this, index, remove, add, true)\n  // }\n\n  /**\n   * Done, change the events.\n   *\n   * @param {Array<Event>} events\n   * @returns {void}\n   */\n  consume(events) {\n    this.map.sort((a, b) => a[0] - b[0])\n\n    /* c8 ignore next 3 -- `resolve` is never called without tables, so without edits. */\n    if (this.map.length === 0) {\n      return\n    }\n\n    // To do: if links are added in events, like they are in `markdown-rs`,\n    // this is needed.\n    // // Calculate jumps: where items in the current list move to.\n    // /** @type {Array<Jump>} */\n    // const jumps = []\n    // let index = 0\n    // let addAcc = 0\n    // let removeAcc = 0\n    // while (index < this.map.length) {\n    //   const [at, remove, add] = this.map[index]\n    //   removeAcc += remove\n    //   addAcc += add.length\n    //   jumps.push([at, removeAcc, addAcc])\n    //   index += 1\n    // }\n    //\n    // . shiftLinks(events, jumps)\n\n    let index = this.map.length\n    /** @type {Array<Array<Event>>} */\n    const vecs = []\n    while (index > 0) {\n      index -= 1\n      vecs.push(events.slice(this.map[index][0] + this.map[index][1]))\n      // eslint-disable-next-line unicorn/no-array-push-push\n      vecs.push(this.map[index][2])\n\n      // Truncate rest.\n      events.length = this.map[index][0]\n    }\n    vecs.push([...events])\n    events.length = 0\n    let slice = vecs.pop()\n    while (slice) {\n      events.push(...slice)\n      slice = vecs.pop()\n    }\n\n    // Truncate everything.\n    this.map.length = 0\n  }\n}\n\n/**\n * Create an edit.\n *\n * @param {EditMap} editMap\n * @param {number} at\n * @param {number} remove\n * @param {Array<Event>} add\n * @returns {void}\n */\nfunction addImpl(editMap, at, remove, add) {\n  let index = 0\n\n  /* c8 ignore next 3 -- `resolve` is never called without tables, so without edits. */\n  if (remove === 0 && add.length === 0) {\n    return\n  }\n  while (index < editMap.map.length) {\n    if (editMap.map[index][0] === at) {\n      editMap.map[index][1] += remove\n\n      // To do: before not used.\n      // if (before) {\n      //   add.push(...editMap.map[index][2])\n      //   editMap.map[index][2] = add\n      // } else {\n      editMap.map[index][2].push(...add)\n      // }\n\n      return\n    }\n    index += 1\n  }\n  editMap.map.push([at, remove, add])\n}\n\n// /**\n//  * Shift `previous` and `next` links according to `jumps`.\n//  *\n//  * This fixes links in case there are events removed or added between them.\n//  *\n//  * @param {Array<Event>} events\n//  * @param {Array<Jump>} jumps\n//  */\n// function shiftLinks(events, jumps) {\n//   let jumpIndex = 0\n//   let index = 0\n//   let add = 0\n//   let rm = 0\n\n//   while (index < events.length) {\n//     const rmCurr = rm\n\n//     while (jumpIndex < jumps.length && jumps[jumpIndex][0] <= index) {\n//       add = jumps[jumpIndex][2]\n//       rm = jumps[jumpIndex][1]\n//       jumpIndex += 1\n//     }\n\n//     // Ignore items that will be removed.\n//     if (rm > rmCurr) {\n//       index += rm - rmCurr\n//     } else {\n//       console.log('to do: links?', add, rmCurr)\n//       // ?\n//       // if let Some(link) = &events[index].link {\n//       //     if let Some(next) = link.next {\n//       //         events[next].link.as_mut().unwrap().previous = Some(index + add - rm);\n//       //         while jumpIndex < jumps.len() && jumps[jumpIndex].0 <= next {\n//       //             add = jumps[jumpIndex].2;\n//       //             rm = jumps[jumpIndex].1;\n//       //             jumpIndex += 1;\n//       //         }\n//       //         events[index].link.as_mut().unwrap().next = Some(next + add - rm);\n//       //         index = next;\n//       //         continue;\n//       //     }\n//       // }\n//       index += 1\n//     }\n//   }\n// }\n","/**\n * @typedef {import('micromark-util-types').Event} Event\n */\n\n/**\n * @typedef {'left' | 'center' | 'right' | 'none'} Align\n */\n\n/**\n * Figure out the alignment of a GFM table.\n *\n * @param {Array<Event>} events\n * @param {number} index\n * @returns {Array<Align>}\n */\nexport function gfmTableAlign(events, index) {\n  let inDelimiterRow = false\n  /** @type {Array<Align>} */\n  const align = []\n  while (index < events.length) {\n    const event = events[index]\n    if (inDelimiterRow) {\n      if (event[0] === 'enter') {\n        // Start of alignment value: set a new column.\n        // To do: `markdown-rs` uses `tableDelimiterCellValue`.\n        if (event[1].type === 'tableContent') {\n          align.push(\n            events[index + 1][1].type === 'tableDelimiterMarker'\n              ? 'left'\n              : 'none'\n          )\n        }\n      }\n      // Exits:\n      // End of alignment value: change the column.\n      // To do: `markdown-rs` uses `tableDelimiterCellValue`.\n      else if (event[1].type === 'tableContent') {\n        if (events[index - 1][1].type === 'tableDelimiterMarker') {\n          const alignIndex = align.length - 1\n          align[alignIndex] = align[alignIndex] === 'left' ? 'center' : 'right'\n        }\n      }\n      // Done!\n      else if (event[1].type === 'tableDelimiterRow') {\n        break\n      }\n    } else if (event[0] === 'enter' && event[1].type === 'tableDelimiterRow') {\n      inDelimiterRow = true\n    }\n    index += 1\n  }\n  return align\n}\n","/**\n * @typedef {import('micromark-util-types').Event} Event\n * @typedef {import('micromark-util-types').Extension} Extension\n * @typedef {import('micromark-util-types').Point} Point\n * @typedef {import('micromark-util-types').Resolver} Resolver\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').Token} Token\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n */\n\n/**\n * @typedef {[number, number, number, number]} Range\n *   Cell info.\n *\n * @typedef {0 | 1 | 2 | 3} RowKind\n *   Where we are: `1` for head row, `2` for delimiter row, `3` for body row.\n */\n\nimport {factorySpace} from 'micromark-factory-space'\nimport {\n  markdownLineEnding,\n  markdownLineEndingOrSpace,\n  markdownSpace\n} from 'micromark-util-character'\nimport {EditMap} from './edit-map.js'\nimport {gfmTableAlign} from './infer.js'\n\n// To do: next major: expose functions.\n\n/**\n * Extension for `micromark` that can be passed in `extensions` to enable GFM\n * table syntax.\n *\n * @type {Extension}\n */\nexport const gfmTable = {\n  flow: {\n    null: {\n      tokenize: tokenizeTable,\n      resolveAll: resolveTable\n    }\n  }\n}\n\n/**\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeTable(effects, ok, nok) {\n  const self = this\n  let size = 0\n  let sizeB = 0\n  /** @type {boolean | undefined} */\n  let seen\n  return start\n\n  /**\n   * Start of a GFM table.\n   *\n   * If there is a valid table row or table head before, then we try to parse\n   * another row.\n   * Otherwise, we try to parse a head.\n   *\n   * ```markdown\n   * > | | a |\n   *     ^\n   *   | | - |\n   * > | | b |\n   *     ^\n   * ```\n   * @type {State}\n   */\n  function start(code) {\n    let index = self.events.length - 1\n    while (index > -1) {\n      const type = self.events[index][1].type\n      if (\n        type === 'lineEnding' ||\n        // Note: markdown-rs uses `whitespace` instead of `linePrefix`\n        type === 'linePrefix'\n      )\n        index--\n      else break\n    }\n    const tail = index > -1 ? self.events[index][1].type : null\n    const next =\n      tail === 'tableHead' || tail === 'tableRow' ? bodyRowStart : headRowBefore\n\n    // Don’t allow lazy body rows.\n    if (next === bodyRowStart && self.parser.lazy[self.now().line]) {\n      return nok(code)\n    }\n    return next(code)\n  }\n\n  /**\n   * Before table head row.\n   *\n   * ```markdown\n   * > | | a |\n   *     ^\n   *   | | - |\n   *   | | b |\n   * ```\n   *\n   * @type {State}\n   */\n  function headRowBefore(code) {\n    effects.enter('tableHead')\n    effects.enter('tableRow')\n    return headRowStart(code)\n  }\n\n  /**\n   * Before table head row, after whitespace.\n   *\n   * ```markdown\n   * > | | a |\n   *     ^\n   *   | | - |\n   *   | | b |\n   * ```\n   *\n   * @type {State}\n   */\n  function headRowStart(code) {\n    if (code === 124) {\n      return headRowBreak(code)\n    }\n\n    // To do: micromark-js should let us parse our own whitespace in extensions,\n    // like `markdown-rs`:\n    //\n    // ```js\n    // // 4+ spaces.\n    // if (markdownSpace(code)) {\n    //   return nok(code)\n    // }\n    // ```\n\n    seen = true\n    // Count the first character, that isn’t a pipe, double.\n    sizeB += 1\n    return headRowBreak(code)\n  }\n\n  /**\n   * At break in table head row.\n   *\n   * ```markdown\n   * > | | a |\n   *     ^\n   *       ^\n   *         ^\n   *   | | - |\n   *   | | b |\n   * ```\n   *\n   * @type {State}\n   */\n  function headRowBreak(code) {\n    if (code === null) {\n      // Note: in `markdown-rs`, we need to reset, in `micromark-js` we don‘t.\n      return nok(code)\n    }\n    if (markdownLineEnding(code)) {\n      // If anything other than one pipe (ignoring whitespace) was used, it’s fine.\n      if (sizeB > 1) {\n        sizeB = 0\n        // To do: check if this works.\n        // Feel free to interrupt:\n        self.interrupt = true\n        effects.exit('tableRow')\n        effects.enter('lineEnding')\n        effects.consume(code)\n        effects.exit('lineEnding')\n        return headDelimiterStart\n      }\n\n      // Note: in `markdown-rs`, we need to reset, in `micromark-js` we don‘t.\n      return nok(code)\n    }\n    if (markdownSpace(code)) {\n      // To do: check if this is fine.\n      // effects.attempt(State::Next(StateName::GfmTableHeadRowBreak), State::Nok)\n      // State::Retry(space_or_tab(tokenizer))\n      return factorySpace(effects, headRowBreak, 'whitespace')(code)\n    }\n    sizeB += 1\n    if (seen) {\n      seen = false\n      // Header cell count.\n      size += 1\n    }\n    if (code === 124) {\n      effects.enter('tableCellDivider')\n      effects.consume(code)\n      effects.exit('tableCellDivider')\n      // Whether a delimiter was seen.\n      seen = true\n      return headRowBreak\n    }\n\n    // Anything else is cell data.\n    effects.enter('data')\n    return headRowData(code)\n  }\n\n  /**\n   * In table head row data.\n   *\n   * ```markdown\n   * > | | a |\n   *       ^\n   *   | | - |\n   *   | | b |\n   * ```\n   *\n   * @type {State}\n   */\n  function headRowData(code) {\n    if (code === null || code === 124 || markdownLineEndingOrSpace(code)) {\n      effects.exit('data')\n      return headRowBreak(code)\n    }\n    effects.consume(code)\n    return code === 92 ? headRowEscape : headRowData\n  }\n\n  /**\n   * In table head row escape.\n   *\n   * ```markdown\n   * > | | a\\-b |\n   *         ^\n   *   | | ---- |\n   *   | | c    |\n   * ```\n   *\n   * @type {State}\n   */\n  function headRowEscape(code) {\n    if (code === 92 || code === 124) {\n      effects.consume(code)\n      return headRowData\n    }\n    return headRowData(code)\n  }\n\n  /**\n   * Before delimiter row.\n   *\n   * ```markdown\n   *   | | a |\n   * > | | - |\n   *     ^\n   *   | | b |\n   * ```\n   *\n   * @type {State}\n   */\n  function headDelimiterStart(code) {\n    // Reset `interrupt`.\n    self.interrupt = false\n\n    // Note: in `markdown-rs`, we need to handle piercing here too.\n    if (self.parser.lazy[self.now().line]) {\n      return nok(code)\n    }\n    effects.enter('tableDelimiterRow')\n    // Track if we’ve seen a `:` or `|`.\n    seen = false\n    if (markdownSpace(code)) {\n      return factorySpace(\n        effects,\n        headDelimiterBefore,\n        'linePrefix',\n        self.parser.constructs.disable.null.includes('codeIndented')\n          ? undefined\n          : 4\n      )(code)\n    }\n    return headDelimiterBefore(code)\n  }\n\n  /**\n   * Before delimiter row, after optional whitespace.\n   *\n   * Reused when a `|` is found later, to parse another cell.\n   *\n   * ```markdown\n   *   | | a |\n   * > | | - |\n   *     ^\n   *   | | b |\n   * ```\n   *\n   * @type {State}\n   */\n  function headDelimiterBefore(code) {\n    if (code === 45 || code === 58) {\n      return headDelimiterValueBefore(code)\n    }\n    if (code === 124) {\n      seen = true\n      // If we start with a pipe, we open a cell marker.\n      effects.enter('tableCellDivider')\n      effects.consume(code)\n      effects.exit('tableCellDivider')\n      return headDelimiterCellBefore\n    }\n\n    // More whitespace / empty row not allowed at start.\n    return headDelimiterNok(code)\n  }\n\n  /**\n   * After `|`, before delimiter cell.\n   *\n   * ```markdown\n   *   | | a |\n   * > | | - |\n   *      ^\n   * ```\n   *\n   * @type {State}\n   */\n  function headDelimiterCellBefore(code) {\n    if (markdownSpace(code)) {\n      return factorySpace(effects, headDelimiterValueBefore, 'whitespace')(code)\n    }\n    return headDelimiterValueBefore(code)\n  }\n\n  /**\n   * Before delimiter cell value.\n   *\n   * ```markdown\n   *   | | a |\n   * > | | - |\n   *       ^\n   * ```\n   *\n   * @type {State}\n   */\n  function headDelimiterValueBefore(code) {\n    // Align: left.\n    if (code === 58) {\n      sizeB += 1\n      seen = true\n      effects.enter('tableDelimiterMarker')\n      effects.consume(code)\n      effects.exit('tableDelimiterMarker')\n      return headDelimiterLeftAlignmentAfter\n    }\n\n    // Align: none.\n    if (code === 45) {\n      sizeB += 1\n      // To do: seems weird that this *isn’t* left aligned, but that state is used?\n      return headDelimiterLeftAlignmentAfter(code)\n    }\n    if (code === null || markdownLineEnding(code)) {\n      return headDelimiterCellAfter(code)\n    }\n    return headDelimiterNok(code)\n  }\n\n  /**\n   * After delimiter cell left alignment marker.\n   *\n   * ```markdown\n   *   | | a  |\n   * > | | :- |\n   *        ^\n   * ```\n   *\n   * @type {State}\n   */\n  function headDelimiterLeftAlignmentAfter(code) {\n    if (code === 45) {\n      effects.enter('tableDelimiterFiller')\n      return headDelimiterFiller(code)\n    }\n\n    // Anything else is not ok after the left-align colon.\n    return headDelimiterNok(code)\n  }\n\n  /**\n   * In delimiter cell filler.\n   *\n   * ```markdown\n   *   | | a |\n   * > | | - |\n   *       ^\n   * ```\n   *\n   * @type {State}\n   */\n  function headDelimiterFiller(code) {\n    if (code === 45) {\n      effects.consume(code)\n      return headDelimiterFiller\n    }\n\n    // Align is `center` if it was `left`, `right` otherwise.\n    if (code === 58) {\n      seen = true\n      effects.exit('tableDelimiterFiller')\n      effects.enter('tableDelimiterMarker')\n      effects.consume(code)\n      effects.exit('tableDelimiterMarker')\n      return headDelimiterRightAlignmentAfter\n    }\n    effects.exit('tableDelimiterFiller')\n    return headDelimiterRightAlignmentAfter(code)\n  }\n\n  /**\n   * After delimiter cell right alignment marker.\n   *\n   * ```markdown\n   *   | |  a |\n   * > | | -: |\n   *         ^\n   * ```\n   *\n   * @type {State}\n   */\n  function headDelimiterRightAlignmentAfter(code) {\n    if (markdownSpace(code)) {\n      return factorySpace(effects, headDelimiterCellAfter, 'whitespace')(code)\n    }\n    return headDelimiterCellAfter(code)\n  }\n\n  /**\n   * After delimiter cell.\n   *\n   * ```markdown\n   *   | |  a |\n   * > | | -: |\n   *          ^\n   * ```\n   *\n   * @type {State}\n   */\n  function headDelimiterCellAfter(code) {\n    if (code === 124) {\n      return headDelimiterBefore(code)\n    }\n    if (code === null || markdownLineEnding(code)) {\n      // Exit when:\n      // * there was no `:` or `|` at all (it’s a thematic break or setext\n      //   underline instead)\n      // * the header cell count is not the delimiter cell count\n      if (!seen || size !== sizeB) {\n        return headDelimiterNok(code)\n      }\n\n      // Note: in markdown-rs`, a reset is needed here.\n      effects.exit('tableDelimiterRow')\n      effects.exit('tableHead')\n      // To do: in `markdown-rs`, resolvers need to be registered manually.\n      // effects.register_resolver(ResolveName::GfmTable)\n      return ok(code)\n    }\n    return headDelimiterNok(code)\n  }\n\n  /**\n   * In delimiter row, at a disallowed byte.\n   *\n   * ```markdown\n   *   | | a |\n   * > | | x |\n   *       ^\n   * ```\n   *\n   * @type {State}\n   */\n  function headDelimiterNok(code) {\n    // Note: in `markdown-rs`, we need to reset, in `micromark-js` we don‘t.\n    return nok(code)\n  }\n\n  /**\n   * Before table body row.\n   *\n   * ```markdown\n   *   | | a |\n   *   | | - |\n   * > | | b |\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function bodyRowStart(code) {\n    // Note: in `markdown-rs` we need to manually take care of a prefix,\n    // but in `micromark-js` that is done for us, so if we’re here, we’re\n    // never at whitespace.\n    effects.enter('tableRow')\n    return bodyRowBreak(code)\n  }\n\n  /**\n   * At break in table body row.\n   *\n   * ```markdown\n   *   | | a |\n   *   | | - |\n   * > | | b |\n   *     ^\n   *       ^\n   *         ^\n   * ```\n   *\n   * @type {State}\n   */\n  function bodyRowBreak(code) {\n    if (code === 124) {\n      effects.enter('tableCellDivider')\n      effects.consume(code)\n      effects.exit('tableCellDivider')\n      return bodyRowBreak\n    }\n    if (code === null || markdownLineEnding(code)) {\n      effects.exit('tableRow')\n      return ok(code)\n    }\n    if (markdownSpace(code)) {\n      return factorySpace(effects, bodyRowBreak, 'whitespace')(code)\n    }\n\n    // Anything else is cell content.\n    effects.enter('data')\n    return bodyRowData(code)\n  }\n\n  /**\n   * In table body row data.\n   *\n   * ```markdown\n   *   | | a |\n   *   | | - |\n   * > | | b |\n   *       ^\n   * ```\n   *\n   * @type {State}\n   */\n  function bodyRowData(code) {\n    if (code === null || code === 124 || markdownLineEndingOrSpace(code)) {\n      effects.exit('data')\n      return bodyRowBreak(code)\n    }\n    effects.consume(code)\n    return code === 92 ? bodyRowEscape : bodyRowData\n  }\n\n  /**\n   * In table body row escape.\n   *\n   * ```markdown\n   *   | | a    |\n   *   | | ---- |\n   * > | | b\\-c |\n   *         ^\n   * ```\n   *\n   * @type {State}\n   */\n  function bodyRowEscape(code) {\n    if (code === 92 || code === 124) {\n      effects.consume(code)\n      return bodyRowData\n    }\n    return bodyRowData(code)\n  }\n}\n\n/** @type {Resolver} */\n// eslint-disable-next-line complexity\nfunction resolveTable(events, context) {\n  let index = -1\n  let inFirstCellAwaitingPipe = true\n  /** @type {RowKind} */\n  let rowKind = 0\n  /** @type {Range} */\n  let lastCell = [0, 0, 0, 0]\n  /** @type {Range} */\n  let cell = [0, 0, 0, 0]\n  let afterHeadAwaitingFirstBodyRow = false\n  let lastTableEnd = 0\n  /** @type {Token | undefined} */\n  let currentTable\n  /** @type {Token | undefined} */\n  let currentBody\n  /** @type {Token | undefined} */\n  let currentCell\n  const map = new EditMap()\n  while (++index < events.length) {\n    const event = events[index]\n    const token = event[1]\n    if (event[0] === 'enter') {\n      // Start of head.\n      if (token.type === 'tableHead') {\n        afterHeadAwaitingFirstBodyRow = false\n\n        // Inject previous (body end and) table end.\n        if (lastTableEnd !== 0) {\n          flushTableEnd(map, context, lastTableEnd, currentTable, currentBody)\n          currentBody = undefined\n          lastTableEnd = 0\n        }\n\n        // Inject table start.\n        currentTable = {\n          type: 'table',\n          start: Object.assign({}, token.start),\n          // Note: correct end is set later.\n          end: Object.assign({}, token.end)\n        }\n        map.add(index, 0, [['enter', currentTable, context]])\n      } else if (\n        token.type === 'tableRow' ||\n        token.type === 'tableDelimiterRow'\n      ) {\n        inFirstCellAwaitingPipe = true\n        currentCell = undefined\n        lastCell = [0, 0, 0, 0]\n        cell = [0, index + 1, 0, 0]\n\n        // Inject table body start.\n        if (afterHeadAwaitingFirstBodyRow) {\n          afterHeadAwaitingFirstBodyRow = false\n          currentBody = {\n            type: 'tableBody',\n            start: Object.assign({}, token.start),\n            // Note: correct end is set later.\n            end: Object.assign({}, token.end)\n          }\n          map.add(index, 0, [['enter', currentBody, context]])\n        }\n        rowKind = token.type === 'tableDelimiterRow' ? 2 : currentBody ? 3 : 1\n      }\n      // Cell data.\n      else if (\n        rowKind &&\n        (token.type === 'data' ||\n          token.type === 'tableDelimiterMarker' ||\n          token.type === 'tableDelimiterFiller')\n      ) {\n        inFirstCellAwaitingPipe = false\n\n        // First value in cell.\n        if (cell[2] === 0) {\n          if (lastCell[1] !== 0) {\n            cell[0] = cell[1]\n            currentCell = flushCell(\n              map,\n              context,\n              lastCell,\n              rowKind,\n              undefined,\n              currentCell\n            )\n            lastCell = [0, 0, 0, 0]\n          }\n          cell[2] = index\n        }\n      } else if (token.type === 'tableCellDivider') {\n        if (inFirstCellAwaitingPipe) {\n          inFirstCellAwaitingPipe = false\n        } else {\n          if (lastCell[1] !== 0) {\n            cell[0] = cell[1]\n            currentCell = flushCell(\n              map,\n              context,\n              lastCell,\n              rowKind,\n              undefined,\n              currentCell\n            )\n          }\n          lastCell = cell\n          cell = [lastCell[1], index, 0, 0]\n        }\n      }\n    }\n    // Exit events.\n    else if (token.type === 'tableHead') {\n      afterHeadAwaitingFirstBodyRow = true\n      lastTableEnd = index\n    } else if (\n      token.type === 'tableRow' ||\n      token.type === 'tableDelimiterRow'\n    ) {\n      lastTableEnd = index\n      if (lastCell[1] !== 0) {\n        cell[0] = cell[1]\n        currentCell = flushCell(\n          map,\n          context,\n          lastCell,\n          rowKind,\n          index,\n          currentCell\n        )\n      } else if (cell[1] !== 0) {\n        currentCell = flushCell(map, context, cell, rowKind, index, currentCell)\n      }\n      rowKind = 0\n    } else if (\n      rowKind &&\n      (token.type === 'data' ||\n        token.type === 'tableDelimiterMarker' ||\n        token.type === 'tableDelimiterFiller')\n    ) {\n      cell[3] = index\n    }\n  }\n  if (lastTableEnd !== 0) {\n    flushTableEnd(map, context, lastTableEnd, currentTable, currentBody)\n  }\n  map.consume(context.events)\n\n  // To do: move this into `html`, when events are exposed there.\n  // That’s what `markdown-rs` does.\n  // That needs updates to `mdast-util-gfm-table`.\n  index = -1\n  while (++index < context.events.length) {\n    const event = context.events[index]\n    if (event[0] === 'enter' && event[1].type === 'table') {\n      event[1]._align = gfmTableAlign(context.events, index)\n    }\n  }\n  return events\n}\n\n/// Generate a cell.\n/**\n *\n * @param {EditMap} map\n * @param {TokenizeContext} context\n * @param {Range} range\n * @param {RowKind} rowKind\n * @param {number | undefined} rowEnd\n * @param {Token | undefined} previousCell\n * @returns {Token | undefined}\n */\n// eslint-disable-next-line max-params\nfunction flushCell(map, context, range, rowKind, rowEnd, previousCell) {\n  // `markdown-rs` uses:\n  // rowKind === 2 ? 'tableDelimiterCell' : 'tableCell'\n  const groupName =\n    rowKind === 1\n      ? 'tableHeader'\n      : rowKind === 2\n      ? 'tableDelimiter'\n      : 'tableData'\n  // `markdown-rs` uses:\n  // rowKind === 2 ? 'tableDelimiterCellValue' : 'tableCellText'\n  const valueName = 'tableContent'\n\n  // Insert an exit for the previous cell, if there is one.\n  //\n  // ```markdown\n  // > | | aa | bb | cc |\n  //          ^-- exit\n  //           ^^^^-- this cell\n  // ```\n  if (range[0] !== 0) {\n    previousCell.end = Object.assign({}, getPoint(context.events, range[0]))\n    map.add(range[0], 0, [['exit', previousCell, context]])\n  }\n\n  // Insert enter of this cell.\n  //\n  // ```markdown\n  // > | | aa | bb | cc |\n  //           ^-- enter\n  //           ^^^^-- this cell\n  // ```\n  const now = getPoint(context.events, range[1])\n  previousCell = {\n    type: groupName,\n    start: Object.assign({}, now),\n    // Note: correct end is set later.\n    end: Object.assign({}, now)\n  }\n  map.add(range[1], 0, [['enter', previousCell, context]])\n\n  // Insert text start at first data start and end at last data end, and\n  // remove events between.\n  //\n  // ```markdown\n  // > | | aa | bb | cc |\n  //            ^-- enter\n  //             ^-- exit\n  //           ^^^^-- this cell\n  // ```\n  if (range[2] !== 0) {\n    const relatedStart = getPoint(context.events, range[2])\n    const relatedEnd = getPoint(context.events, range[3])\n    /** @type {Token} */\n    const valueToken = {\n      type: valueName,\n      start: Object.assign({}, relatedStart),\n      end: Object.assign({}, relatedEnd)\n    }\n    map.add(range[2], 0, [['enter', valueToken, context]])\n    if (rowKind !== 2) {\n      // Fix positional info on remaining events\n      const start = context.events[range[2]]\n      const end = context.events[range[3]]\n      start[1].end = Object.assign({}, end[1].end)\n      start[1].type = 'chunkText'\n      start[1].contentType = 'text'\n\n      // Remove if needed.\n      if (range[3] > range[2] + 1) {\n        const a = range[2] + 1\n        const b = range[3] - range[2] - 1\n        map.add(a, b, [])\n      }\n    }\n    map.add(range[3] + 1, 0, [['exit', valueToken, context]])\n  }\n\n  // Insert an exit for the last cell, if at the row end.\n  //\n  // ```markdown\n  // > | | aa | bb | cc |\n  //                    ^-- exit\n  //               ^^^^^^-- this cell (the last one contains two “between” parts)\n  // ```\n  if (rowEnd !== undefined) {\n    previousCell.end = Object.assign({}, getPoint(context.events, rowEnd))\n    map.add(rowEnd, 0, [['exit', previousCell, context]])\n    previousCell = undefined\n  }\n  return previousCell\n}\n\n/**\n * Generate table end (and table body end).\n *\n * @param {EditMap} map\n * @param {TokenizeContext} context\n * @param {number} index\n * @param {Token} table\n * @param {Token | undefined} tableBody\n */\n// eslint-disable-next-line max-params\nfunction flushTableEnd(map, context, index, table, tableBody) {\n  /** @type {Array<Event>} */\n  const exits = []\n  const related = getPoint(context.events, index)\n  if (tableBody) {\n    tableBody.end = Object.assign({}, related)\n    exits.push(['exit', tableBody, context])\n  }\n  table.end = Object.assign({}, related)\n  exits.push(['exit', table, context])\n  map.add(index + 1, 0, exits)\n}\n\n/**\n * @param {Array<Event>} events\n * @param {number} index\n * @returns {readonly Point}\n */\nfunction getPoint(events, index) {\n  const event = events[index]\n  const side = event[0] === 'enter' ? 'start' : 'end'\n  return event[1][side]\n}\n","/**\n * @typedef {import('micromark-util-types').Extension} Extension\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n */\n\nimport {factorySpace} from 'micromark-factory-space'\nimport {\n  markdownLineEndingOrSpace,\n  markdownLineEnding,\n  markdownSpace\n} from 'micromark-util-character'\nconst tasklistCheck = {\n  tokenize: tokenizeTasklistCheck\n}\n\n// To do: next major: expose function to make extension.\n\n/**\n * Extension for `micromark` that can be passed in `extensions`, to\n * enable GFM task list items syntax.\n *\n * @type {Extension}\n */\nexport const gfmTaskListItem = {\n  text: {\n    [91]: tasklistCheck\n  }\n}\n\n/**\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeTasklistCheck(effects, ok, nok) {\n  const self = this\n  return open\n\n  /**\n   * At start of task list item check.\n   *\n   * ```markdown\n   * > | * [x] y.\n   *       ^\n   * ```\n   *\n   * @type {State}\n   */\n  function open(code) {\n    if (\n      // Exit if there’s stuff before.\n      self.previous !== null ||\n      // Exit if not in the first content that is the first child of a list\n      // item.\n      !self._gfmTasklistFirstContentOfListItem\n    ) {\n      return nok(code)\n    }\n    effects.enter('taskListCheck')\n    effects.enter('taskListCheckMarker')\n    effects.consume(code)\n    effects.exit('taskListCheckMarker')\n    return inside\n  }\n\n  /**\n   * In task list item check.\n   *\n   * ```markdown\n   * > | * [x] y.\n   *        ^\n   * ```\n   *\n   * @type {State}\n   */\n  function inside(code) {\n    // Currently we match how GH works in files.\n    // To match how GH works in comments, use `markdownSpace` (`[\\t ]`) instead\n    // of `markdownLineEndingOrSpace` (`[\\t\\n\\r ]`).\n    if (markdownLineEndingOrSpace(code)) {\n      effects.enter('taskListCheckValueUnchecked')\n      effects.consume(code)\n      effects.exit('taskListCheckValueUnchecked')\n      return close\n    }\n    if (code === 88 || code === 120) {\n      effects.enter('taskListCheckValueChecked')\n      effects.consume(code)\n      effects.exit('taskListCheckValueChecked')\n      return close\n    }\n    return nok(code)\n  }\n\n  /**\n   * At close of task list item check.\n   *\n   * ```markdown\n   * > | * [x] y.\n   *         ^\n   * ```\n   *\n   * @type {State}\n   */\n  function close(code) {\n    if (code === 93) {\n      effects.enter('taskListCheckMarker')\n      effects.consume(code)\n      effects.exit('taskListCheckMarker')\n      effects.exit('taskListCheck')\n      return after\n    }\n    return nok(code)\n  }\n\n  /**\n   * @type {State}\n   */\n  function after(code) {\n    // EOL in paragraph means there must be something else after it.\n    if (markdownLineEnding(code)) {\n      return ok(code)\n    }\n\n    // Space or tab?\n    // Check what comes after.\n    if (markdownSpace(code)) {\n      return effects.check(\n        {\n          tokenize: spaceThenNonSpace\n        },\n        ok,\n        nok\n      )(code)\n    }\n\n    // EOF, or non-whitespace, both wrong.\n    return nok(code)\n  }\n}\n\n/**\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction spaceThenNonSpace(effects, ok, nok) {\n  return factorySpace(effects, after, 'whitespace')\n\n  /**\n   * After whitespace, after task list item check.\n   *\n   * ```markdown\n   * > | * [x] y.\n   *           ^\n   * ```\n   *\n   * @type {State}\n   */\n  function after(code) {\n    // EOF means there was nothing, so bad.\n    // EOL means there’s content after it, so good.\n    // Impossible to have more spaces.\n    // Anything else is good.\n    return code === null ? nok(code) : ok(code)\n  }\n}\n","/**\n * @typedef {import('micromark-extension-gfm-footnote').HtmlOptions} HtmlOptions\n * @typedef {import('micromark-extension-gfm-strikethrough').Options} Options\n * @typedef {import('micromark-util-types').Extension} Extension\n * @typedef {import('micromark-util-types').HtmlExtension} HtmlExtension\n */\n\nimport {\n  combineExtensions,\n  combineHtmlExtensions\n} from 'micromark-util-combine-extensions'\nimport {\n  gfmAutolinkLiteral,\n  gfmAutolinkLiteralHtml\n} from 'micromark-extension-gfm-autolink-literal'\nimport {gfmFootnote, gfmFootnoteHtml} from 'micromark-extension-gfm-footnote'\nimport {\n  gfmStrikethrough,\n  gfmStrikethroughHtml\n} from 'micromark-extension-gfm-strikethrough'\nimport {gfmTable, gfmTableHtml} from 'micromark-extension-gfm-table'\nimport {gfmTagfilterHtml} from 'micromark-extension-gfm-tagfilter'\nimport {\n  gfmTaskListItem,\n  gfmTaskListItemHtml\n} from 'micromark-extension-gfm-task-list-item'\n\n/**\n * Create an extension for `micromark` to enable GFM syntax.\n *\n * @param {Options | null | undefined} [options]\n *   Configuration (optional).\n *\n *   Passed to `micromark-extens-gfm-strikethrough`.\n * @returns {Extension}\n *   Extension for `micromark` that can be passed in `extensions` to enable GFM\n *   syntax.\n */\nexport function gfm(options) {\n  return combineExtensions([\n    gfmAutolinkLiteral,\n    gfmFootnote(),\n    gfmStrikethrough(options),\n    gfmTable,\n    gfmTaskListItem\n  ])\n}\n\n/**\n * Create an extension for `micromark` to support GFM when serializing to HTML.\n *\n * @param {HtmlOptions | null | undefined} [options]\n *   Configuration.\n *\n *   Passed to `micromark-extens-gfm-footnote`.\n * @returns {HtmlExtension}\n *   Extension for `micromark` that can be passed in `htmlExtensions` to\n *   support GFM when serializing to HTML.\n */\nexport function gfmHtml(options) {\n  return combineHtmlExtensions([\n    gfmAutolinkLiteralHtml,\n    gfmFootnoteHtml(options),\n    gfmStrikethroughHtml,\n    gfmTableHtml,\n    gfmTagfilterHtml,\n    gfmTaskListItemHtml\n  ])\n}\n","/**\n * Count how often a character (or substring) is used in a string.\n *\n * @param {string} value\n *   Value to search in.\n * @param {string} character\n *   Character (or substring) to look for.\n * @return {number}\n *   Number of times `character` occurred in `value`.\n */\nexport function ccount(value, character) {\n  const source = String(value)\n\n  if (typeof character !== 'string') {\n    throw new TypeError('Expected character')\n  }\n\n  let count = 0\n  let index = source.indexOf(character)\n\n  while (index !== -1) {\n    count++\n    index = source.indexOf(character, index + character.length)\n  }\n\n  return count\n}\n","export default function escapeStringRegexp(string) {\n\tif (typeof string !== 'string') {\n\t\tthrow new TypeError('Expected a string');\n\t}\n\n\t// Escape characters with special meaning either inside or outside character sets.\n\t// Use a simple backslash escape when it’s always valid, and a `\\xnn` escape when the simpler form would be disallowed by Unicode patterns’ stricter grammar.\n\treturn string\n\t\t.replace(/[|\\\\{}()[\\]^$+*?.]/g, '\\\\$&')\n\t\t.replace(/-/g, '\\\\x2d');\n}\n","/**\n * @typedef {import('mdast').Parent} MdastParent\n * @typedef {import('mdast').Root} Root\n * @typedef {import('mdast').Content} Content\n * @typedef {import('mdast').PhrasingContent} PhrasingContent\n * @typedef {import('mdast').Text} Text\n * @typedef {import('unist-util-visit-parents').Test} Test\n * @typedef {import('unist-util-visit-parents').VisitorResult} VisitorResult\n */\n\n/**\n * @typedef {Content | Root} Node\n * @typedef {Extract<Node, MdastParent>} Parent\n * @typedef {Exclude<Parent, Root>} ContentParent\n *\n * @typedef RegExpMatchObject\n *   Info on the match.\n * @property {number} index\n *   The index of the search at which the result was found.\n * @property {string} input\n *   A copy of the search string in the text node.\n * @property {[Root, ...Array<ContentParent>, Text]} stack\n *   All ancestors of the text node, where the last node is the text itself.\n *\n * @callback ReplaceFunction\n *   Callback called when a search matches.\n * @param {...any} parameters\n *   The parameters are the result of corresponding search expression:\n *\n *   * `value` (`string`) — whole match\n *   * `...capture` (`Array<string>`) — matches from regex capture groups\n *   * `match` (`RegExpMatchObject`) — info on the match\n * @returns {Array<PhrasingContent> | PhrasingContent | string | false | undefined | null}\n *   Thing to replace with.\n *\n *   * when `null`, `undefined`, `''`, remove the match\n *   * …or when `false`, do not replace at all\n *   * …or when `string`, replace with a text node of that value\n *   * …or when `Node` or `Array<Node>`, replace with those nodes\n *\n * @typedef {string | RegExp} Find\n *   Pattern to find.\n *\n *   Strings are escaped and then turned into global expressions.\n *\n * @typedef {Array<FindAndReplaceTuple>} FindAndReplaceList\n *   Several find and replaces, in array form.\n * @typedef {Record<string, Replace>} FindAndReplaceSchema\n *   Several find and replaces, in object form.\n * @typedef {[Find, Replace]} FindAndReplaceTuple\n *   Find and replace in tuple form.\n * @typedef {string | ReplaceFunction} Replace\n *   Thing to replace with.\n * @typedef {[RegExp, ReplaceFunction]} Pair\n *   Normalized find and replace.\n * @typedef {Array<Pair>} Pairs\n *   All find and replaced.\n *\n * @typedef Options\n *   Configuration.\n * @property {Test | null | undefined} [ignore]\n *   Test for which nodes to ignore.\n */\n\nimport escape from 'escape-string-regexp'\nimport {visitParents} from 'unist-util-visit-parents'\nimport {convert} from 'unist-util-is'\n\nconst own = {}.hasOwnProperty\n\n/**\n * Find patterns in a tree and replace them.\n *\n * The algorithm searches the tree in *preorder* for complete values in `Text`\n * nodes.\n * Partial matches are not supported.\n *\n * @param tree\n *   Tree to change.\n * @param find\n *   Patterns to find.\n * @param replace\n *   Things to replace with (when `find` is `Find`) or configuration.\n * @param options\n *   Configuration (when `find` is not `Find`).\n * @returns\n *   Given, modified, tree.\n */\n// To do: next major: remove `find` & `replace` combo, remove schema.\nexport const findAndReplace =\n  /**\n   * @type {(\n   *   (<Tree extends Node>(tree: Tree, find: Find, replace?: Replace | null | undefined, options?: Options | null | undefined) => Tree) &\n   *   (<Tree extends Node>(tree: Tree, schema: FindAndReplaceSchema | FindAndReplaceList, options?: Options | null | undefined) => Tree)\n   * )}\n   **/\n  (\n    /**\n     * @template {Node} Tree\n     * @param {Tree} tree\n     * @param {Find | FindAndReplaceSchema | FindAndReplaceList} find\n     * @param {Replace | Options | null | undefined} [replace]\n     * @param {Options | null | undefined} [options]\n     * @returns {Tree}\n     */\n    function (tree, find, replace, options) {\n      /** @type {Options | null | undefined} */\n      let settings\n      /** @type {FindAndReplaceSchema|FindAndReplaceList} */\n      let schema\n\n      if (typeof find === 'string' || find instanceof RegExp) {\n        // @ts-expect-error don’t expect options twice.\n        schema = [[find, replace]]\n        settings = options\n      } else {\n        schema = find\n        // @ts-expect-error don’t expect replace twice.\n        settings = replace\n      }\n\n      if (!settings) {\n        settings = {}\n      }\n\n      const ignored = convert(settings.ignore || [])\n      const pairs = toPairs(schema)\n      let pairIndex = -1\n\n      while (++pairIndex < pairs.length) {\n        visitParents(tree, 'text', visitor)\n      }\n\n      // To do next major: don’t return the given tree.\n      return tree\n\n      /** @type {import('unist-util-visit-parents/complex-types.js').BuildVisitor<Root, 'text'>} */\n      function visitor(node, parents) {\n        let index = -1\n        /** @type {Parent | undefined} */\n        let grandparent\n\n        while (++index < parents.length) {\n          const parent = parents[index]\n\n          if (\n            ignored(\n              parent,\n              // @ts-expect-error: TS doesn’t understand but it’s perfect.\n              grandparent ? grandparent.children.indexOf(parent) : undefined,\n              grandparent\n            )\n          ) {\n            return\n          }\n\n          grandparent = parent\n        }\n\n        if (grandparent) {\n          return handler(node, parents)\n        }\n      }\n\n      /**\n       * Handle a text node which is not in an ignored parent.\n       *\n       * @param {Text} node\n       *   Text node.\n       * @param {Array<Parent>} parents\n       *   Parents.\n       * @returns {VisitorResult}\n       *   Result.\n       */\n      function handler(node, parents) {\n        const parent = parents[parents.length - 1]\n        const find = pairs[pairIndex][0]\n        const replace = pairs[pairIndex][1]\n        let start = 0\n        // @ts-expect-error: TS is wrong, some of these children can be text.\n        const index = parent.children.indexOf(node)\n        let change = false\n        /** @type {Array<PhrasingContent>} */\n        let nodes = []\n\n        find.lastIndex = 0\n\n        let match = find.exec(node.value)\n\n        while (match) {\n          const position = match.index\n          /** @type {RegExpMatchObject} */\n          const matchObject = {\n            index: match.index,\n            input: match.input,\n            // @ts-expect-error: stack is fine.\n            stack: [...parents, node]\n          }\n          let value = replace(...match, matchObject)\n\n          if (typeof value === 'string') {\n            value = value.length > 0 ? {type: 'text', value} : undefined\n          }\n\n          // It wasn’t a match after all.\n          if (value !== false) {\n            if (start !== position) {\n              nodes.push({\n                type: 'text',\n                value: node.value.slice(start, position)\n              })\n            }\n\n            if (Array.isArray(value)) {\n              nodes.push(...value)\n            } else if (value) {\n              nodes.push(value)\n            }\n\n            start = position + match[0].length\n            change = true\n          }\n\n          if (!find.global) {\n            break\n          }\n\n          match = find.exec(node.value)\n        }\n\n        if (change) {\n          if (start < node.value.length) {\n            nodes.push({type: 'text', value: node.value.slice(start)})\n          }\n\n          parent.children.splice(index, 1, ...nodes)\n        } else {\n          nodes = [node]\n        }\n\n        return index + nodes.length\n      }\n    }\n  )\n\n/**\n * Turn a schema into pairs.\n *\n * @param {FindAndReplaceSchema | FindAndReplaceList} schema\n *   Schema.\n * @returns {Pairs}\n *   Clean pairs.\n */\nfunction toPairs(schema) {\n  /** @type {Pairs} */\n  const result = []\n\n  if (typeof schema !== 'object') {\n    throw new TypeError('Expected array or object as schema')\n  }\n\n  if (Array.isArray(schema)) {\n    let index = -1\n\n    while (++index < schema.length) {\n      result.push([\n        toExpression(schema[index][0]),\n        toFunction(schema[index][1])\n      ])\n    }\n  } else {\n    /** @type {string} */\n    let key\n\n    for (key in schema) {\n      if (own.call(schema, key)) {\n        result.push([toExpression(key), toFunction(schema[key])])\n      }\n    }\n  }\n\n  return result\n}\n\n/**\n * Turn a find into an expression.\n *\n * @param {Find} find\n *   Find.\n * @returns {RegExp}\n *   Expression.\n */\nfunction toExpression(find) {\n  return typeof find === 'string' ? new RegExp(escape(find), 'g') : find\n}\n\n/**\n * Turn a replace into a function.\n *\n * @param {Replace} replace\n *   Replace.\n * @returns {ReplaceFunction}\n *   Function.\n */\nfunction toFunction(replace) {\n  return typeof replace === 'function' ? replace : () => replace\n}\n","/**\n * @typedef {import('mdast').Link} Link\n * @typedef {import('mdast').PhrasingContent} PhrasingContent\n *\n * @typedef {import('mdast-util-from-markdown').CompileContext} CompileContext\n * @typedef {import('mdast-util-from-markdown').Extension} FromMarkdownExtension\n * @typedef {import('mdast-util-from-markdown').Handle} FromMarkdownHandle\n * @typedef {import('mdast-util-from-markdown').Transform} FromMarkdownTransform\n *\n * @typedef {import('mdast-util-to-markdown').ConstructName} ConstructName\n * @typedef {import('mdast-util-to-markdown').Options} ToMarkdownExtension\n *\n * @typedef {import('mdast-util-find-and-replace').ReplaceFunction} ReplaceFunction\n * @typedef {import('mdast-util-find-and-replace').RegExpMatchObject} RegExpMatchObject\n */\n\nimport {ccount} from 'ccount'\nimport {findAndReplace} from 'mdast-util-find-and-replace'\nimport {unicodePunctuation, unicodeWhitespace} from 'micromark-util-character'\n\n/** @type {ConstructName} */\nconst inConstruct = 'phrasing'\n/** @type {Array<ConstructName>} */\nconst notInConstruct = ['autolink', 'link', 'image', 'label']\n\n// To do: next major: expose functions instead of extensions.\n\n/**\n * Extension for `mdast-util-from-markdown` to enable GFM autolink literals.\n *\n * @type {FromMarkdownExtension}\n */\nexport const gfmAutolinkLiteralFromMarkdown = {\n  transforms: [transformGfmAutolinkLiterals],\n  enter: {\n    literalAutolink: enterLiteralAutolink,\n    literalAutolinkEmail: enterLiteralAutolinkValue,\n    literalAutolinkHttp: enterLiteralAutolinkValue,\n    literalAutolinkWww: enterLiteralAutolinkValue\n  },\n  exit: {\n    literalAutolink: exitLiteralAutolink,\n    literalAutolinkEmail: exitLiteralAutolinkEmail,\n    literalAutolinkHttp: exitLiteralAutolinkHttp,\n    literalAutolinkWww: exitLiteralAutolinkWww\n  }\n}\n\n/**\n * Extension for `mdast-util-to-markdown` to enable GFM autolink literals.\n *\n * @type {ToMarkdownExtension}\n */\nexport const gfmAutolinkLiteralToMarkdown = {\n  unsafe: [\n    {\n      character: '@',\n      before: '[+\\\\-.\\\\w]',\n      after: '[\\\\-.\\\\w]',\n      inConstruct,\n      notInConstruct\n    },\n    {\n      character: '.',\n      before: '[Ww]',\n      after: '[\\\\-.\\\\w]',\n      inConstruct,\n      notInConstruct\n    },\n    {character: ':', before: '[ps]', after: '\\\\/', inConstruct, notInConstruct}\n  ]\n}\n\n/**\n * @this {CompileContext}\n * @type {FromMarkdownHandle}\n */\nfunction enterLiteralAutolink(token) {\n  this.enter({type: 'link', title: null, url: '', children: []}, token)\n}\n\n/**\n * @this {CompileContext}\n * @type {FromMarkdownHandle}\n */\nfunction enterLiteralAutolinkValue(token) {\n  this.config.enter.autolinkProtocol.call(this, token)\n}\n\n/**\n * @this {CompileContext}\n * @type {FromMarkdownHandle}\n */\nfunction exitLiteralAutolinkHttp(token) {\n  this.config.exit.autolinkProtocol.call(this, token)\n}\n\n/**\n * @this {CompileContext}\n * @type {FromMarkdownHandle}\n */\nfunction exitLiteralAutolinkWww(token) {\n  this.config.exit.data.call(this, token)\n  const node = /** @type {Link} */ (this.stack[this.stack.length - 1])\n  node.url = 'http://' + this.sliceSerialize(token)\n}\n\n/**\n * @this {CompileContext}\n * @type {FromMarkdownHandle}\n */\nfunction exitLiteralAutolinkEmail(token) {\n  this.config.exit.autolinkEmail.call(this, token)\n}\n\n/**\n * @this {CompileContext}\n * @type {FromMarkdownHandle}\n */\nfunction exitLiteralAutolink(token) {\n  this.exit(token)\n}\n\n/** @type {FromMarkdownTransform} */\nfunction transformGfmAutolinkLiterals(tree) {\n  findAndReplace(\n    tree,\n    [\n      [/(https?:\\/\\/|www(?=\\.))([-.\\w]+)([^ \\t\\r\\n]*)/gi, findUrl],\n      [/([-.\\w+]+)@([-\\w]+(?:\\.[-\\w]+)+)/g, findEmail]\n    ],\n    {ignore: ['link', 'linkReference']}\n  )\n}\n\n/**\n * @type {ReplaceFunction}\n * @param {string} _\n * @param {string} protocol\n * @param {string} domain\n * @param {string} path\n * @param {RegExpMatchObject} match\n * @returns {Link | Array<PhrasingContent> | false}\n */\n// eslint-disable-next-line max-params\nfunction findUrl(_, protocol, domain, path, match) {\n  let prefix = ''\n\n  // Not an expected previous character.\n  if (!previous(match)) {\n    return false\n  }\n\n  // Treat `www` as part of the domain.\n  if (/^w/i.test(protocol)) {\n    domain = protocol + domain\n    protocol = ''\n    prefix = 'http://'\n  }\n\n  if (!isCorrectDomain(domain)) {\n    return false\n  }\n\n  const parts = splitUrl(domain + path)\n\n  if (!parts[0]) return false\n\n  /** @type {Link} */\n  const result = {\n    type: 'link',\n    title: null,\n    url: prefix + protocol + parts[0],\n    children: [{type: 'text', value: protocol + parts[0]}]\n  }\n\n  if (parts[1]) {\n    return [result, {type: 'text', value: parts[1]}]\n  }\n\n  return result\n}\n\n/**\n * @type {ReplaceFunction}\n * @param {string} _\n * @param {string} atext\n * @param {string} label\n * @param {RegExpMatchObject} match\n * @returns {Link | false}\n */\nfunction findEmail(_, atext, label, match) {\n  if (\n    // Not an expected previous character.\n    !previous(match, true) ||\n    // Label ends in not allowed character.\n    /[-\\d_]$/.test(label)\n  ) {\n    return false\n  }\n\n  return {\n    type: 'link',\n    title: null,\n    url: 'mailto:' + atext + '@' + label,\n    children: [{type: 'text', value: atext + '@' + label}]\n  }\n}\n\n/**\n * @param {string} domain\n * @returns {boolean}\n */\nfunction isCorrectDomain(domain) {\n  const parts = domain.split('.')\n\n  if (\n    parts.length < 2 ||\n    (parts[parts.length - 1] &&\n      (/_/.test(parts[parts.length - 1]) ||\n        !/[a-zA-Z\\d]/.test(parts[parts.length - 1]))) ||\n    (parts[parts.length - 2] &&\n      (/_/.test(parts[parts.length - 2]) ||\n        !/[a-zA-Z\\d]/.test(parts[parts.length - 2])))\n  ) {\n    return false\n  }\n\n  return true\n}\n\n/**\n * @param {string} url\n * @returns {[string, string | undefined]}\n */\nfunction splitUrl(url) {\n  const trailExec = /[!\"&'),.:;<>?\\]}]+$/.exec(url)\n\n  if (!trailExec) {\n    return [url, undefined]\n  }\n\n  url = url.slice(0, trailExec.index)\n\n  let trail = trailExec[0]\n  let closingParenIndex = trail.indexOf(')')\n  const openingParens = ccount(url, '(')\n  let closingParens = ccount(url, ')')\n\n  while (closingParenIndex !== -1 && openingParens > closingParens) {\n    url += trail.slice(0, closingParenIndex + 1)\n    trail = trail.slice(closingParenIndex + 1)\n    closingParenIndex = trail.indexOf(')')\n    closingParens++\n  }\n\n  return [url, trail]\n}\n\n/**\n * @param {RegExpMatchObject} match\n * @param {boolean | null | undefined} [email=false]\n * @returns {boolean}\n */\nfunction previous(match, email) {\n  const code = match.input.charCodeAt(match.index - 1)\n\n  return (\n    (match.index === 0 ||\n      unicodeWhitespace(code) ||\n      unicodePunctuation(code)) &&\n    (!email || code !== 47)\n  )\n}\n","/**\n * @typedef {import('../types.js').AssociationId} AssociationId\n */\n\nimport {decodeString} from 'micromark-util-decode-string'\n\n/**\n * Get an identifier from an association to match it to others.\n *\n * Associations are nodes that match to something else through an ID:\n * <https://github.com/syntax-tree/mdast#association>.\n *\n * The `label` of an association is the string value: character escapes and\n * references work, and casing is intact.\n * The `identifier` is used to match one association to another:\n * controversially, character escapes and references don’t work in this\n * matching: `&copy;` does not match `©`, and `\\+` does not match `+`.\n *\n * But casing is ignored (and whitespace) is trimmed and collapsed: ` A\\nb`\n * matches `a b`.\n * So, we do prefer the label when figuring out how we’re going to serialize:\n * it has whitespace, casing, and we can ignore most useless character\n * escapes and all character references.\n *\n * @type {AssociationId}\n */\nexport function association(node) {\n  if (node.label || !node.identifier) {\n    return node.label || ''\n  }\n\n  return decodeString(node.identifier)\n}\n","/**\n * @typedef {import('../types.js').FlowContent} FlowContent\n * @typedef {import('../types.js').Node} Node\n * @typedef {import('../types.js').Parent} Parent\n * @typedef {import('../types.js').State} State\n * @typedef {import('../types.js').TrackFields} TrackFields\n */\n\n/**\n * @param {Parent & {children: Array<FlowContent>}} parent\n *   Parent of flow nodes.\n * @param {State} state\n *   Info passed around about the current state.\n * @param {TrackFields} info\n *   Info on where we are in the document we are generating.\n * @returns {string}\n *   Serialized children, joined by (blank) lines.\n */\nexport function containerFlow(parent, state, info) {\n  const indexStack = state.indexStack\n  const children = parent.children || []\n  const tracker = state.createTracker(info)\n  /** @type {Array<string>} */\n  const results = []\n  let index = -1\n\n  indexStack.push(-1)\n\n  while (++index < children.length) {\n    const child = children[index]\n\n    indexStack[indexStack.length - 1] = index\n\n    results.push(\n      tracker.move(\n        state.handle(child, parent, state, {\n          before: '\\n',\n          after: '\\n',\n          ...tracker.current()\n        })\n      )\n    )\n\n    if (child.type !== 'list') {\n      state.bulletLastUsed = undefined\n    }\n\n    if (index < children.length - 1) {\n      results.push(\n        tracker.move(between(child, children[index + 1], parent, state))\n      )\n    }\n  }\n\n  indexStack.pop()\n\n  return results.join('')\n}\n\n/**\n * @param {Node} left\n * @param {Node} right\n * @param {Parent} parent\n * @param {State} state\n * @returns {string}\n */\nfunction between(left, right, parent, state) {\n  let index = state.join.length\n\n  while (index--) {\n    const result = state.join[index](left, right, parent, state)\n\n    if (result === true || result === 1) {\n      break\n    }\n\n    if (typeof result === 'number') {\n      return '\\n'.repeat(1 + result)\n    }\n\n    if (result === false) {\n      return '\\n\\n<!---->\\n\\n'\n    }\n  }\n\n  return '\\n\\n'\n}\n","/**\n * @typedef {import('../types.js').IndentLines} IndentLines\n */\n\nconst eol = /\\r?\\n|\\r/g\n\n/**\n * @type {IndentLines}\n */\nexport function indentLines(value, map) {\n  /** @type {Array<string>} */\n  const result = []\n  let start = 0\n  let line = 0\n  /** @type {RegExpExecArray | null} */\n  let match\n\n  while ((match = eol.exec(value))) {\n    one(value.slice(start, match.index))\n    result.push(match[0])\n    start = match.index + match[0].length\n    line++\n  }\n\n  one(value.slice(start))\n\n  return result.join('')\n\n  /**\n   * @param {string} value\n   */\n  function one(value) {\n    result.push(map(value, line, !value))\n  }\n}\n","/**\n * @typedef {import('../types.js').Unsafe} Unsafe\n */\n\n/**\n * @param {Unsafe} pattern\n * @returns {RegExp}\n */\nexport function patternCompile(pattern) {\n  if (!pattern._compiled) {\n    const before =\n      (pattern.atBreak ? '[\\\\r\\\\n][\\\\t ]*' : '') +\n      (pattern.before ? '(?:' + pattern.before + ')' : '')\n\n    pattern._compiled = new RegExp(\n      (before ? '(' + before + ')' : '') +\n        (/[|\\\\{}()[\\]^$+*?.-]/.test(pattern.character) ? '\\\\' : '') +\n        pattern.character +\n        (pattern.after ? '(?:' + pattern.after + ')' : ''),\n      'g'\n    )\n  }\n\n  return pattern._compiled\n}\n","/**\n * @typedef {import('../types.js').Unsafe} Unsafe\n * @typedef {import('../types.js').ConstructName} ConstructName\n */\n\n/**\n * @param {Array<ConstructName>} stack\n * @param {Unsafe} pattern\n * @returns {boolean}\n */\nexport function patternInScope(stack, pattern) {\n  return (\n    listInScope(stack, pattern.inConstruct, true) &&\n    !listInScope(stack, pattern.notInConstruct, false)\n  )\n}\n\n/**\n * @param {Array<ConstructName>} stack\n * @param {Unsafe['inConstruct']} list\n * @param {boolean} none\n * @returns {boolean}\n */\nfunction listInScope(stack, list, none) {\n  if (typeof list === 'string') {\n    list = [list]\n  }\n\n  if (!list || list.length === 0) {\n    return none\n  }\n\n  let index = -1\n\n  while (++index < list.length) {\n    if (stack.includes(list[index])) {\n      return true\n    }\n  }\n\n  return false\n}\n","/**\n * @typedef {import('../types.js').State} State\n * @typedef {import('../types.js').SafeConfig} SafeConfig\n */\n\nimport {patternCompile} from './pattern-compile.js'\nimport {patternInScope} from './pattern-in-scope.js'\n\n/**\n * Make a string safe for embedding in markdown constructs.\n *\n * In markdown, almost all punctuation characters can, in certain cases,\n * result in something.\n * Whether they do is highly subjective to where they happen and in what\n * they happen.\n *\n * To solve this, `mdast-util-to-markdown` tracks:\n *\n * * Characters before and after something;\n * * What “constructs” we are in.\n *\n * This information is then used by this function to escape or encode\n * special characters.\n *\n * @param {State} state\n *   Info passed around about the current state.\n * @param {string | null | undefined} input\n *   Raw value to make safe.\n * @param {SafeConfig} config\n *   Configuration.\n * @returns {string}\n *   Serialized markdown safe for embedding.\n */\nexport function safe(state, input, config) {\n  const value = (config.before || '') + (input || '') + (config.after || '')\n  /** @type {Array<number>} */\n  const positions = []\n  /** @type {Array<string>} */\n  const result = []\n  /** @type {Record<number, {before: boolean, after: boolean}>} */\n  const infos = {}\n  let index = -1\n\n  while (++index < state.unsafe.length) {\n    const pattern = state.unsafe[index]\n\n    if (!patternInScope(state.stack, pattern)) {\n      continue\n    }\n\n    const expression = patternCompile(pattern)\n    /** @type {RegExpExecArray | null} */\n    let match\n\n    while ((match = expression.exec(value))) {\n      const before = 'before' in pattern || Boolean(pattern.atBreak)\n      const after = 'after' in pattern\n      const position = match.index + (before ? match[1].length : 0)\n\n      if (positions.includes(position)) {\n        if (infos[position].before && !before) {\n          infos[position].before = false\n        }\n\n        if (infos[position].after && !after) {\n          infos[position].after = false\n        }\n      } else {\n        positions.push(position)\n        infos[position] = {before, after}\n      }\n    }\n  }\n\n  positions.sort(numerical)\n\n  let start = config.before ? config.before.length : 0\n  const end = value.length - (config.after ? config.after.length : 0)\n  index = -1\n\n  while (++index < positions.length) {\n    const position = positions[index]\n\n    // Character before or after matched:\n    if (position < start || position >= end) {\n      continue\n    }\n\n    // If this character is supposed to be escaped because it has a condition on\n    // the next character, and the next character is definitly being escaped,\n    // then skip this escape.\n    if (\n      (position + 1 < end &&\n        positions[index + 1] === position + 1 &&\n        infos[position].after &&\n        !infos[position + 1].before &&\n        !infos[position + 1].after) ||\n      (positions[index - 1] === position - 1 &&\n        infos[position].before &&\n        !infos[position - 1].before &&\n        !infos[position - 1].after)\n    ) {\n      continue\n    }\n\n    if (start !== position) {\n      // If we have to use a character reference, an ampersand would be more\n      // correct, but as backslashes only care about punctuation, either will\n      // do the trick\n      result.push(escapeBackslashes(value.slice(start, position), '\\\\'))\n    }\n\n    start = position\n\n    if (\n      /[!-/:-@[-`{-~]/.test(value.charAt(position)) &&\n      (!config.encode || !config.encode.includes(value.charAt(position)))\n    ) {\n      // Character escape.\n      result.push('\\\\')\n    } else {\n      // Character reference.\n      result.push(\n        '&#x' + value.charCodeAt(position).toString(16).toUpperCase() + ';'\n      )\n      start++\n    }\n  }\n\n  result.push(escapeBackslashes(value.slice(start, end), config.after))\n\n  return result.join('')\n}\n\n/**\n * @param {number} a\n * @param {number} b\n * @returns {number}\n */\nfunction numerical(a, b) {\n  return a - b\n}\n\n/**\n * @param {string} value\n * @param {string} after\n * @returns {string}\n */\nfunction escapeBackslashes(value, after) {\n  const expression = /\\\\(?=[!-/:-@[-`{-~])/g\n  /** @type {Array<number>} */\n  const positions = []\n  /** @type {Array<string>} */\n  const results = []\n  const whole = value + after\n  let index = -1\n  let start = 0\n  /** @type {RegExpExecArray | null} */\n  let match\n\n  while ((match = expression.exec(whole))) {\n    positions.push(match.index)\n  }\n\n  while (++index < positions.length) {\n    if (start !== positions[index]) {\n      results.push(value.slice(start, positions[index]))\n    }\n\n    results.push('\\\\')\n    start = positions[index]\n  }\n\n  results.push(value.slice(start))\n\n  return results.join('')\n}\n","/**\n * @typedef {import('../types.js').CreateTracker} CreateTracker\n * @typedef {import('../types.js').TrackCurrent} TrackCurrent\n * @typedef {import('../types.js').TrackMove} TrackMove\n * @typedef {import('../types.js').TrackShift} TrackShift\n */\n\n/**\n * Track positional info in the output.\n *\n * @type {CreateTracker}\n */\nexport function track(config) {\n  // Defaults are used to prevent crashes when older utilities somehow activate\n  // this code.\n  /* c8 ignore next 5 */\n  const options = config || {}\n  const now = options.now || {}\n  let lineShift = options.lineShift || 0\n  let line = now.line || 1\n  let column = now.column || 1\n\n  return {move, current, shift}\n\n  /**\n   * Get the current tracked info.\n   *\n   * @type {TrackCurrent}\n   */\n  function current() {\n    return {now: {line, column}, lineShift}\n  }\n\n  /**\n   * Define an increased line shift (the typical indent for lines).\n   *\n   * @type {TrackShift}\n   */\n  function shift(value) {\n    lineShift += value\n  }\n\n  /**\n   * Move past some generated markdown.\n   *\n   * @type {TrackMove}\n   */\n  function move(input) {\n    // eslint-disable-next-line unicorn/prefer-default-parameters\n    const value = input || ''\n    const chunks = value.split(/\\r?\\n|\\r/g)\n    const tail = chunks[chunks.length - 1]\n    line += chunks.length - 1\n    column =\n      chunks.length === 1 ? column + tail.length : 1 + tail.length + lineShift\n    return value\n  }\n}\n","/**\n * @typedef {import('mdast').FootnoteReference} FootnoteReference\n * @typedef {import('mdast').FootnoteDefinition} FootnoteDefinition\n * @typedef {import('mdast-util-from-markdown').CompileContext} CompileContext\n * @typedef {import('mdast-util-from-markdown').Extension} FromMarkdownExtension\n * @typedef {import('mdast-util-from-markdown').Handle} FromMarkdownHandle\n * @typedef {import('mdast-util-to-markdown').Options} ToMarkdownExtension\n * @typedef {import('mdast-util-to-markdown').Handle} ToMarkdownHandle\n * @typedef {import('mdast-util-to-markdown').Map} Map\n */\n\nimport {normalizeIdentifier} from 'micromark-util-normalize-identifier'\nimport {association} from 'mdast-util-to-markdown/lib/util/association.js'\nimport {containerFlow} from 'mdast-util-to-markdown/lib/util/container-flow.js'\nimport {indentLines} from 'mdast-util-to-markdown/lib/util/indent-lines.js'\nimport {safe} from 'mdast-util-to-markdown/lib/util/safe.js'\nimport {track} from 'mdast-util-to-markdown/lib/util/track.js'\n\nfootnoteReference.peek = footnoteReferencePeek\n\n// To do: next major: rename `context` -> `state`, `safeOptions` to `info`, use\n// utilities on `state`.\n\n/**\n * Create an extension for `mdast-util-from-markdown` to enable GFM footnotes\n * in markdown.\n *\n * @returns {FromMarkdownExtension}\n *   Extension for `mdast-util-from-markdown`.\n */\nexport function gfmFootnoteFromMarkdown() {\n  return {\n    enter: {\n      gfmFootnoteDefinition: enterFootnoteDefinition,\n      gfmFootnoteDefinitionLabelString: enterFootnoteDefinitionLabelString,\n      gfmFootnoteCall: enterFootnoteCall,\n      gfmFootnoteCallString: enterFootnoteCallString\n    },\n    exit: {\n      gfmFootnoteDefinition: exitFootnoteDefinition,\n      gfmFootnoteDefinitionLabelString: exitFootnoteDefinitionLabelString,\n      gfmFootnoteCall: exitFootnoteCall,\n      gfmFootnoteCallString: exitFootnoteCallString\n    }\n  }\n}\n\n/**\n * Create an extension for `mdast-util-to-markdown` to enable GFM footnotes\n * in markdown.\n *\n * @returns {ToMarkdownExtension}\n *   Extension for `mdast-util-to-markdown`.\n */\nexport function gfmFootnoteToMarkdown() {\n  return {\n    // This is on by default already.\n    unsafe: [{character: '[', inConstruct: ['phrasing', 'label', 'reference']}],\n    handlers: {footnoteDefinition, footnoteReference}\n  }\n}\n\n/**\n * @this {CompileContext}\n * @type {FromMarkdownHandle}\n */\nfunction enterFootnoteDefinition(token) {\n  this.enter(\n    {type: 'footnoteDefinition', identifier: '', label: '', children: []},\n    token\n  )\n}\n\n/**\n * @this {CompileContext}\n * @type {FromMarkdownHandle}\n */\nfunction enterFootnoteDefinitionLabelString() {\n  this.buffer()\n}\n\n/**\n * @this {CompileContext}\n * @type {FromMarkdownHandle}\n */\nfunction exitFootnoteDefinitionLabelString(token) {\n  const label = this.resume()\n  const node = /** @type {FootnoteDefinition} */ (\n    this.stack[this.stack.length - 1]\n  )\n  node.label = label\n  node.identifier = normalizeIdentifier(\n    this.sliceSerialize(token)\n  ).toLowerCase()\n}\n\n/**\n * @this {CompileContext}\n * @type {FromMarkdownHandle}\n */\nfunction exitFootnoteDefinition(token) {\n  this.exit(token)\n}\n\n/**\n * @this {CompileContext}\n * @type {FromMarkdownHandle}\n */\nfunction enterFootnoteCall(token) {\n  this.enter({type: 'footnoteReference', identifier: '', label: ''}, token)\n}\n\n/**\n * @this {CompileContext}\n * @type {FromMarkdownHandle}\n */\nfunction enterFootnoteCallString() {\n  this.buffer()\n}\n\n/**\n * @this {CompileContext}\n * @type {FromMarkdownHandle}\n */\nfunction exitFootnoteCallString(token) {\n  const label = this.resume()\n  const node = /** @type {FootnoteDefinition} */ (\n    this.stack[this.stack.length - 1]\n  )\n  node.label = label\n  node.identifier = normalizeIdentifier(\n    this.sliceSerialize(token)\n  ).toLowerCase()\n}\n\n/**\n * @this {CompileContext}\n * @type {FromMarkdownHandle}\n */\nfunction exitFootnoteCall(token) {\n  this.exit(token)\n}\n\n/**\n * @type {ToMarkdownHandle}\n * @param {FootnoteReference} node\n */\nfunction footnoteReference(node, _, context, safeOptions) {\n  const tracker = track(safeOptions)\n  let value = tracker.move('[^')\n  const exit = context.enter('footnoteReference')\n  const subexit = context.enter('reference')\n  value += tracker.move(\n    safe(context, association(node), {\n      ...tracker.current(),\n      before: value,\n      after: ']'\n    })\n  )\n  subexit()\n  exit()\n  value += tracker.move(']')\n  return value\n}\n\n/** @type {ToMarkdownHandle} */\nfunction footnoteReferencePeek() {\n  return '['\n}\n\n/**\n * @type {ToMarkdownHandle}\n * @param {FootnoteDefinition} node\n */\nfunction footnoteDefinition(node, _, context, safeOptions) {\n  const tracker = track(safeOptions)\n  let value = tracker.move('[^')\n  const exit = context.enter('footnoteDefinition')\n  const subexit = context.enter('label')\n  value += tracker.move(\n    safe(context, association(node), {\n      ...tracker.current(),\n      before: value,\n      after: ']'\n    })\n  )\n  subexit()\n  value += tracker.move(\n    ']:' + (node.children && node.children.length > 0 ? ' ' : '')\n  )\n  tracker.shift(4)\n  value += tracker.move(\n    indentLines(containerFlow(node, context, tracker.current()), map)\n  )\n  exit()\n\n  return value\n}\n\n/** @type {Map} */\nfunction map(line, index, blank) {\n  if (index === 0) {\n    return line\n  }\n\n  return (blank ? '' : '    ') + line\n}\n","/**\n * @typedef {import('../types.js').Handle} Handle\n * @typedef {import('../types.js').Info} Info\n * @typedef {import('../types.js').Parent} Parent\n * @typedef {import('../types.js').PhrasingContent} PhrasingContent\n * @typedef {import('../types.js').State} State\n */\n\n/**\n * Serialize the children of a parent that contains phrasing children.\n *\n * These children will be joined flush together.\n *\n * @param {Parent & {children: Array<PhrasingContent>}} parent\n *   Parent of flow nodes.\n * @param {State} state\n *   Info passed around about the current state.\n * @param {Info} info\n *   Info on where we are in the document we are generating.\n * @returns {string}\n *   Serialized children, joined together.\n */\nexport function containerPhrasing(parent, state, info) {\n  const indexStack = state.indexStack\n  const children = parent.children || []\n  /** @type {Array<string>} */\n  const results = []\n  let index = -1\n  let before = info.before\n\n  indexStack.push(-1)\n  let tracker = state.createTracker(info)\n\n  while (++index < children.length) {\n    const child = children[index]\n    /** @type {string} */\n    let after\n\n    indexStack[indexStack.length - 1] = index\n\n    if (index + 1 < children.length) {\n      /** @type {Handle} */\n      // @ts-expect-error: hush, it’s actually a `zwitch`.\n      let handle = state.handle.handlers[children[index + 1].type]\n      /** @type {Handle} */\n      // @ts-expect-error: hush, it’s actually a `zwitch`.\n      if (handle && handle.peek) handle = handle.peek\n      after = handle\n        ? handle(children[index + 1], parent, state, {\n            before: '',\n            after: '',\n            ...tracker.current()\n          }).charAt(0)\n        : ''\n    } else {\n      after = info.after\n    }\n\n    // In some cases, html (text) can be found in phrasing right after an eol.\n    // When we’d serialize that, in most cases that would be seen as html\n    // (flow).\n    // As we can’t escape or so to prevent it from happening, we take a somewhat\n    // reasonable approach: replace that eol with a space.\n    // See: <https://github.com/syntax-tree/mdast-util-to-markdown/issues/15>\n    if (\n      results.length > 0 &&\n      (before === '\\r' || before === '\\n') &&\n      child.type === 'html'\n    ) {\n      results[results.length - 1] = results[results.length - 1].replace(\n        /(\\r?\\n|\\r)$/,\n        ' '\n      )\n      before = ' '\n\n      // To do: does this work to reset tracker?\n      tracker = state.createTracker(info)\n      tracker.move(results.join(''))\n    }\n\n    results.push(\n      tracker.move(\n        state.handle(child, parent, state, {\n          ...tracker.current(),\n          before,\n          after\n        })\n      )\n    )\n\n    before = results[results.length - 1].slice(-1)\n  }\n\n  indexStack.pop()\n\n  return results.join('')\n}\n","/**\n * @typedef {import('mdast').Delete} Delete\n *\n * @typedef {import('mdast-util-from-markdown').CompileContext} CompileContext\n * @typedef {import('mdast-util-from-markdown').Extension} FromMarkdownExtension\n * @typedef {import('mdast-util-from-markdown').Handle} FromMarkdownHandle\n *\n * @typedef {import('mdast-util-to-markdown').ConstructName} ConstructName\n * @typedef {import('mdast-util-to-markdown').Options} ToMarkdownExtension\n * @typedef {import('mdast-util-to-markdown').Handle} ToMarkdownHandle\n */\n\nimport {containerPhrasing} from 'mdast-util-to-markdown/lib/util/container-phrasing.js'\nimport {track} from 'mdast-util-to-markdown/lib/util/track.js'\n\n// To do: next major: expose functions.\n// To do: next major: use `state`, state utilities.\n\n/**\n * List of constructs that occur in phrasing (paragraphs, headings), but cannot\n * contain strikethrough.\n * So they sort of cancel each other out.\n * Note: could use a better name.\n *\n * Note: keep in sync with: <https://github.com/syntax-tree/mdast-util-to-markdown/blob/8ce8dbf/lib/unsafe.js#L14>\n *\n * @type {Array<ConstructName>}\n */\nconst constructsWithoutStrikethrough = [\n  'autolink',\n  'destinationLiteral',\n  'destinationRaw',\n  'reference',\n  'titleQuote',\n  'titleApostrophe'\n]\n\nhandleDelete.peek = peekDelete\n\n/**\n * Extension for `mdast-util-from-markdown` to enable GFM strikethrough.\n *\n * @type {FromMarkdownExtension}\n */\nexport const gfmStrikethroughFromMarkdown = {\n  canContainEols: ['delete'],\n  enter: {strikethrough: enterStrikethrough},\n  exit: {strikethrough: exitStrikethrough}\n}\n\n/**\n * Extension for `mdast-util-to-markdown` to enable GFM strikethrough.\n *\n * @type {ToMarkdownExtension}\n */\nexport const gfmStrikethroughToMarkdown = {\n  unsafe: [\n    {\n      character: '~',\n      inConstruct: 'phrasing',\n      notInConstruct: constructsWithoutStrikethrough\n    }\n  ],\n  handlers: {delete: handleDelete}\n}\n\n/**\n * @this {CompileContext}\n * @type {FromMarkdownHandle}\n */\nfunction enterStrikethrough(token) {\n  this.enter({type: 'delete', children: []}, token)\n}\n\n/**\n * @this {CompileContext}\n * @type {FromMarkdownHandle}\n */\nfunction exitStrikethrough(token) {\n  this.exit(token)\n}\n\n/**\n * @type {ToMarkdownHandle}\n * @param {Delete} node\n */\nfunction handleDelete(node, _, context, safeOptions) {\n  const tracker = track(safeOptions)\n  const exit = context.enter('strikethrough')\n  let value = tracker.move('~~')\n  value += containerPhrasing(node, context, {\n    ...tracker.current(),\n    before: value,\n    after: '~'\n  })\n  value += tracker.move('~~')\n  exit()\n  return value\n}\n\n/** @type {ToMarkdownHandle} */\nfunction peekDelete() {\n  return '~'\n}\n","/**\n * @typedef {import('mdast').InlineCode} InlineCode\n * @typedef {import('../types.js').Parent} Parent\n * @typedef {import('../types.js').State} State\n */\n\nimport {patternCompile} from '../util/pattern-compile.js'\n\ninlineCode.peek = inlineCodePeek\n\n/**\n * @param {InlineCode} node\n * @param {Parent | undefined} _\n * @param {State} state\n * @returns {string}\n */\nexport function inlineCode(node, _, state) {\n  let value = node.value || ''\n  let sequence = '`'\n  let index = -1\n\n  // If there is a single grave accent on its own in the code, use a fence of\n  // two.\n  // If there are two in a row, use one.\n  while (new RegExp('(^|[^`])' + sequence + '([^`]|$)').test(value)) {\n    sequence += '`'\n  }\n\n  // If this is not just spaces or eols (tabs don’t count), and either the\n  // first or last character are a space, eol, or tick, then pad with spaces.\n  if (\n    /[^ \\r\\n]/.test(value) &&\n    ((/^[ \\r\\n]/.test(value) && /[ \\r\\n]$/.test(value)) || /^`|`$/.test(value))\n  ) {\n    value = ' ' + value + ' '\n  }\n\n  // We have a potential problem: certain characters after eols could result in\n  // blocks being seen.\n  // For example, if someone injected the string `'\\n# b'`, then that would\n  // result in an ATX heading.\n  // We can’t escape characters in `inlineCode`, but because eols are\n  // transformed to spaces when going from markdown to HTML anyway, we can swap\n  // them out.\n  while (++index < state.unsafe.length) {\n    const pattern = state.unsafe[index]\n    const expression = patternCompile(pattern)\n    /** @type {RegExpExecArray | null} */\n    let match\n\n    // Only look for `atBreak`s.\n    // Btw: note that `atBreak` patterns will always start the regex at LF or\n    // CR.\n    if (!pattern.atBreak) continue\n\n    while ((match = expression.exec(value))) {\n      let position = match.index\n\n      // Support CRLF (patterns only look for one of the characters).\n      if (\n        value.charCodeAt(position) === 10 /* `\\n` */ &&\n        value.charCodeAt(position - 1) === 13 /* `\\r` */\n      ) {\n        position--\n      }\n\n      value = value.slice(0, position) + ' ' + value.slice(match.index + 1)\n    }\n  }\n\n  return sequence + value + sequence\n}\n\n/**\n * @returns {string}\n */\nfunction inlineCodePeek() {\n  return '`'\n}\n","/**\n * @typedef Options\n *   Configuration (optional).\n * @property {string|null|ReadonlyArray<string|null|undefined>} [align]\n *   One style for all columns, or styles for their respective columns.\n *   Each style is either `'l'` (left), `'r'` (right), or `'c'` (center).\n *   Other values are treated as `''`, which doesn’t place the colon in the\n *   alignment row but does align left.\n *   *Only the lowercased first character is used, so `Right` is fine.*\n * @property {boolean} [padding=true]\n *   Whether to add a space of padding between delimiters and cells.\n *\n *   When `true`, there is padding:\n *\n *   ```markdown\n *   | Alpha | B     |\n *   | ----- | ----- |\n *   | C     | Delta |\n *   ```\n *\n *   When `false`, there is no padding:\n *\n *   ```markdown\n *   |Alpha|B    |\n *   |-----|-----|\n *   |C    |Delta|\n *   ```\n * @property {boolean} [delimiterStart=true]\n *   Whether to begin each row with the delimiter.\n *\n *   > 👉 **Note**: please don’t use this: it could create fragile structures\n *   > that aren’t understandable to some markdown parsers.\n *\n *   When `true`, there are starting delimiters:\n *\n *   ```markdown\n *   | Alpha | B     |\n *   | ----- | ----- |\n *   | C     | Delta |\n *   ```\n *\n *   When `false`, there are no starting delimiters:\n *\n *   ```markdown\n *   Alpha | B     |\n *   ----- | ----- |\n *   C     | Delta |\n *   ```\n * @property {boolean} [delimiterEnd=true]\n *   Whether to end each row with the delimiter.\n *\n *   > 👉 **Note**: please don’t use this: it could create fragile structures\n *   > that aren’t understandable to some markdown parsers.\n *\n *   When `true`, there are ending delimiters:\n *\n *   ```markdown\n *   | Alpha | B     |\n *   | ----- | ----- |\n *   | C     | Delta |\n *   ```\n *\n *   When `false`, there are no ending delimiters:\n *\n *   ```markdown\n *   | Alpha | B\n *   | ----- | -----\n *   | C     | Delta\n *   ```\n * @property {boolean} [alignDelimiters=true]\n *   Whether to align the delimiters.\n *   By default, they are aligned:\n *\n *   ```markdown\n *   | Alpha | B     |\n *   | ----- | ----- |\n *   | C     | Delta |\n *   ```\n *\n *   Pass `false` to make them staggered:\n *\n *   ```markdown\n *   | Alpha | B |\n *   | - | - |\n *   | C | Delta |\n *   ```\n * @property {(value: string) => number} [stringLength]\n *   Function to detect the length of table cell content.\n *   This is used when aligning the delimiters (`|`) between table cells.\n *   Full-width characters and emoji mess up delimiter alignment when viewing\n *   the markdown source.\n *   To fix this, you can pass this function, which receives the cell content\n *   and returns its “visible” size.\n *   Note that what is and isn’t visible depends on where the text is displayed.\n *\n *   Without such a function, the following:\n *\n *   ```js\n *   markdownTable([\n *     ['Alpha', 'Bravo'],\n *     ['中文', 'Charlie'],\n *     ['👩‍❤️‍👩', 'Delta']\n *   ])\n *   ```\n *\n *   Yields:\n *\n *   ```markdown\n *   | Alpha | Bravo |\n *   | - | - |\n *   | 中文 | Charlie |\n *   | 👩‍❤️‍👩 | Delta |\n *   ```\n *\n *   With [`string-width`](https://github.com/sindresorhus/string-width):\n *\n *   ```js\n *   import stringWidth from 'string-width'\n *\n *   markdownTable(\n *     [\n *       ['Alpha', 'Bravo'],\n *       ['中文', 'Charlie'],\n *       ['👩‍❤️‍👩', 'Delta']\n *     ],\n *     {stringLength: stringWidth}\n *   )\n *   ```\n *\n *   Yields:\n *\n *   ```markdown\n *   | Alpha | Bravo   |\n *   | ----- | ------- |\n *   | 中文  | Charlie |\n *   | 👩‍❤️‍👩    | Delta   |\n *   ```\n */\n\n/**\n * @typedef {Options} MarkdownTableOptions\n * @todo\n *   Remove next major.\n */\n\n/**\n * Generate a markdown ([GFM](https://docs.github.com/en/github/writing-on-github/working-with-advanced-formatting/organizing-information-with-tables)) table..\n *\n * @param {ReadonlyArray<ReadonlyArray<string|null|undefined>>} table\n *   Table data (matrix of strings).\n * @param {Options} [options]\n *   Configuration (optional).\n * @returns {string}\n */\nexport function markdownTable(table, options = {}) {\n  const align = (options.align || []).concat()\n  const stringLength = options.stringLength || defaultStringLength\n  /** @type {Array<number>} Character codes as symbols for alignment per column. */\n  const alignments = []\n  /** @type {Array<Array<string>>} Cells per row. */\n  const cellMatrix = []\n  /** @type {Array<Array<number>>} Sizes of each cell per row. */\n  const sizeMatrix = []\n  /** @type {Array<number>} */\n  const longestCellByColumn = []\n  let mostCellsPerRow = 0\n  let rowIndex = -1\n\n  // This is a superfluous loop if we don’t align delimiters, but otherwise we’d\n  // do superfluous work when aligning, so optimize for aligning.\n  while (++rowIndex < table.length) {\n    /** @type {Array<string>} */\n    const row = []\n    /** @type {Array<number>} */\n    const sizes = []\n    let columnIndex = -1\n\n    if (table[rowIndex].length > mostCellsPerRow) {\n      mostCellsPerRow = table[rowIndex].length\n    }\n\n    while (++columnIndex < table[rowIndex].length) {\n      const cell = serialize(table[rowIndex][columnIndex])\n\n      if (options.alignDelimiters !== false) {\n        const size = stringLength(cell)\n        sizes[columnIndex] = size\n\n        if (\n          longestCellByColumn[columnIndex] === undefined ||\n          size > longestCellByColumn[columnIndex]\n        ) {\n          longestCellByColumn[columnIndex] = size\n        }\n      }\n\n      row.push(cell)\n    }\n\n    cellMatrix[rowIndex] = row\n    sizeMatrix[rowIndex] = sizes\n  }\n\n  // Figure out which alignments to use.\n  let columnIndex = -1\n\n  if (typeof align === 'object' && 'length' in align) {\n    while (++columnIndex < mostCellsPerRow) {\n      alignments[columnIndex] = toAlignment(align[columnIndex])\n    }\n  } else {\n    const code = toAlignment(align)\n\n    while (++columnIndex < mostCellsPerRow) {\n      alignments[columnIndex] = code\n    }\n  }\n\n  // Inject the alignment row.\n  columnIndex = -1\n  /** @type {Array<string>} */\n  const row = []\n  /** @type {Array<number>} */\n  const sizes = []\n\n  while (++columnIndex < mostCellsPerRow) {\n    const code = alignments[columnIndex]\n    let before = ''\n    let after = ''\n\n    if (code === 99 /* `c` */) {\n      before = ':'\n      after = ':'\n    } else if (code === 108 /* `l` */) {\n      before = ':'\n    } else if (code === 114 /* `r` */) {\n      after = ':'\n    }\n\n    // There *must* be at least one hyphen-minus in each alignment cell.\n    let size =\n      options.alignDelimiters === false\n        ? 1\n        : Math.max(\n            1,\n            longestCellByColumn[columnIndex] - before.length - after.length\n          )\n\n    const cell = before + '-'.repeat(size) + after\n\n    if (options.alignDelimiters !== false) {\n      size = before.length + size + after.length\n\n      if (size > longestCellByColumn[columnIndex]) {\n        longestCellByColumn[columnIndex] = size\n      }\n\n      sizes[columnIndex] = size\n    }\n\n    row[columnIndex] = cell\n  }\n\n  // Inject the alignment row.\n  cellMatrix.splice(1, 0, row)\n  sizeMatrix.splice(1, 0, sizes)\n\n  rowIndex = -1\n  /** @type {Array<string>} */\n  const lines = []\n\n  while (++rowIndex < cellMatrix.length) {\n    const row = cellMatrix[rowIndex]\n    const sizes = sizeMatrix[rowIndex]\n    columnIndex = -1\n    /** @type {Array<string>} */\n    const line = []\n\n    while (++columnIndex < mostCellsPerRow) {\n      const cell = row[columnIndex] || ''\n      let before = ''\n      let after = ''\n\n      if (options.alignDelimiters !== false) {\n        const size =\n          longestCellByColumn[columnIndex] - (sizes[columnIndex] || 0)\n        const code = alignments[columnIndex]\n\n        if (code === 114 /* `r` */) {\n          before = ' '.repeat(size)\n        } else if (code === 99 /* `c` */) {\n          if (size % 2) {\n            before = ' '.repeat(size / 2 + 0.5)\n            after = ' '.repeat(size / 2 - 0.5)\n          } else {\n            before = ' '.repeat(size / 2)\n            after = before\n          }\n        } else {\n          after = ' '.repeat(size)\n        }\n      }\n\n      if (options.delimiterStart !== false && !columnIndex) {\n        line.push('|')\n      }\n\n      if (\n        options.padding !== false &&\n        // Don’t add the opening space if we’re not aligning and the cell is\n        // empty: there will be a closing space.\n        !(options.alignDelimiters === false && cell === '') &&\n        (options.delimiterStart !== false || columnIndex)\n      ) {\n        line.push(' ')\n      }\n\n      if (options.alignDelimiters !== false) {\n        line.push(before)\n      }\n\n      line.push(cell)\n\n      if (options.alignDelimiters !== false) {\n        line.push(after)\n      }\n\n      if (options.padding !== false) {\n        line.push(' ')\n      }\n\n      if (\n        options.delimiterEnd !== false ||\n        columnIndex !== mostCellsPerRow - 1\n      ) {\n        line.push('|')\n      }\n    }\n\n    lines.push(\n      options.delimiterEnd === false\n        ? line.join('').replace(/ +$/, '')\n        : line.join('')\n    )\n  }\n\n  return lines.join('\\n')\n}\n\n/**\n * @param {string|null|undefined} [value]\n * @returns {string}\n */\nfunction serialize(value) {\n  return value === null || value === undefined ? '' : String(value)\n}\n\n/**\n * @param {string} value\n * @returns {number}\n */\nfunction defaultStringLength(value) {\n  return value.length\n}\n\n/**\n * @param {string|null|undefined} value\n * @returns {number}\n */\nfunction toAlignment(value) {\n  const code = typeof value === 'string' ? value.codePointAt(0) : 0\n\n  return code === 67 /* `C` */ || code === 99 /* `c` */\n    ? 99 /* `c` */\n    : code === 76 /* `L` */ || code === 108 /* `l` */\n    ? 108 /* `l` */\n    : code === 82 /* `R` */ || code === 114 /* `r` */\n    ? 114 /* `r` */\n    : 0\n}\n","/**\n * @typedef {import('mdast').Table} Table\n * @typedef {import('mdast').TableRow} TableRow\n * @typedef {import('mdast').TableCell} TableCell\n * @typedef {import('mdast').InlineCode} InlineCode\n *\n * @typedef {import('markdown-table').MarkdownTableOptions} MarkdownTableOptions\n *\n * @typedef {import('mdast-util-from-markdown').CompileContext} CompileContext\n * @typedef {import('mdast-util-from-markdown').Extension} FromMarkdownExtension\n * @typedef {import('mdast-util-from-markdown').Handle} FromMarkdownHandle\n *\n * @typedef {import('mdast-util-to-markdown').Options} ToMarkdownExtension\n * @typedef {import('mdast-util-to-markdown').Handle} ToMarkdownHandle\n * @typedef {import('mdast-util-to-markdown').Context} ToMarkdownContext\n * @typedef {import('mdast-util-to-markdown').SafeOptions} SafeOptions\n */\n\n/**\n * @typedef Options\n *   Configuration.\n * @property {boolean | null | undefined} [tableCellPadding=true]\n *   Whether to add a space of padding between delimiters and cells.\n * @property {boolean | null | undefined} [tablePipeAlign=true]\n *   Whether to align the delimiters.\n * @property {MarkdownTableOptions['stringLength'] | null | undefined} [stringLength]\n *   Function to detect the length of table cell content, used when aligning\n *   the delimiters between cells\n */\n\nimport {containerPhrasing} from 'mdast-util-to-markdown/lib/util/container-phrasing.js'\nimport {inlineCode} from 'mdast-util-to-markdown/lib/handle/inline-code.js'\nimport {markdownTable} from 'markdown-table'\n\n// To do: next major: use `state` and `state` utilities from `mdast-util-to-markdown`.\n// To do: next major: use `defaultHandlers.inlineCode`.\n// To do: next major: expose functions.\n\n/**\n * Extension for `mdast-util-from-markdown` to enable GFM tables.\n *\n * @type {FromMarkdownExtension}\n */\nexport const gfmTableFromMarkdown = {\n  enter: {\n    table: enterTable,\n    tableData: enterCell,\n    tableHeader: enterCell,\n    tableRow: enterRow\n  },\n  exit: {\n    codeText: exitCodeText,\n    table: exitTable,\n    tableData: exit,\n    tableHeader: exit,\n    tableRow: exit\n  }\n}\n\n/**\n * @this {CompileContext}\n * @type {FromMarkdownHandle}\n */\nfunction enterTable(token) {\n  /** @type {Array<'left' | 'right' | 'center' | 'none'>} */\n  // @ts-expect-error: `align` is custom.\n  const align = token._align\n  this.enter(\n    {\n      type: 'table',\n      align: align.map((d) => (d === 'none' ? null : d)),\n      children: []\n    },\n    token\n  )\n  this.setData('inTable', true)\n}\n\n/**\n * @this {CompileContext}\n * @type {FromMarkdownHandle}\n */\nfunction exitTable(token) {\n  this.exit(token)\n  this.setData('inTable')\n}\n\n/**\n * @this {CompileContext}\n * @type {FromMarkdownHandle}\n */\nfunction enterRow(token) {\n  this.enter({type: 'tableRow', children: []}, token)\n}\n\n/**\n * @this {CompileContext}\n * @type {FromMarkdownHandle}\n */\nfunction exit(token) {\n  this.exit(token)\n}\n\n/**\n * @this {CompileContext}\n * @type {FromMarkdownHandle}\n */\nfunction enterCell(token) {\n  this.enter({type: 'tableCell', children: []}, token)\n}\n\n// Overwrite the default code text data handler to unescape escaped pipes when\n// they are in tables.\n/**\n * @this {CompileContext}\n * @type {FromMarkdownHandle}\n */\nfunction exitCodeText(token) {\n  let value = this.resume()\n\n  if (this.getData('inTable')) {\n    value = value.replace(/\\\\([\\\\|])/g, replace)\n  }\n\n  const node = /** @type {InlineCode} */ (this.stack[this.stack.length - 1])\n  node.value = value\n  this.exit(token)\n}\n\n/**\n * @param {string} $0\n * @param {string} $1\n * @returns {string}\n */\nfunction replace($0, $1) {\n  // Pipes work, backslashes don’t (but can’t escape pipes).\n  return $1 === '|' ? $1 : $0\n}\n\n/**\n * Create an extension for `mdast-util-to-markdown` to enable GFM tables in\n * markdown.\n *\n * @param {Options | null | undefined} [options]\n *   Configuration.\n * @returns {ToMarkdownExtension}\n *   Extension for `mdast-util-to-markdown` to enable GFM tables.\n */\nexport function gfmTableToMarkdown(options) {\n  const settings = options || {}\n  const padding = settings.tableCellPadding\n  const alignDelimiters = settings.tablePipeAlign\n  const stringLength = settings.stringLength\n  const around = padding ? ' ' : '|'\n\n  return {\n    unsafe: [\n      {character: '\\r', inConstruct: 'tableCell'},\n      {character: '\\n', inConstruct: 'tableCell'},\n      // A pipe, when followed by a tab or space (padding), or a dash or colon\n      // (unpadded delimiter row), could result in a table.\n      {atBreak: true, character: '|', after: '[\\t :-]'},\n      // A pipe in a cell must be encoded.\n      {character: '|', inConstruct: 'tableCell'},\n      // A colon must be followed by a dash, in which case it could start a\n      // delimiter row.\n      {atBreak: true, character: ':', after: '-'},\n      // A delimiter row can also start with a dash, when followed by more\n      // dashes, a colon, or a pipe.\n      // This is a stricter version than the built in check for lists, thematic\n      // breaks, and setex heading underlines though:\n      // <https://github.com/syntax-tree/mdast-util-to-markdown/blob/51a2038/lib/unsafe.js#L57>\n      {atBreak: true, character: '-', after: '[:|-]'}\n    ],\n    handlers: {\n      table: handleTable,\n      tableRow: handleTableRow,\n      tableCell: handleTableCell,\n      inlineCode: inlineCodeWithTable\n    }\n  }\n\n  /**\n   * @type {ToMarkdownHandle}\n   * @param {Table} node\n   */\n  function handleTable(node, _, context, safeOptions) {\n    return serializeData(\n      handleTableAsData(node, context, safeOptions),\n      node.align\n    )\n  }\n\n  /**\n   * This function isn’t really used normally, because we handle rows at the\n   * table level.\n   * But, if someone passes in a table row, this ensures we make somewhat sense.\n   *\n   * @type {ToMarkdownHandle}\n   * @param {TableRow} node\n   */\n  function handleTableRow(node, _, context, safeOptions) {\n    const row = handleTableRowAsData(node, context, safeOptions)\n    const value = serializeData([row])\n    // `markdown-table` will always add an align row\n    return value.slice(0, value.indexOf('\\n'))\n  }\n\n  /**\n   * @type {ToMarkdownHandle}\n   * @param {TableCell} node\n   */\n  function handleTableCell(node, _, context, safeOptions) {\n    const exit = context.enter('tableCell')\n    const subexit = context.enter('phrasing')\n    const value = containerPhrasing(node, context, {\n      ...safeOptions,\n      before: around,\n      after: around\n    })\n    subexit()\n    exit()\n    return value\n  }\n\n  /**\n   * @param {Array<Array<string>>} matrix\n   * @param {Array<string | null | undefined> | null | undefined} [align]\n   */\n  function serializeData(matrix, align) {\n    return markdownTable(matrix, {\n      align,\n      // @ts-expect-error: `markdown-table` types should support `null`.\n      alignDelimiters,\n      // @ts-expect-error: `markdown-table` types should support `null`.\n      padding,\n      // @ts-expect-error: `markdown-table` types should support `null`.\n      stringLength\n    })\n  }\n\n  /**\n   * @param {Table} node\n   * @param {ToMarkdownContext} context\n   * @param {SafeOptions} safeOptions\n   */\n  function handleTableAsData(node, context, safeOptions) {\n    const children = node.children\n    let index = -1\n    /** @type {Array<Array<string>>} */\n    const result = []\n    const subexit = context.enter('table')\n\n    while (++index < children.length) {\n      result[index] = handleTableRowAsData(\n        children[index],\n        context,\n        safeOptions\n      )\n    }\n\n    subexit()\n\n    return result\n  }\n\n  /**\n   * @param {TableRow} node\n   * @param {ToMarkdownContext} context\n   * @param {SafeOptions} safeOptions\n   */\n  function handleTableRowAsData(node, context, safeOptions) {\n    const children = node.children\n    let index = -1\n    /** @type {Array<string>} */\n    const result = []\n    const subexit = context.enter('tableRow')\n\n    while (++index < children.length) {\n      // Note: the positional info as used here is incorrect.\n      // Making it correct would be impossible due to aligning cells?\n      // And it would need copy/pasting `markdown-table` into this project.\n      result[index] = handleTableCell(\n        children[index],\n        node,\n        context,\n        safeOptions\n      )\n    }\n\n    subexit()\n\n    return result\n  }\n\n  /**\n   * @type {ToMarkdownHandle}\n   * @param {InlineCode} node\n   */\n  function inlineCodeWithTable(node, parent, context) {\n    let value = inlineCode(node, parent, context)\n\n    if (context.stack.includes('tableCell')) {\n      value = value.replace(/\\|/g, '\\\\$&')\n    }\n\n    return value\n  }\n}\n","/**\n * @typedef {import('../types.js').State} State\n * @typedef {import('../types.js').Options} Options\n */\n\n/**\n * @param {State} state\n * @returns {Exclude<Options['bullet'], null | undefined>}\n */\nexport function checkBullet(state) {\n  const marker = state.options.bullet || '*'\n\n  if (marker !== '*' && marker !== '+' && marker !== '-') {\n    throw new Error(\n      'Cannot serialize items with `' +\n        marker +\n        '` for `options.bullet`, expected `*`, `+`, or `-`'\n    )\n  }\n\n  return marker\n}\n","/**\n * @typedef {import('../types.js').State} State\n * @typedef {import('../types.js').Options} Options\n */\n\n/**\n * @param {State} state\n * @returns {Exclude<Options['listItemIndent'], null | undefined>}\n */\nexport function checkListItemIndent(state) {\n  const style = state.options.listItemIndent || 'tab'\n\n  // To do: remove in a major.\n  // @ts-expect-error: deprecated.\n  if (style === 1 || style === '1') {\n    return 'one'\n  }\n\n  if (style !== 'tab' && style !== 'one' && style !== 'mixed') {\n    throw new Error(\n      'Cannot serialize items with `' +\n        style +\n        '` for `options.listItemIndent`, expected `tab`, `one`, or `mixed`'\n    )\n  }\n\n  return style\n}\n","/**\n * @typedef {import('mdast').ListItem} ListItem\n * @typedef {import('../types.js').Map} Map\n * @typedef {import('../types.js').Parent} Parent\n * @typedef {import('../types.js').State} State\n * @typedef {import('../types.js').Info} Info\n */\n\nimport {checkBullet} from '../util/check-bullet.js'\nimport {checkListItemIndent} from '../util/check-list-item-indent.js'\n\n/**\n * @param {ListItem} node\n * @param {Parent | undefined} parent\n * @param {State} state\n * @param {Info} info\n * @returns {string}\n */\nexport function listItem(node, parent, state, info) {\n  const listItemIndent = checkListItemIndent(state)\n  let bullet = state.bulletCurrent || checkBullet(state)\n\n  // Add the marker value for ordered lists.\n  if (parent && parent.type === 'list' && parent.ordered) {\n    bullet =\n      (typeof parent.start === 'number' && parent.start > -1\n        ? parent.start\n        : 1) +\n      (state.options.incrementListMarker === false\n        ? 0\n        : parent.children.indexOf(node)) +\n      bullet\n  }\n\n  let size = bullet.length + 1\n\n  if (\n    listItemIndent === 'tab' ||\n    (listItemIndent === 'mixed' &&\n      ((parent && parent.type === 'list' && parent.spread) || node.spread))\n  ) {\n    size = Math.ceil(size / 4) * 4\n  }\n\n  const tracker = state.createTracker(info)\n  tracker.move(bullet + ' '.repeat(size - bullet.length))\n  tracker.shift(size)\n  const exit = state.enter('listItem')\n  const value = state.indentLines(\n    state.containerFlow(node, tracker.current()),\n    map\n  )\n  exit()\n\n  return value\n\n  /** @type {Map} */\n  function map(line, index, blank) {\n    if (index) {\n      return (blank ? '' : ' '.repeat(size)) + line\n    }\n\n    return (blank ? bullet : bullet + ' '.repeat(size - bullet.length)) + line\n  }\n}\n","/**\n * @typedef {import('mdast').Content} Content\n * @typedef {import('mdast').ListItem} ListItem\n * @typedef {import('mdast').Paragraph} Paragraph\n * @typedef {import('mdast').Parent} Parent\n * @typedef {import('mdast').Root} Root\n * @typedef {import('mdast-util-from-markdown').CompileContext} CompileContext\n * @typedef {import('mdast-util-from-markdown').Extension} FromMarkdownExtension\n * @typedef {import('mdast-util-from-markdown').Handle} FromMarkdownHandle\n * @typedef {import('mdast-util-to-markdown').Options} ToMarkdownExtension\n * @typedef {import('mdast-util-to-markdown').Handle} ToMarkdownHandle\n */\n\n/**\n * @typedef {Extract<Root | Content, Parent>} Parents\n */\n\nimport {listItem} from 'mdast-util-to-markdown/lib/handle/list-item.js'\nimport {track} from 'mdast-util-to-markdown/lib/util/track.js'\n\n// To do: next major: rename `context` -> `state`, `safeOptions` -> `info`, use\n// `track` from `state`.\n// To do: next major: replace exports with functions.\n// To do: next major: use `defaulthandlers.listItem`.\n\n/**\n * Extension for `mdast-util-from-markdown` to enable GFM task list items.\n *\n * @type {FromMarkdownExtension}\n */\nexport const gfmTaskListItemFromMarkdown = {\n  exit: {\n    taskListCheckValueChecked: exitCheck,\n    taskListCheckValueUnchecked: exitCheck,\n    paragraph: exitParagraphWithTaskListItem\n  }\n}\n\n/**\n * Extension for `mdast-util-to-markdown` to enable GFM task list items.\n *\n * @type {ToMarkdownExtension}\n */\nexport const gfmTaskListItemToMarkdown = {\n  unsafe: [{atBreak: true, character: '-', after: '[:|-]'}],\n  handlers: {listItem: listItemWithTaskListItem}\n}\n\n/**\n * @this {CompileContext}\n * @type {FromMarkdownHandle}\n */\nfunction exitCheck(token) {\n  const node = /** @type {ListItem} */ (this.stack[this.stack.length - 2])\n  // We’re always in a paragraph, in a list item.\n  node.checked = token.type === 'taskListCheckValueChecked'\n}\n\n/**\n * @this {CompileContext}\n * @type {FromMarkdownHandle}\n */\nfunction exitParagraphWithTaskListItem(token) {\n  const parent = /** @type {Parents} */ (this.stack[this.stack.length - 2])\n\n  if (\n    parent &&\n    parent.type === 'listItem' &&\n    typeof parent.checked === 'boolean'\n  ) {\n    const node = /** @type {Paragraph} */ (this.stack[this.stack.length - 1])\n    const head = node.children[0]\n\n    if (head && head.type === 'text') {\n      const siblings = parent.children\n      let index = -1\n      /** @type {Paragraph | undefined} */\n      let firstParaghraph\n\n      while (++index < siblings.length) {\n        const sibling = siblings[index]\n        if (sibling.type === 'paragraph') {\n          firstParaghraph = sibling\n          break\n        }\n      }\n\n      if (firstParaghraph === node) {\n        // Must start with a space or a tab.\n        head.value = head.value.slice(1)\n\n        if (head.value.length === 0) {\n          node.children.shift()\n        } else if (\n          node.position &&\n          head.position &&\n          typeof head.position.start.offset === 'number'\n        ) {\n          head.position.start.column++\n          head.position.start.offset++\n          node.position.start = Object.assign({}, head.position.start)\n        }\n      }\n    }\n  }\n\n  this.exit(token)\n}\n\n/**\n * @type {ToMarkdownHandle}\n * @param {ListItem} node\n */\nfunction listItemWithTaskListItem(node, parent, context, safeOptions) {\n  const head = node.children[0]\n  const checkable =\n    typeof node.checked === 'boolean' && head && head.type === 'paragraph'\n  const checkbox = '[' + (node.checked ? 'x' : ' ') + '] '\n  const tracker = track(safeOptions)\n\n  if (checkable) {\n    tracker.move(checkbox)\n  }\n\n  let value = listItem(node, parent, context, {\n    ...safeOptions,\n    ...tracker.current()\n  })\n\n  if (checkable) {\n    value = value.replace(/^(?:[*+-]|\\d+\\.)([\\r\\n]| {1,3})/, check)\n  }\n\n  return value\n\n  /**\n   * @param {string} $0\n   * @returns {string}\n   */\n  function check($0) {\n    return $0 + checkbox\n  }\n}\n","/**\n * @typedef {import('mdast-util-from-markdown').Extension} FromMarkdownExtension\n * @typedef {import('mdast-util-to-markdown').Options} ToMarkdownExtension\n */\n\n/**\n * @typedef {import('mdast-util-gfm-table').Options} Options\n *   Configuration.\n */\n\nimport {\n  gfmAutolinkLiteralFromMarkdown,\n  gfmAutolinkLiteralToMarkdown\n} from 'mdast-util-gfm-autolink-literal'\nimport {\n  gfmFootnoteFromMarkdown,\n  gfmFootnoteToMarkdown\n} from 'mdast-util-gfm-footnote'\nimport {\n  gfmStrikethroughFromMarkdown,\n  gfmStrikethroughToMarkdown\n} from 'mdast-util-gfm-strikethrough'\nimport {gfmTableFromMarkdown, gfmTableToMarkdown} from 'mdast-util-gfm-table'\nimport {\n  gfmTaskListItemFromMarkdown,\n  gfmTaskListItemToMarkdown\n} from 'mdast-util-gfm-task-list-item'\n\n/**\n * Create an extension for `mdast-util-from-markdown` to enable GFM (autolink\n * literals, footnotes, strikethrough, tables, tasklists).\n *\n * @returns {Array<FromMarkdownExtension>}\n *   Extension for `mdast-util-from-markdown` to enable GFM (autolink literals,\n *   footnotes, strikethrough, tables, tasklists).\n */\nexport function gfmFromMarkdown() {\n  return [\n    gfmAutolinkLiteralFromMarkdown,\n    gfmFootnoteFromMarkdown(),\n    gfmStrikethroughFromMarkdown,\n    gfmTableFromMarkdown,\n    gfmTaskListItemFromMarkdown\n  ]\n}\n\n/**\n * Create an extension for `mdast-util-to-markdown` to enable GFM (autolink\n * literals, footnotes, strikethrough, tables, tasklists).\n *\n * @param {Options | null | undefined} [options]\n *   Configuration.\n * @returns {ToMarkdownExtension}\n *   Extension for `mdast-util-to-markdown` to enable GFM (autolink literals,\n *   footnotes, strikethrough, tables, tasklists).\n */\nexport function gfmToMarkdown(options) {\n  return {\n    extensions: [\n      gfmAutolinkLiteralToMarkdown,\n      gfmFootnoteToMarkdown(),\n      gfmStrikethroughToMarkdown,\n      gfmTableToMarkdown(options),\n      gfmTaskListItemToMarkdown\n    ]\n  }\n}\n","/**\n * @typedef {import('mdast').Root} Root\n * @typedef {import('micromark-extension-gfm').Options & import('mdast-util-gfm').Options} Options\n */\n\nimport {gfm} from 'micromark-extension-gfm'\nimport {gfmFromMarkdown, gfmToMarkdown} from 'mdast-util-gfm'\n\n/**\n * Plugin to support GFM (autolink literals, footnotes, strikethrough, tables, tasklists).\n *\n * @type {import('unified').Plugin<[Options?]|void[], Root>}\n */\nexport default function remarkGfm(options = {}) {\n  const data = this.data()\n\n  add('micromarkExtensions', gfm(options))\n  add('fromMarkdownExtensions', gfmFromMarkdown())\n  add('toMarkdownExtensions', gfmToMarkdown(options))\n\n  /**\n   * @param {string} field\n   * @param {unknown} value\n   */\n  function add(field, value) {\n    const list = /** @type {unknown[]} */ (\n      // Other extensions\n      /* c8 ignore next 2 */\n      data[field] ? data[field] : (data[field] = [])\n    )\n\n    list.push(value)\n  }\n}\n","/**\n * Parse space-separated tokens to an array of strings.\n *\n * @param {string} value\n *   Space-separated tokens.\n * @returns {Array<string>}\n *   List of tokens.\n */\nexport function parse(value) {\n  const input = String(value || '').trim()\n  return input ? input.split(/[ \\t\\n\\r\\f]+/g) : []\n}\n\n/**\n * Serialize an array of strings as space separated-tokens.\n *\n * @param {Array<string|number>} values\n *   List of tokens.\n * @returns {string}\n *   Space-separated tokens.\n */\nexport function stringify(values) {\n  return values.join(' ').trim()\n}\n","/**\n * @typedef {import('unist').Node} Node\n * @typedef {import('unist').Parent} Parent\n */\n\n/**\n * @typedef {Record<string, unknown>} Props\n * @typedef {null | undefined | string | Props | TestFunctionAnything | Array<string | Props | TestFunctionAnything>} Test\n *   Check for an arbitrary node, unaware of TypeScript inferral.\n *\n * @callback TestFunctionAnything\n *   Check if a node passes a test, unaware of TypeScript inferral.\n * @param {unknown} this\n *   The given context.\n * @param {Node} node\n *   A node.\n * @param {number | null | undefined} [index]\n *   The node’s position in its parent.\n * @param {Parent | null | undefined} [parent]\n *   The node’s parent.\n * @returns {boolean | void}\n *   Whether this node passes the test.\n */\n\n/**\n * @template {Node} Kind\n *   Node type.\n * @typedef {Kind['type'] | Partial<Kind> | TestFunctionPredicate<Kind> | Array<Kind['type'] | Partial<Kind> | TestFunctionPredicate<Kind>>} PredicateTest\n *   Check for a node that can be inferred by TypeScript.\n */\n\n/**\n * Check if a node passes a certain test.\n *\n * @template {Node} Kind\n *   Node type.\n * @callback TestFunctionPredicate\n *   Complex test function for a node that can be inferred by TypeScript.\n * @param {Node} node\n *   A node.\n * @param {number | null | undefined} [index]\n *   The node’s position in its parent.\n * @param {Parent | null | undefined} [parent]\n *   The node’s parent.\n * @returns {node is Kind}\n *   Whether this node passes the test.\n */\n\n/**\n * @callback AssertAnything\n *   Check that an arbitrary value is a node, unaware of TypeScript inferral.\n * @param {unknown} [node]\n *   Anything (typically a node).\n * @param {number | null | undefined} [index]\n *   The node’s position in its parent.\n * @param {Parent | null | undefined} [parent]\n *   The node’s parent.\n * @returns {boolean}\n *   Whether this is a node and passes a test.\n */\n\n/**\n * Check if a node is a node and passes a certain node test.\n *\n * @template {Node} Kind\n *   Node type.\n * @callback AssertPredicate\n *   Check that an arbitrary value is a specific node, aware of TypeScript.\n * @param {unknown} [node]\n *   Anything (typically a node).\n * @param {number | null | undefined} [index]\n *   The node’s position in its parent.\n * @param {Parent | null | undefined} [parent]\n *   The node’s parent.\n * @returns {node is Kind}\n *   Whether this is a node and passes a test.\n */\n\n/**\n * Check if `node` is a `Node` and whether it passes the given test.\n *\n * @param node\n *   Thing to check, typically `Node`.\n * @param test\n *   A check for a specific node.\n * @param index\n *   The node’s position in its parent.\n * @param parent\n *   The node’s parent.\n * @returns\n *   Whether `node` is a node and passes a test.\n */\nexport const is =\n  /**\n   * @type {(\n   *   (() => false) &\n   *   (<Kind extends Node = Node>(node: unknown, test: PredicateTest<Kind>, index: number, parent: Parent, context?: unknown) => node is Kind) &\n   *   (<Kind extends Node = Node>(node: unknown, test: PredicateTest<Kind>, index?: null | undefined, parent?: null | undefined, context?: unknown) => node is Kind) &\n   *   ((node: unknown, test: Test, index: number, parent: Parent, context?: unknown) => boolean) &\n   *   ((node: unknown, test?: Test, index?: null | undefined, parent?: null | undefined, context?: unknown) => boolean)\n   * )}\n   */\n  (\n    /**\n     * @param {unknown} [node]\n     * @param {Test} [test]\n     * @param {number | null | undefined} [index]\n     * @param {Parent | null | undefined} [parent]\n     * @param {unknown} [context]\n     * @returns {boolean}\n     */\n    // eslint-disable-next-line max-params\n    function is(node, test, index, parent, context) {\n      const check = convert(test)\n\n      if (\n        index !== undefined &&\n        index !== null &&\n        (typeof index !== 'number' ||\n          index < 0 ||\n          index === Number.POSITIVE_INFINITY)\n      ) {\n        throw new Error('Expected positive finite index')\n      }\n\n      if (\n        parent !== undefined &&\n        parent !== null &&\n        (!is(parent) || !parent.children)\n      ) {\n        throw new Error('Expected parent node')\n      }\n\n      if (\n        (parent === undefined || parent === null) !==\n        (index === undefined || index === null)\n      ) {\n        throw new Error('Expected both parent and index')\n      }\n\n      // @ts-expect-error Looks like a node.\n      return node && node.type && typeof node.type === 'string'\n        ? Boolean(check.call(context, node, index, parent))\n        : false\n    }\n  )\n\n/**\n * Generate an assertion from a test.\n *\n * Useful if you’re going to test many nodes, for example when creating a\n * utility where something else passes a compatible test.\n *\n * The created function is a bit faster because it expects valid input only:\n * a `node`, `index`, and `parent`.\n *\n * @param test\n *   *   when nullish, checks if `node` is a `Node`.\n *   *   when `string`, works like passing `(node) => node.type === test`.\n *   *   when `function` checks if function passed the node is true.\n *   *   when `object`, checks that all keys in test are in node, and that they have (strictly) equal values.\n *   *   when `array`, checks if any one of the subtests pass.\n * @returns\n *   An assertion.\n */\nexport const convert =\n  /**\n   * @type {(\n   *   (<Kind extends Node>(test: PredicateTest<Kind>) => AssertPredicate<Kind>) &\n   *   ((test?: Test) => AssertAnything)\n   * )}\n   */\n  (\n    /**\n     * @param {Test} [test]\n     * @returns {AssertAnything}\n     */\n    function (test) {\n      if (test === undefined || test === null) {\n        return ok\n      }\n\n      if (typeof test === 'string') {\n        return typeFactory(test)\n      }\n\n      if (typeof test === 'object') {\n        return Array.isArray(test) ? anyFactory(test) : propsFactory(test)\n      }\n\n      if (typeof test === 'function') {\n        return castFactory(test)\n      }\n\n      throw new Error('Expected function, string, or object as test')\n    }\n  )\n\n/**\n * @param {Array<string | Props | TestFunctionAnything>} tests\n * @returns {AssertAnything}\n */\nfunction anyFactory(tests) {\n  /** @type {Array<AssertAnything>} */\n  const checks = []\n  let index = -1\n\n  while (++index < tests.length) {\n    checks[index] = convert(tests[index])\n  }\n\n  return castFactory(any)\n\n  /**\n   * @this {unknown}\n   * @param {Array<unknown>} parameters\n   * @returns {boolean}\n   */\n  function any(...parameters) {\n    let index = -1\n\n    while (++index < checks.length) {\n      if (checks[index].call(this, ...parameters)) return true\n    }\n\n    return false\n  }\n}\n\n/**\n * Turn an object into a test for a node with a certain fields.\n *\n * @param {Props} check\n * @returns {AssertAnything}\n */\nfunction propsFactory(check) {\n  return castFactory(all)\n\n  /**\n   * @param {Node} node\n   * @returns {boolean}\n   */\n  function all(node) {\n    /** @type {string} */\n    let key\n\n    for (key in check) {\n      // @ts-expect-error: hush, it sure works as an index.\n      if (node[key] !== check[key]) return false\n    }\n\n    return true\n  }\n}\n\n/**\n * Turn a string into a test for a node with a certain type.\n *\n * @param {string} check\n * @returns {AssertAnything}\n */\nfunction typeFactory(check) {\n  return castFactory(type)\n\n  /**\n   * @param {Node} node\n   */\n  function type(node) {\n    return node && node.type === check\n  }\n}\n\n/**\n * Turn a custom test into a test for a node that passes that test.\n *\n * @param {TestFunctionAnything} check\n * @returns {AssertAnything}\n */\nfunction castFactory(check) {\n  return assertion\n\n  /**\n   * @this {unknown}\n   * @param {unknown} node\n   * @param {Array<unknown>} parameters\n   * @returns {boolean}\n   */\n  function assertion(node, ...parameters) {\n    return Boolean(\n      node &&\n        typeof node === 'object' &&\n        'type' in node &&\n        // @ts-expect-error: fine.\n        Boolean(check.call(this, node, ...parameters))\n    )\n  }\n}\n\nfunction ok() {\n  return true\n}\n","/**\n * @param {string} d\n * @returns {string}\n */\nexport function color(d) {\n  return d\n}\n","/**\n * @typedef {import('unist').Node} Node\n * @typedef {import('unist').Parent} Parent\n * @typedef {import('unist-util-is').Test} Test\n */\n\n/**\n * @typedef {boolean | 'skip'} Action\n *   Union of the action types.\n *\n * @typedef {number} Index\n *   Move to the sibling at `index` next (after node itself is completely\n *   traversed).\n *\n *   Useful if mutating the tree, such as removing the node the visitor is\n *   currently on, or any of its previous siblings.\n *   Results less than 0 or greater than or equal to `children.length` stop\n *   traversing the parent.\n *\n * @typedef {[(Action | null | undefined | void)?, (Index | null | undefined)?]} ActionTuple\n *   List with one or two values, the first an action, the second an index.\n *\n * @typedef {Action | ActionTuple | Index | null | undefined | void} VisitorResult\n *   Any value that can be returned from a visitor.\n */\n\n/**\n * @template {Node} [Visited=Node]\n *   Visited node type.\n * @template {Parent} [Ancestor=Parent]\n *   Ancestor type.\n * @callback Visitor\n *   Handle a node (matching `test`, if given).\n *\n *   Visitors are free to transform `node`.\n *   They can also transform the parent of node (the last of `ancestors`).\n *\n *   Replacing `node` itself, if `SKIP` is not returned, still causes its\n *   descendants to be walked (which is a bug).\n *\n *   When adding or removing previous siblings of `node` (or next siblings, in\n *   case of reverse), the `Visitor` should return a new `Index` to specify the\n *   sibling to traverse after `node` is traversed.\n *   Adding or removing next siblings of `node` (or previous siblings, in case\n *   of reverse) is handled as expected without needing to return a new `Index`.\n *\n *   Removing the children property of an ancestor still results in them being\n *   traversed.\n * @param {Visited} node\n *   Found node.\n * @param {Array<Ancestor>} ancestors\n *   Ancestors of `node`.\n * @returns {VisitorResult}\n *   What to do next.\n *\n *   An `Index` is treated as a tuple of `[CONTINUE, Index]`.\n *   An `Action` is treated as a tuple of `[Action]`.\n *\n *   Passing a tuple back only makes sense if the `Action` is `SKIP`.\n *   When the `Action` is `EXIT`, that action can be returned.\n *   When the `Action` is `CONTINUE`, `Index` can be returned.\n */\n\n/**\n * @template {Node} [Tree=Node]\n *   Tree type.\n * @template {Test} [Check=string]\n *   Test type.\n * @typedef {Visitor<import('./complex-types.js').Matches<import('./complex-types.js').InclusiveDescendant<Tree>, Check>, Extract<import('./complex-types.js').InclusiveDescendant<Tree>, Parent>>} BuildVisitor\n *   Build a typed `Visitor` function from a tree and a test.\n *\n *   It will infer which values are passed as `node` and which as `parents`.\n */\n\nimport {convert} from 'unist-util-is'\nimport {color} from './color.js'\n\n/**\n * Continue traversing as normal.\n */\nexport const CONTINUE = true\n\n/**\n * Stop traversing immediately.\n */\nexport const EXIT = false\n\n/**\n * Do not traverse this node’s children.\n */\nexport const SKIP = 'skip'\n\n/**\n * Visit nodes, with ancestral information.\n *\n * This algorithm performs *depth-first* *tree traversal* in *preorder*\n * (**NLR**) or if `reverse` is given, in *reverse preorder* (**NRL**).\n *\n * You can choose for which nodes `visitor` is called by passing a `test`.\n * For complex tests, you should test yourself in `visitor`, as it will be\n * faster and will have improved type information.\n *\n * Walking the tree is an intensive task.\n * Make use of the return values of the visitor when possible.\n * Instead of walking a tree multiple times, walk it once, use `unist-util-is`\n * to check if a node matches, and then perform different operations.\n *\n * You can change the tree.\n * See `Visitor` for more info.\n *\n * @param tree\n *   Tree to traverse.\n * @param test\n *   `unist-util-is`-compatible test\n * @param visitor\n *   Handle each node.\n * @param reverse\n *   Traverse in reverse preorder (NRL) instead of the default preorder (NLR).\n * @returns\n *   Nothing.\n */\nexport const visitParents =\n  /**\n   * @type {(\n   *   (<Tree extends Node, Check extends Test>(tree: Tree, test: Check, visitor: BuildVisitor<Tree, Check>, reverse?: boolean | null | undefined) => void) &\n   *   (<Tree extends Node>(tree: Tree, visitor: BuildVisitor<Tree>, reverse?: boolean | null | undefined) => void)\n   * )}\n   */\n  (\n    /**\n     * @param {Node} tree\n     * @param {Test} test\n     * @param {Visitor<Node>} visitor\n     * @param {boolean | null | undefined} [reverse]\n     * @returns {void}\n     */\n    function (tree, test, visitor, reverse) {\n      if (typeof test === 'function' && typeof visitor !== 'function') {\n        reverse = visitor\n        // @ts-expect-error no visitor given, so `visitor` is test.\n        visitor = test\n        test = null\n      }\n\n      const is = convert(test)\n      const step = reverse ? -1 : 1\n\n      factory(tree, undefined, [])()\n\n      /**\n       * @param {Node} node\n       * @param {number | undefined} index\n       * @param {Array<Parent>} parents\n       */\n      function factory(node, index, parents) {\n        /** @type {Record<string, unknown>} */\n        // @ts-expect-error: hush\n        const value = node && typeof node === 'object' ? node : {}\n\n        if (typeof value.type === 'string') {\n          const name =\n            // `hast`\n            typeof value.tagName === 'string'\n              ? value.tagName\n              : // `xast`\n              typeof value.name === 'string'\n              ? value.name\n              : undefined\n\n          Object.defineProperty(visit, 'name', {\n            value:\n              'node (' + color(node.type + (name ? '<' + name + '>' : '')) + ')'\n          })\n        }\n\n        return visit\n\n        function visit() {\n          /** @type {ActionTuple} */\n          let result = []\n          /** @type {ActionTuple} */\n          let subresult\n          /** @type {number} */\n          let offset\n          /** @type {Array<Parent>} */\n          let grandparents\n\n          if (!test || is(node, index, parents[parents.length - 1] || null)) {\n            result = toResult(visitor(node, parents))\n\n            if (result[0] === EXIT) {\n              return result\n            }\n          }\n\n          // @ts-expect-error looks like a parent.\n          if (node.children && result[0] !== SKIP) {\n            // @ts-expect-error looks like a parent.\n            offset = (reverse ? node.children.length : -1) + step\n            // @ts-expect-error looks like a parent.\n            grandparents = parents.concat(node)\n\n            // @ts-expect-error looks like a parent.\n            while (offset > -1 && offset < node.children.length) {\n              // @ts-expect-error looks like a parent.\n              subresult = factory(node.children[offset], offset, grandparents)()\n\n              if (subresult[0] === EXIT) {\n                return subresult\n              }\n\n              offset =\n                typeof subresult[1] === 'number' ? subresult[1] : offset + step\n            }\n          }\n\n          return result\n        }\n      }\n    }\n  )\n\n/**\n * Turn a return value into a clean result.\n *\n * @param {VisitorResult} value\n *   Valid return values from visitors.\n * @returns {ActionTuple}\n *   Clean result.\n */\nfunction toResult(value) {\n  if (Array.isArray(value)) {\n    return value\n  }\n\n  if (typeof value === 'number') {\n    return [CONTINUE, value]\n  }\n\n  return [value]\n}\n"],"names":["hasOwn","toStr","defineProperty","gOPD","isArray","arr","isPlainObject","obj","hasOwnConstructor","hasIsPrototypeOf","key","setProperty","target","options","getProperty","name","module","extend","src","copy","copyIsArray","clone","i","length","deep","COMMENT_REGEX","NEWLINE_REGEX","WHITESPACE_REGEX","PROPERTY_REGEX","COLON_REGEX","VALUE_REGEX","SEMICOLON_REGEX","TRIM_REGEX","NEWLINE","FORWARD_SLASH","ASTERISK","EMPTY_STRING","TYPE_COMMENT","TYPE_DECLARATION","style","lineno","column","updatePosition","str","lines","position","start","node","Position","whitespace","errorsList","error","msg","err","match","re","m","comments","rules","c","comment","pos","declaration","prop","val","ret","trim","declarations","decls","decl","ReactPropTypesSecret","emptyFunction","emptyFunctionWithReset","shim","props","propName","componentName","location","propFullName","secret","getShim","ReactPropTypes","b","d","e","f","g","h","k","l","n","p","q","t","u","v","a","r","exports","parse","StyleToObject","iterator","output","hasIterator","property","value","len","tokens","input","index","end","token","stringify","values","settings","Schema","normal","space","merge","definitions","own","create","definition","info","normalize","xlink","_","xml","caseSensitiveTransform","attributes","attribute","caseInsensitiveTransform","xmlns","aria","html","svg","valid","dash","cap","find","schema","Type","rest","camelcase","dashes","kebab","$0","checks","DefinedInfo","mask","mark","check","Info","powers","boolean","increment","booleanish","overloadedBoolean","number","spaceSeparated","commaSeparated","commaOrSpaceSeparated","protocols","uriTransformer","uri","url","first","colon","protocol","VFileMessage","reason","place","origin","parts","path","basename","dirname","extname","join","ext","assertPath","seenNonSlash","firstNonSlashEnd","extIndex","unmatchedSlash","startPart","startDot","preDotState","code","segments","joined","absolute","normalizeString","allowAboveRoot","result","lastSegmentLength","lastSlash","dots","lastSlashIndex","proc","cwd","isUrl","fileUrlOrPath","urlToPath","getPathFromURLPosix","pathname","third","order","VFile","buffer","assertNonEmpty","assertPart","stem","encoding","message","part","bail","prototype","trough","fns","pipeline","run","use","middlewareIndex","callback","next","fn","wrap","middelware","middleware","called","wrapped","parameters","fnExpectsCallback","done","exception","then","unified","base","transformers","attachers","namespace","frozen","freezeIndex","processor","data","freeze","runSync","process","processSync","destination","assertUnfrozen","attacher","transformer","addPlugin","addList","addPreset","add","plugin","plugins","thing","entry","doc","file","vfile","Parser","assertParser","newable","Compiler","assertCompiler","assertNode","executor","resolve","reject","tree","complete","assertDone","looksLikeAVFileValue","keys","asyncName","looksLikeAVFile","remarkParse","sanitizeUri","normalizeUri","questionMark","numberSign","slash","skip","replace","footer","state","listItems","def","content","id","safeId","referenceIndex","backReferences","backReference","tail","tailTail","listItem","visit","test","visitor","reverse","overload","parents","parent","pointStart","point","pointEnd","type","generated","cache","clean","identifier","blockquote","hardBreak","lang","properties","strikethrough","emphasis","footnoteReference","counter","reuseCounter","link","sup","footnote","footnoteById","no","heading","revert","subtype","suffix","contents","head","imageReference","inlineCode","text","linkReference","results","loose","listLoose","listItemLoose","children","paragraph","child","spread","list","root","strong","table","rows","firstRow","tableContent","body","tableRow","siblings","tagName","align","cellIndex","cells","cell","alignValue","tableCell","tab","trimLines","source","search","last","trimLine","startIndex","endIndex","thematicBreak","handlers","ignore","createState","dangerous","patch","applyData","oneBound","allBound","augment","left","right","ctx","one","from","to","hName","hChildren","hProperties","defaultUnknownHandler","nodes","toHast","foot","bridge","mutate","rehypeFilter","parent_","remove","hastToReact","tableElements","childrenToReact","context","childIndex","toReact","transform","parentSchema","addProperty","component","basic","getInputElement","getElementsBeforeCount","flattenPosition","count","parseStyle","styleReplacer","$1","changelog","deprecated","ReactMarkdown","deprecation","console","hastNode","wwwPrefix","tokenizeWwwPrefix","domain","tokenizeDomain","tokenizePath","trail","tokenizeTrail","emailDomainDotTrail","tokenizeEmailDomainDotTrail","wwwAutolink","tokenizeWwwAutolink","previousWww","protocolAutolink","tokenizeProtocolAutolink","previousProtocol","emailAutolink","tokenizeEmailAutolink","previousEmail","gfmAutolinkLiteral","effects","ok","nok","self","dot","gfmAtext","previousUnbalanced","atext","emailDomain","emailDomainAfter","emailDomainDot","wwwStart","wwwAfter","seen","protocolStart","protocolPrefixInside","protocolSlashesInside","afterProtocol","protocolAfter","size","wwwPrefixInside","wwwPrefixAfter","underscoreInLastSegment","underscoreInLastLastSegment","domainInside","domainAfter","domainAtPunctuation","sizeOpen","sizeClose","pathInside","pathAtPunctuation","trailCharRefStart","trailBracketAfter","trailCharRefInside","after","events","indent","tokenizeIndent","gfmFootnote","tokenizeDefinitionStart","tokenizeDefinitionContinuation","gfmFootnoteDefinitionEnd","tokenizeGfmFootnoteCall","tokenizePotentialGfmFootnoteCall","resolveToPotentialGfmFootnoteCall","defined","labelStart","call","marker","string","chunk","replacement","callStart","callData","callEscape","labelAtMarker","labelInside","labelAfter","labelEscape","whitespaceAfter","afterPrefix","gfmStrikethrough","single","tokenizer","tokenizeStrikethrough","resolveAllStrikethrough","open","nextEvents","insideSpan","previous","more","before","EditMap","addImpl","vecs","slice","editMap","at","gfmTableAlign","inDelimiterRow","event","alignIndex","gfmTable","tokenizeTable","resolveTable","sizeB","bodyRowStart","headRowBefore","headRowStart","headRowBreak","headDelimiterStart","headRowData","headRowEscape","headDelimiterBefore","headDelimiterValueBefore","headDelimiterCellBefore","headDelimiterNok","headDelimiterLeftAlignmentAfter","headDelimiterCellAfter","headDelimiterFiller","headDelimiterRightAlignmentAfter","bodyRowBreak","bodyRowData","bodyRowEscape","inFirstCellAwaitingPipe","rowKind","lastCell","afterHeadAwaitingFirstBodyRow","lastTableEnd","currentTable","currentBody","currentCell","map","flushTableEnd","flushCell","range","rowEnd","previousCell","groupName","valueName","getPoint","now","relatedStart","relatedEnd","valueToken","tableBody","exits","related","side","tasklistCheck","tokenizeTasklistCheck","gfmTaskListItem","inside","close","spaceThenNonSpace","gfm","gfmHtml","ccount","character","escapeStringRegexp","findAndReplace","ignored","pairs","toPairs","pairIndex","grandparent","handler","change","matchObject","toExpression","toFunction","inConstruct","notInConstruct","gfmAutolinkLiteralFromMarkdown","transformGfmAutolinkLiterals","enterLiteralAutolink","enterLiteralAutolinkValue","exitLiteralAutolink","exitLiteralAutolinkEmail","exitLiteralAutolinkHttp","exitLiteralAutolinkWww","gfmAutolinkLiteralToMarkdown","findUrl","findEmail","prefix","isCorrectDomain","splitUrl","label","trailExec","closingParenIndex","openingParens","closingParens","email","association","containerFlow","indexStack","tracker","between","eol","indentLines","line","patternCompile","pattern","patternInScope","stack","listInScope","none","safe","config","positions","infos","expression","numerical","escapeBackslashes","whole","track","lineShift","move","current","shift","chunks","footnoteReferencePeek","gfmFootnoteFromMarkdown","enterFootnoteDefinition","enterFootnoteDefinitionLabelString","enterFootnoteCall","enterFootnoteCallString","exitFootnoteDefinition","exitFootnoteDefinitionLabelString","exitFootnoteCall","exitFootnoteCallString","gfmFootnoteToMarkdown","footnoteDefinition","safeOptions","exit","subexit","blank","containerPhrasing","handle","constructsWithoutStrikethrough","handleDelete","peekDelete","gfmStrikethroughFromMarkdown","enterStrikethrough","exitStrikethrough","gfmStrikethroughToMarkdown","inlineCodePeek","sequence","markdownTable","stringLength","defaultStringLength","alignments","cellMatrix","sizeMatrix","longestCellByColumn","mostCellsPerRow","rowIndex","row","sizes","columnIndex","serialize","toAlignment","gfmTableFromMarkdown","enterTable","enterCell","enterRow","exitCodeText","exitTable","gfmTableToMarkdown","padding","alignDelimiters","around","handleTable","handleTableRow","handleTableCell","inlineCodeWithTable","serializeData","handleTableAsData","handleTableRowAsData","matrix","checkBullet","checkListItemIndent","listItemIndent","bullet","gfmTaskListItemFromMarkdown","exitCheck","exitParagraphWithTaskListItem","gfmTaskListItemToMarkdown","listItemWithTaskListItem","firstParaghraph","sibling","checkable","checkbox","gfmFromMarkdown","gfmToMarkdown","remarkGfm","field","is","convert","typeFactory","anyFactory","propsFactory","castFactory","tests","any","all","assertion","color","CONTINUE","EXIT","SKIP","visitParents","step","factory","subresult","offset","grandparents","toResult"],"sourceRoot":""}