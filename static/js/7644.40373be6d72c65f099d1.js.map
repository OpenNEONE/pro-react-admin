{"version":3,"file":"static/js/7644.40373be6d72c65f099d1.js","mappings":"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","sources":["webpack://pro-react-admin/./node_modules/lodash-es/clone.js","webpack://pro-react-admin/./node_modules/dagre-d3-es/src/graphlib/json.js","webpack://pro-react-admin/./node_modules/mermaid/dist/index-f9462f3f.js"],"sourcesContent":["import baseClone from './_baseClone.js';\n\n/** Used to compose bitmasks for cloning. */\nvar CLONE_SYMBOLS_FLAG = 4;\n\n/**\n * Creates a shallow clone of `value`.\n *\n * **Note:** This method is loosely based on the\n * [structured clone algorithm](https://mdn.io/Structured_clone_algorithm)\n * and supports cloning arrays, array buffers, booleans, date objects, maps,\n * numbers, `Object` objects, regexes, sets, strings, symbols, and typed\n * arrays. The own enumerable properties of `arguments` objects are cloned\n * as plain objects. An empty object is returned for uncloneable values such\n * as error objects, functions, DOM nodes, and WeakMaps.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to clone.\n * @returns {*} Returns the cloned value.\n * @see _.cloneDeep\n * @example\n *\n * var objects = [{ 'a': 1 }, { 'b': 2 }];\n *\n * var shallow = _.clone(objects);\n * console.log(shallow[0] === objects[0]);\n * // => true\n */\nfunction clone(value) {\n  return baseClone(value, CLONE_SYMBOLS_FLAG);\n}\n\nexport default clone;\n","import * as _ from 'lodash-es';\nimport { Graph } from './graph.js';\n\nexport { write, read };\n\nfunction write(g) {\n  var json = {\n    options: {\n      directed: g.isDirected(),\n      multigraph: g.isMultigraph(),\n      compound: g.isCompound(),\n    },\n    nodes: writeNodes(g),\n    edges: writeEdges(g),\n  };\n  if (!_.isUndefined(g.graph())) {\n    json.value = _.clone(g.graph());\n  }\n  return json;\n}\n\nfunction writeNodes(g) {\n  return _.map(g.nodes(), function (v) {\n    var nodeValue = g.node(v);\n    var parent = g.parent(v);\n    var node = { v: v };\n    if (!_.isUndefined(nodeValue)) {\n      node.value = nodeValue;\n    }\n    if (!_.isUndefined(parent)) {\n      node.parent = parent;\n    }\n    return node;\n  });\n}\n\nfunction writeEdges(g) {\n  return _.map(g.edges(), function (e) {\n    var edgeValue = g.edge(e);\n    var edge = { v: e.v, w: e.w };\n    if (!_.isUndefined(e.name)) {\n      edge.name = e.name;\n    }\n    if (!_.isUndefined(edgeValue)) {\n      edge.value = edgeValue;\n    }\n    return edge;\n  });\n}\n\nfunction read(json) {\n  var g = new Graph(json.options).setGraph(json.value);\n  _.each(json.nodes, function (entry) {\n    g.setNode(entry.v, entry.value);\n    if (entry.parent) {\n      g.setParent(entry.v, entry.parent);\n    }\n  });\n  _.each(json.edges, function (entry) {\n    g.setEdge({ v: entry.v, w: entry.w, name: entry.name }, entry.value);\n  });\n  return g;\n}\n","import { layout } from \"dagre-d3-es/src/dagre/index.js\";\nimport * as graphlibJson from \"dagre-d3-es/src/graphlib/json.js\";\nimport { c as createLabel, i as intersectRect, a as insertMarkers, b as clear$2, d as clear$3, u as updateNodeBounds, s as setNodeElem, e as insertNode, f as insertEdgeLabel, p as positionNode, g as insertEdge, h as positionEdgeLabel } from \"./edges-f15a7e05.js\";\nimport { l as log, m as evaluate, c as getConfig } from \"./mermaid-0d192ec3.js\";\nimport * as graphlib from \"dagre-d3-es/src/graphlib/index.js\";\nimport { c as createText } from \"./createText-80c3befb.js\";\nimport { select } from \"d3\";\nlet clusterDb = {};\nlet descendants = {};\nlet parents = {};\nconst clear$1 = () => {\n  descendants = {};\n  parents = {};\n  clusterDb = {};\n};\nconst isDescendant = (id, ancenstorId) => {\n  log.trace(\"In isDecendant\", ancenstorId, \" \", id, \" = \", descendants[ancenstorId].includes(id));\n  if (descendants[ancenstorId].includes(id)) {\n    return true;\n  }\n  return false;\n};\nconst edgeInCluster = (edge, clusterId) => {\n  log.info(\"Decendants of \", clusterId, \" is \", descendants[clusterId]);\n  log.info(\"Edge is \", edge);\n  if (edge.v === clusterId) {\n    return false;\n  }\n  if (edge.w === clusterId) {\n    return false;\n  }\n  if (!descendants[clusterId]) {\n    log.debug(\"Tilt, \", clusterId, \",not in decendants\");\n    return false;\n  }\n  return descendants[clusterId].includes(edge.v) || isDescendant(edge.v, clusterId) || isDescendant(edge.w, clusterId) || descendants[clusterId].includes(edge.w);\n};\nconst copy = (clusterId, graph, newGraph, rootId) => {\n  log.warn(\n    \"Copying children of \",\n    clusterId,\n    \"root\",\n    rootId,\n    \"data\",\n    graph.node(clusterId),\n    rootId\n  );\n  const nodes = graph.children(clusterId) || [];\n  if (clusterId !== rootId) {\n    nodes.push(clusterId);\n  }\n  log.warn(\"Copying (nodes) clusterId\", clusterId, \"nodes\", nodes);\n  nodes.forEach((node) => {\n    if (graph.children(node).length > 0) {\n      copy(node, graph, newGraph, rootId);\n    } else {\n      const data = graph.node(node);\n      log.info(\"cp \", node, \" to \", rootId, \" with parent \", clusterId);\n      newGraph.setNode(node, data);\n      if (rootId !== graph.parent(node)) {\n        log.warn(\"Setting parent\", node, graph.parent(node));\n        newGraph.setParent(node, graph.parent(node));\n      }\n      if (clusterId !== rootId && node !== clusterId) {\n        log.debug(\"Setting parent\", node, clusterId);\n        newGraph.setParent(node, clusterId);\n      } else {\n        log.info(\"In copy \", clusterId, \"root\", rootId, \"data\", graph.node(clusterId), rootId);\n        log.debug(\n          \"Not Setting parent for node=\",\n          node,\n          \"cluster!==rootId\",\n          clusterId !== rootId,\n          \"node!==clusterId\",\n          node !== clusterId\n        );\n      }\n      const edges = graph.edges(node);\n      log.debug(\"Copying Edges\", edges);\n      edges.forEach((edge) => {\n        log.info(\"Edge\", edge);\n        const data2 = graph.edge(edge.v, edge.w, edge.name);\n        log.info(\"Edge data\", data2, rootId);\n        try {\n          if (edgeInCluster(edge, rootId)) {\n            log.info(\"Copying as \", edge.v, edge.w, data2, edge.name);\n            newGraph.setEdge(edge.v, edge.w, data2, edge.name);\n            log.info(\"newGraph edges \", newGraph.edges(), newGraph.edge(newGraph.edges()[0]));\n          } else {\n            log.info(\n              \"Skipping copy of edge \",\n              edge.v,\n              \"-->\",\n              edge.w,\n              \" rootId: \",\n              rootId,\n              \" clusterId:\",\n              clusterId\n            );\n          }\n        } catch (e) {\n          log.error(e);\n        }\n      });\n    }\n    log.debug(\"Removing node\", node);\n    graph.removeNode(node);\n  });\n};\nconst extractDescendants = (id, graph) => {\n  const children = graph.children(id);\n  let res = [...children];\n  for (const child of children) {\n    parents[child] = id;\n    res = [...res, ...extractDescendants(child, graph)];\n  }\n  return res;\n};\nconst findNonClusterChild = (id, graph) => {\n  log.trace(\"Searching\", id);\n  const children = graph.children(id);\n  log.trace(\"Searching children of id \", id, children);\n  if (children.length < 1) {\n    log.trace(\"This is a valid node\", id);\n    return id;\n  }\n  for (const child of children) {\n    const _id = findNonClusterChild(child, graph);\n    if (_id) {\n      log.trace(\"Found replacement for\", id, \" => \", _id);\n      return _id;\n    }\n  }\n};\nconst getAnchorId = (id) => {\n  if (!clusterDb[id]) {\n    return id;\n  }\n  if (!clusterDb[id].externalConnections) {\n    return id;\n  }\n  if (clusterDb[id]) {\n    return clusterDb[id].id;\n  }\n  return id;\n};\nconst adjustClustersAndEdges = (graph, depth) => {\n  if (!graph || depth > 10) {\n    log.debug(\"Opting out, no graph \");\n    return;\n  } else {\n    log.debug(\"Opting in, graph \");\n  }\n  graph.nodes().forEach(function(id) {\n    const children = graph.children(id);\n    if (children.length > 0) {\n      log.warn(\n        \"Cluster identified\",\n        id,\n        \" Replacement id in edges: \",\n        findNonClusterChild(id, graph)\n      );\n      descendants[id] = extractDescendants(id, graph);\n      clusterDb[id] = { id: findNonClusterChild(id, graph), clusterData: graph.node(id) };\n    }\n  });\n  graph.nodes().forEach(function(id) {\n    const children = graph.children(id);\n    const edges = graph.edges();\n    if (children.length > 0) {\n      log.debug(\"Cluster identified\", id, descendants);\n      edges.forEach((edge) => {\n        if (edge.v !== id && edge.w !== id) {\n          const d1 = isDescendant(edge.v, id);\n          const d2 = isDescendant(edge.w, id);\n          if (d1 ^ d2) {\n            log.warn(\"Edge: \", edge, \" leaves cluster \", id);\n            log.warn(\"Decendants of XXX \", id, \": \", descendants[id]);\n            clusterDb[id].externalConnections = true;\n          }\n        }\n      });\n    } else {\n      log.debug(\"Not a cluster \", id, descendants);\n    }\n  });\n  graph.edges().forEach(function(e) {\n    const edge = graph.edge(e);\n    log.warn(\"Edge \" + e.v + \" -> \" + e.w + \": \" + JSON.stringify(e));\n    log.warn(\"Edge \" + e.v + \" -> \" + e.w + \": \" + JSON.stringify(graph.edge(e)));\n    let v = e.v;\n    let w = e.w;\n    log.warn(\n      \"Fix XXX\",\n      clusterDb,\n      \"ids:\",\n      e.v,\n      e.w,\n      \"Translating: \",\n      clusterDb[e.v],\n      \" --- \",\n      clusterDb[e.w]\n    );\n    if (clusterDb[e.v] && clusterDb[e.w] && clusterDb[e.v] === clusterDb[e.w]) {\n      log.warn(\"Fixing and trixing link to self - removing XXX\", e.v, e.w, e.name);\n      log.warn(\"Fixing and trixing - removing XXX\", e.v, e.w, e.name);\n      v = getAnchorId(e.v);\n      w = getAnchorId(e.w);\n      graph.removeEdge(e.v, e.w, e.name);\n      const specialId = e.w + \"---\" + e.v;\n      graph.setNode(specialId, {\n        domId: specialId,\n        id: specialId,\n        labelStyle: \"\",\n        labelText: edge.label,\n        padding: 0,\n        shape: \"labelRect\",\n        style: \"\"\n      });\n      const edge1 = structuredClone(edge);\n      const edge2 = structuredClone(edge);\n      edge1.label = \"\";\n      edge1.arrowTypeEnd = \"none\";\n      edge2.label = \"\";\n      edge1.fromCluster = e.v;\n      edge2.toCluster = e.v;\n      graph.setEdge(v, specialId, edge1, e.name + \"-cyclic-special\");\n      graph.setEdge(specialId, w, edge2, e.name + \"-cyclic-special\");\n    } else if (clusterDb[e.v] || clusterDb[e.w]) {\n      log.warn(\"Fixing and trixing - removing XXX\", e.v, e.w, e.name);\n      v = getAnchorId(e.v);\n      w = getAnchorId(e.w);\n      graph.removeEdge(e.v, e.w, e.name);\n      if (v !== e.v) {\n        edge.fromCluster = e.v;\n      }\n      if (w !== e.w) {\n        edge.toCluster = e.w;\n      }\n      log.warn(\"Fix Replacing with XXX\", v, w, e.name);\n      graph.setEdge(v, w, edge, e.name);\n    }\n  });\n  log.warn(\"Adjusted Graph\", graphlibJson.write(graph));\n  extractor(graph, 0);\n  log.trace(clusterDb);\n};\nconst extractor = (graph, depth) => {\n  log.warn(\"extractor - \", depth, graphlibJson.write(graph), graph.children(\"D\"));\n  if (depth > 10) {\n    log.error(\"Bailing out\");\n    return;\n  }\n  let nodes = graph.nodes();\n  let hasChildren = false;\n  for (const node of nodes) {\n    const children = graph.children(node);\n    hasChildren = hasChildren || children.length > 0;\n  }\n  if (!hasChildren) {\n    log.debug(\"Done, no node has children\", graph.nodes());\n    return;\n  }\n  log.debug(\"Nodes = \", nodes, depth);\n  for (const node of nodes) {\n    log.debug(\n      \"Extracting node\",\n      node,\n      clusterDb,\n      clusterDb[node] && !clusterDb[node].externalConnections,\n      !graph.parent(node),\n      graph.node(node),\n      graph.children(\"D\"),\n      \" Depth \",\n      depth\n    );\n    if (!clusterDb[node]) {\n      log.debug(\"Not a cluster\", node, depth);\n    } else if (!clusterDb[node].externalConnections && // !graph.parent(node) &&\n    graph.children(node) && graph.children(node).length > 0) {\n      log.warn(\n        \"Cluster without external connections, without a parent and with children\",\n        node,\n        depth\n      );\n      const graphSettings = graph.graph();\n      let dir = graphSettings.rankdir === \"TB\" ? \"LR\" : \"TB\";\n      if (clusterDb[node] && clusterDb[node].clusterData && clusterDb[node].clusterData.dir) {\n        dir = clusterDb[node].clusterData.dir;\n        log.warn(\"Fixing dir\", clusterDb[node].clusterData.dir, dir);\n      }\n      const clusterGraph = new graphlib.Graph({\n        multigraph: true,\n        compound: true\n      }).setGraph({\n        rankdir: dir,\n        // Todo: set proper spacing\n        nodesep: 50,\n        ranksep: 50,\n        marginx: 8,\n        marginy: 8\n      }).setDefaultEdgeLabel(function() {\n        return {};\n      });\n      log.warn(\"Old graph before copy\", graphlibJson.write(graph));\n      copy(node, graph, clusterGraph, node);\n      graph.setNode(node, {\n        clusterNode: true,\n        id: node,\n        clusterData: clusterDb[node].clusterData,\n        labelText: clusterDb[node].labelText,\n        graph: clusterGraph\n      });\n      log.warn(\"New graph after copy node: (\", node, \")\", graphlibJson.write(clusterGraph));\n      log.debug(\"Old graph after copy\", graphlibJson.write(graph));\n    } else {\n      log.warn(\n        \"Cluster ** \",\n        node,\n        \" **not meeting the criteria !externalConnections:\",\n        !clusterDb[node].externalConnections,\n        \" no parent: \",\n        !graph.parent(node),\n        \" children \",\n        graph.children(node) && graph.children(node).length > 0,\n        graph.children(\"D\"),\n        depth\n      );\n      log.debug(clusterDb);\n    }\n  }\n  nodes = graph.nodes();\n  log.warn(\"New list of nodes\", nodes);\n  for (const node of nodes) {\n    const data = graph.node(node);\n    log.warn(\" Now next level\", node, data);\n    if (data.clusterNode) {\n      extractor(data.graph, depth + 1);\n    }\n  }\n};\nconst sorter = (graph, nodes) => {\n  if (nodes.length === 0) {\n    return [];\n  }\n  let result = Object.assign(nodes);\n  nodes.forEach((node) => {\n    const children = graph.children(node);\n    const sorted = sorter(graph, children);\n    result = [...result, ...sorted];\n  });\n  return result;\n};\nconst sortNodesByHierarchy = (graph) => sorter(graph, graph.children());\nconst rect = (parent, node) => {\n  log.info(\"Creating subgraph rect for \", node.id, node);\n  const shapeSvg = parent.insert(\"g\").attr(\"class\", \"cluster\" + (node.class ? \" \" + node.class : \"\")).attr(\"id\", node.id);\n  const rect2 = shapeSvg.insert(\"rect\", \":first-child\");\n  const useHtmlLabels = evaluate(getConfig().flowchart.htmlLabels);\n  const label = shapeSvg.insert(\"g\").attr(\"class\", \"cluster-label\");\n  const text = node.labelType === \"markdown\" ? createText(label, node.labelText, { style: node.labelStyle, useHtmlLabels }) : label.node().appendChild(createLabel(node.labelText, node.labelStyle, void 0, true));\n  let bbox = text.getBBox();\n  if (evaluate(getConfig().flowchart.htmlLabels)) {\n    const div = text.children[0];\n    const dv = select(text);\n    bbox = div.getBoundingClientRect();\n    dv.attr(\"width\", bbox.width);\n    dv.attr(\"height\", bbox.height);\n  }\n  const padding = 0 * node.padding;\n  const halfPadding = padding / 2;\n  const width = node.width <= bbox.width + padding ? bbox.width + padding : node.width;\n  if (node.width <= bbox.width + padding) {\n    node.diff = (bbox.width - node.width) / 2 - node.padding / 2;\n  } else {\n    node.diff = -node.padding / 2;\n  }\n  log.trace(\"Data \", node, JSON.stringify(node));\n  rect2.attr(\"style\", node.style).attr(\"rx\", node.rx).attr(\"ry\", node.ry).attr(\"x\", node.x - width / 2).attr(\"y\", node.y - node.height / 2 - halfPadding).attr(\"width\", width).attr(\"height\", node.height + padding);\n  if (useHtmlLabels) {\n    label.attr(\n      \"transform\",\n      // This puts the labal on top of the box instead of inside it\n      \"translate(\" + (node.x - bbox.width / 2) + \", \" + (node.y - node.height / 2) + \")\"\n    );\n  } else {\n    label.attr(\n      \"transform\",\n      // This puts the labal on top of the box instead of inside it\n      \"translate(\" + node.x + \", \" + (node.y - node.height / 2) + \")\"\n    );\n  }\n  const rectBox = rect2.node().getBBox();\n  node.width = rectBox.width;\n  node.height = rectBox.height;\n  node.intersect = function(point) {\n    return intersectRect(node, point);\n  };\n  return shapeSvg;\n};\nconst noteGroup = (parent, node) => {\n  const shapeSvg = parent.insert(\"g\").attr(\"class\", \"note-cluster\").attr(\"id\", node.id);\n  const rect2 = shapeSvg.insert(\"rect\", \":first-child\");\n  const padding = 0 * node.padding;\n  const halfPadding = padding / 2;\n  rect2.attr(\"rx\", node.rx).attr(\"ry\", node.ry).attr(\"x\", node.x - node.width / 2 - halfPadding).attr(\"y\", node.y - node.height / 2 - halfPadding).attr(\"width\", node.width + padding).attr(\"height\", node.height + padding).attr(\"fill\", \"none\");\n  const rectBox = rect2.node().getBBox();\n  node.width = rectBox.width;\n  node.height = rectBox.height;\n  node.intersect = function(point) {\n    return intersectRect(node, point);\n  };\n  return shapeSvg;\n};\nconst roundedWithTitle = (parent, node) => {\n  const shapeSvg = parent.insert(\"g\").attr(\"class\", node.classes).attr(\"id\", node.id);\n  const rect2 = shapeSvg.insert(\"rect\", \":first-child\");\n  const label = shapeSvg.insert(\"g\").attr(\"class\", \"cluster-label\");\n  const innerRect = shapeSvg.append(\"rect\");\n  const text = label.node().appendChild(createLabel(node.labelText, node.labelStyle, void 0, true));\n  let bbox = text.getBBox();\n  if (evaluate(getConfig().flowchart.htmlLabels)) {\n    const div = text.children[0];\n    const dv = select(text);\n    bbox = div.getBoundingClientRect();\n    dv.attr(\"width\", bbox.width);\n    dv.attr(\"height\", bbox.height);\n  }\n  bbox = text.getBBox();\n  const padding = 0 * node.padding;\n  const halfPadding = padding / 2;\n  const width = node.width <= bbox.width + node.padding ? bbox.width + node.padding : node.width;\n  if (node.width <= bbox.width + node.padding) {\n    node.diff = (bbox.width + node.padding * 0 - node.width) / 2;\n  } else {\n    node.diff = -node.padding / 2;\n  }\n  rect2.attr(\"class\", \"outer\").attr(\"x\", node.x - width / 2 - halfPadding).attr(\"y\", node.y - node.height / 2 - halfPadding).attr(\"width\", width + padding).attr(\"height\", node.height + padding);\n  innerRect.attr(\"class\", \"inner\").attr(\"x\", node.x - width / 2 - halfPadding).attr(\"y\", node.y - node.height / 2 - halfPadding + bbox.height - 1).attr(\"width\", width + padding).attr(\"height\", node.height + padding - bbox.height - 3);\n  label.attr(\n    \"transform\",\n    \"translate(\" + (node.x - bbox.width / 2) + \", \" + (node.y - node.height / 2 - node.padding / 3 + (evaluate(getConfig().flowchart.htmlLabels) ? 5 : 3)) + \")\"\n  );\n  const rectBox = rect2.node().getBBox();\n  node.height = rectBox.height;\n  node.intersect = function(point) {\n    return intersectRect(node, point);\n  };\n  return shapeSvg;\n};\nconst divider = (parent, node) => {\n  const shapeSvg = parent.insert(\"g\").attr(\"class\", node.classes).attr(\"id\", node.id);\n  const rect2 = shapeSvg.insert(\"rect\", \":first-child\");\n  const padding = 0 * node.padding;\n  const halfPadding = padding / 2;\n  rect2.attr(\"class\", \"divider\").attr(\"x\", node.x - node.width / 2 - halfPadding).attr(\"y\", node.y - node.height / 2).attr(\"width\", node.width + padding).attr(\"height\", node.height + padding);\n  const rectBox = rect2.node().getBBox();\n  node.width = rectBox.width;\n  node.height = rectBox.height;\n  node.diff = -node.padding / 2;\n  node.intersect = function(point) {\n    return intersectRect(node, point);\n  };\n  return shapeSvg;\n};\nconst shapes = { rect, roundedWithTitle, noteGroup, divider };\nlet clusterElems = {};\nconst insertCluster = (elem, node) => {\n  log.trace(\"Inserting cluster\");\n  const shape = node.shape || \"rect\";\n  clusterElems[node.id] = shapes[shape](elem, node);\n};\nconst clear = () => {\n  clusterElems = {};\n};\nconst recursiveRender = async (_elem, graph, diagramtype, id, parentCluster) => {\n  log.info(\"Graph in recursive render: XXX\", graphlibJson.write(graph), parentCluster);\n  const dir = graph.graph().rankdir;\n  log.trace(\"Dir in recursive render - dir:\", dir);\n  const elem = _elem.insert(\"g\").attr(\"class\", \"root\");\n  if (!graph.nodes()) {\n    log.info(\"No nodes found for\", graph);\n  } else {\n    log.info(\"Recursive render XXX\", graph.nodes());\n  }\n  if (graph.edges().length > 0) {\n    log.trace(\"Recursive edges\", graph.edge(graph.edges()[0]));\n  }\n  const clusters = elem.insert(\"g\").attr(\"class\", \"clusters\");\n  const edgePaths = elem.insert(\"g\").attr(\"class\", \"edgePaths\");\n  const edgeLabels = elem.insert(\"g\").attr(\"class\", \"edgeLabels\");\n  const nodes = elem.insert(\"g\").attr(\"class\", \"nodes\");\n  await Promise.all(\n    graph.nodes().map(async function(v) {\n      const node = graph.node(v);\n      if (parentCluster !== void 0) {\n        const data = JSON.parse(JSON.stringify(parentCluster.clusterData));\n        log.info(\"Setting data for cluster XXX (\", v, \") \", data, parentCluster);\n        graph.setNode(parentCluster.id, data);\n        if (!graph.parent(v)) {\n          log.trace(\"Setting parent\", v, parentCluster.id);\n          graph.setParent(v, parentCluster.id, data);\n        }\n      }\n      log.info(\"(Insert) Node XXX\" + v + \": \" + JSON.stringify(graph.node(v)));\n      if (node && node.clusterNode) {\n        log.info(\"Cluster identified\", v, node.width, graph.node(v));\n        const o = await recursiveRender(nodes, node.graph, diagramtype, id, graph.node(v));\n        const newEl = o.elem;\n        updateNodeBounds(node, newEl);\n        node.diff = o.diff || 0;\n        log.info(\"Node bounds (abc123)\", v, node, node.width, node.x, node.y);\n        setNodeElem(newEl, node);\n        log.warn(\"Recursive render complete \", newEl, node);\n      } else {\n        if (graph.children(v).length > 0) {\n          log.info(\"Cluster - the non recursive path XXX\", v, node.id, node, graph);\n          log.info(findNonClusterChild(node.id, graph));\n          clusterDb[node.id] = { id: findNonClusterChild(node.id, graph), node };\n        } else {\n          log.info(\"Node - the non recursive path\", v, node.id, node);\n          await insertNode(nodes, graph.node(v), dir);\n        }\n      }\n    })\n  );\n  graph.edges().forEach(function(e) {\n    const edge = graph.edge(e.v, e.w, e.name);\n    log.info(\"Edge \" + e.v + \" -> \" + e.w + \": \" + JSON.stringify(e));\n    log.info(\"Edge \" + e.v + \" -> \" + e.w + \": \", e, \" \", JSON.stringify(graph.edge(e)));\n    log.info(\"Fix\", clusterDb, \"ids:\", e.v, e.w, \"Translateing: \", clusterDb[e.v], clusterDb[e.w]);\n    insertEdgeLabel(edgeLabels, edge);\n  });\n  graph.edges().forEach(function(e) {\n    log.info(\"Edge \" + e.v + \" -> \" + e.w + \": \" + JSON.stringify(e));\n  });\n  log.info(\"#############################################\");\n  log.info(\"###                Layout                 ###\");\n  log.info(\"#############################################\");\n  log.info(graph);\n  layout(graph);\n  log.info(\"Graph after layout:\", graphlibJson.write(graph));\n  let diff = 0;\n  sortNodesByHierarchy(graph).forEach(function(v) {\n    const node = graph.node(v);\n    log.info(\"Position \" + v + \": \" + JSON.stringify(graph.node(v)));\n    log.info(\n      \"Position \" + v + \": (\" + node.x,\n      \",\" + node.y,\n      \") width: \",\n      node.width,\n      \" height: \",\n      node.height\n    );\n    if (node && node.clusterNode) {\n      positionNode(node);\n    } else {\n      if (graph.children(v).length > 0) {\n        insertCluster(clusters, node);\n        clusterDb[node.id].node = node;\n      } else {\n        positionNode(node);\n      }\n    }\n  });\n  graph.edges().forEach(function(e) {\n    const edge = graph.edge(e);\n    log.info(\"Edge \" + e.v + \" -> \" + e.w + \": \" + JSON.stringify(edge), edge);\n    const paths = insertEdge(edgePaths, e, edge, clusterDb, diagramtype, graph, id);\n    positionEdgeLabel(edge, paths);\n  });\n  graph.nodes().forEach(function(v) {\n    const n = graph.node(v);\n    log.info(v, n.type, n.diff);\n    if (n.type === \"group\") {\n      diff = n.diff;\n    }\n  });\n  return { elem, diff };\n};\nconst render = async (elem, graph, markers, diagramtype, id) => {\n  insertMarkers(elem, markers, diagramtype, id);\n  clear$2();\n  clear$3();\n  clear();\n  clear$1();\n  log.warn(\"Graph at first:\", JSON.stringify(graphlibJson.write(graph)));\n  adjustClustersAndEdges(graph);\n  log.warn(\"Graph after:\", JSON.stringify(graphlibJson.write(graph)));\n  await recursiveRender(elem, graph, diagramtype, id);\n};\nexport {\n  render as r\n};\n"],"names":["CLONE_SYMBOLS_FLAG","clone","value","write","g","json","writeNodes","writeEdges","nodeValue","parent","node","e","edgeValue","edge","read","entry","clusterDb","descendants","parents","clear$1","isDescendant","id","ancenstorId","edgeInCluster","clusterId","copy","graph","newGraph","rootId","nodes","data","edges","data2","extractDescendants","children","res","child","findNonClusterChild","_id","getAnchorId","adjustClustersAndEdges","depth","d1","d2","v","w","specialId","edge1","edge2","extractor","hasChildren","dir","clusterGraph","sorter","result","sorted","sortNodesByHierarchy","shapes","shapeSvg","rect2","useHtmlLabels","label","text","bbox","div","dv","padding","halfPadding","width","rectBox","point","innerRect","clusterElems","insertCluster","elem","shape","clear","recursiveRender","_elem","diagramtype","parentCluster","clusters","edgePaths","edgeLabels","o","newEl","diff","paths","n","render","markers"],"sourceRoot":""}